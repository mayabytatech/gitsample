[2018-04-24 14:56:11,003] INFO SchemaRegistryConfig values: 
	metric.reporters = []
	kafkastore.sasl.kerberos.kinit.cmd = /usr/bin/kinit
	response.mediatype.default = application/vnd.schemaregistry.v1+json
	kafkastore.ssl.trustmanager.algorithm = PKIX
	authentication.realm = 
	ssl.keystore.type = JKS
	kafkastore.topic = _schemas
	metrics.jmx.prefix = kafka.schema.registry
	kafkastore.ssl.enabled.protocols = TLSv1.2,TLSv1.1,TLSv1
	kafkastore.topic.replication.factor = 3
	ssl.truststore.password = [hidden]
	kafkastore.timeout.ms = 500
	host.name = maya
	kafkastore.bootstrap.servers = []
	schema.registry.zk.namespace = schema_registry
	kafkastore.sasl.kerberos.ticket.renew.window.factor = 0.8
	kafkastore.sasl.kerberos.service.name = 
	schema.registry.resource.extension.class = 
	ssl.endpoint.identification.algorithm = 
	compression.enable = false
	kafkastore.ssl.truststore.type = JKS
	avro.compatibility.level = backward
	kafkastore.ssl.protocol = TLS
	kafkastore.ssl.provider = 
	kafkastore.ssl.truststore.location = 
	response.mediatype.preferred = [application/vnd.schemaregistry.v1+json, application/vnd.schemaregistry+json, application/json]
	kafkastore.ssl.keystore.type = JKS
	ssl.truststore.type = JKS
	kafkastore.ssl.truststore.password = [hidden]
	access.control.allow.origin = 
	ssl.truststore.location = 
	ssl.keystore.password = [hidden]
	port = 8081
	kafkastore.ssl.keystore.location = 
	master.eligibility = true
	ssl.client.auth = false
	kafkastore.ssl.keystore.password = [hidden]
	kafkastore.security.protocol = PLAINTEXT
	ssl.trustmanager.algorithm = 
	authentication.method = NONE
	request.logger.name = io.confluent.rest-utils.requests
	ssl.key.password = [hidden]
	kafkastore.zk.session.timeout.ms = 30000
	kafkastore.sasl.mechanism = GSSAPI
	kafkastore.sasl.kerberos.ticket.renew.jitter = 0.05
	kafkastore.ssl.key.password = [hidden]
	zookeeper.set.acl = false
	schema.registry.inter.instance.protocol = http
	authentication.roles = [*]
	metrics.num.samples = 2
	ssl.protocol = TLS
	schema.registry.group.id = schema-registry
	kafkastore.ssl.keymanager.algorithm = SunX509
	kafkastore.connection.url = localhost:2181
	debug = false
	listeners = [http://0.0.0.0:8081]
	kafkastore.group.id = 
	ssl.provider = 
	ssl.enabled.protocols = []
	shutdown.graceful.ms = 1000
	ssl.keystore.location = 
	ssl.cipher.suites = []
	kafkastore.ssl.endpoint.identification.algorithm = 
	kafkastore.ssl.cipher.suites = 
	access.control.allow.methods = 
	kafkastore.sasl.kerberos.min.time.before.relogin = 60000
	ssl.keymanager.algorithm = 
	metrics.sample.window.ms = 30000
	kafkastore.init.timeout.ms = 60000
 (io.confluent.kafka.schemaregistry.rest.SchemaRegistryConfig)
[2018-04-24 14:56:11,476] INFO Logging initialized @1161ms (org.eclipse.jetty.util.log)
[2018-04-24 14:56:12,812] INFO Initializing KafkaStore with broker endpoints: PLAINTEXT://maya:9092 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-24 14:56:13,308] INFO Creating schemas topic _schemas (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-24 14:56:13,311] WARN Creating the schema topic _schemas using a replication factor of 1, which is less than the desired one of 3. If this is a production environment, it's crucial to add more brokers and increase the replication factor of the topic. (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-24 14:56:14,171] INFO Initialized last consumed offset to -1 (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-04-24 14:56:14,172] INFO [kafka-store-reader-thread-_schemas]: Starting (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-04-24 14:56:14,540] INFO Wait to catch up until the offset of the last message at 0 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-24 14:56:14,595] INFO Joining schema registry with Zookeeper-based coordination (io.confluent.kafka.schemaregistry.storage.KafkaSchemaRegistry)
[2018-04-24 14:56:14,683] INFO Created schema registry namespace localhost:2181/schema_registry (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-04-24 14:56:14,777] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-04-24 14:56:14,824] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-04-24 14:56:14,850] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-24 14:56:15,058] INFO Adding listener: http://0.0.0.0:8081 (io.confluent.rest.Application)
[2018-04-24 14:56:15,135] INFO jetty-9.2.22.v20170606 (org.eclipse.jetty.server.Server)
[2018-04-24 14:56:16,272] INFO HV000001: Hibernate Validator 5.1.3.Final (org.hibernate.validator.internal.util.Version)
[2018-04-24 14:56:16,506] INFO Started o.e.j.s.ServletContextHandler@5ef6ae06{/,null,AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler)
[2018-04-24 14:56:16,535] INFO Started NetworkTrafficServerConnector@3568f9d2{HTTP/1.1}{0.0.0.0:8081} (org.eclipse.jetty.server.NetworkTrafficServerConnector)
[2018-04-24 14:56:16,537] INFO Started @6226ms (org.eclipse.jetty.server.Server)
[2018-04-24 14:56:16,537] INFO Server started, listening for requests... (io.confluent.kafka.schemaregistry.rest.SchemaRegistryMain)
[2018-04-24 15:15:55,641] INFO SchemaRegistryConfig values: 
	metric.reporters = []
	kafkastore.sasl.kerberos.kinit.cmd = /usr/bin/kinit
	response.mediatype.default = application/vnd.schemaregistry.v1+json
	kafkastore.ssl.trustmanager.algorithm = PKIX
	authentication.realm = 
	ssl.keystore.type = JKS
	kafkastore.topic = _schemas
	metrics.jmx.prefix = kafka.schema.registry
	kafkastore.ssl.enabled.protocols = TLSv1.2,TLSv1.1,TLSv1
	kafkastore.topic.replication.factor = 3
	ssl.truststore.password = [hidden]
	kafkastore.timeout.ms = 500
	host.name = maya
	kafkastore.bootstrap.servers = []
	schema.registry.zk.namespace = schema_registry
	kafkastore.sasl.kerberos.ticket.renew.window.factor = 0.8
	kafkastore.sasl.kerberos.service.name = 
	schema.registry.resource.extension.class = 
	ssl.endpoint.identification.algorithm = 
	compression.enable = false
	kafkastore.ssl.truststore.type = JKS
	avro.compatibility.level = backward
	kafkastore.ssl.protocol = TLS
	kafkastore.ssl.provider = 
	kafkastore.ssl.truststore.location = 
	response.mediatype.preferred = [application/vnd.schemaregistry.v1+json, application/vnd.schemaregistry+json, application/json]
	kafkastore.ssl.keystore.type = JKS
	ssl.truststore.type = JKS
	kafkastore.ssl.truststore.password = [hidden]
	access.control.allow.origin = 
	ssl.truststore.location = 
	ssl.keystore.password = [hidden]
	port = 8081
	kafkastore.ssl.keystore.location = 
	master.eligibility = true
	ssl.client.auth = false
	kafkastore.ssl.keystore.password = [hidden]
	kafkastore.security.protocol = PLAINTEXT
	ssl.trustmanager.algorithm = 
	authentication.method = NONE
	request.logger.name = io.confluent.rest-utils.requests
	ssl.key.password = [hidden]
	kafkastore.zk.session.timeout.ms = 30000
	kafkastore.sasl.mechanism = GSSAPI
	kafkastore.sasl.kerberos.ticket.renew.jitter = 0.05
	kafkastore.ssl.key.password = [hidden]
	zookeeper.set.acl = false
	schema.registry.inter.instance.protocol = http
	authentication.roles = [*]
	metrics.num.samples = 2
	ssl.protocol = TLS
	schema.registry.group.id = schema-registry
	kafkastore.ssl.keymanager.algorithm = SunX509
	kafkastore.connection.url = localhost:2181
	debug = false
	listeners = [http://0.0.0.0:8081]
	kafkastore.group.id = 
	ssl.provider = 
	ssl.enabled.protocols = []
	shutdown.graceful.ms = 1000
	ssl.keystore.location = 
	ssl.cipher.suites = []
	kafkastore.ssl.endpoint.identification.algorithm = 
	kafkastore.ssl.cipher.suites = 
	access.control.allow.methods = 
	kafkastore.sasl.kerberos.min.time.before.relogin = 60000
	ssl.keymanager.algorithm = 
	metrics.sample.window.ms = 30000
	kafkastore.init.timeout.ms = 60000
 (io.confluent.kafka.schemaregistry.rest.SchemaRegistryConfig)
[2018-04-24 15:15:56,069] INFO Logging initialized @1444ms (org.eclipse.jetty.util.log)
[2018-04-24 15:15:57,595] INFO Initializing KafkaStore with broker endpoints: PLAINTEXT://maya:9092 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-24 15:15:58,007] INFO Creating schemas topic _schemas (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-24 15:15:58,010] WARN Creating the schema topic _schemas using a replication factor of 1, which is less than the desired one of 3. If this is a production environment, it's crucial to add more brokers and increase the replication factor of the topic. (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-24 15:15:58,543] INFO Initialized last consumed offset to -1 (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-04-24 15:15:58,544] INFO [kafka-store-reader-thread-_schemas]: Starting (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-04-24 15:15:58,894] INFO Wait to catch up until the offset of the last message at 0 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-24 15:15:58,989] INFO Joining schema registry with Zookeeper-based coordination (io.confluent.kafka.schemaregistry.storage.KafkaSchemaRegistry)
[2018-04-24 15:15:59,054] INFO Created schema registry namespace localhost:2181/schema_registry (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-04-24 15:15:59,145] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-04-24 15:15:59,173] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-24 15:15:59,188] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-04-24 15:15:59,280] INFO Adding listener: http://0.0.0.0:8081 (io.confluent.rest.Application)
[2018-04-24 15:15:59,352] INFO jetty-9.2.22.v20170606 (org.eclipse.jetty.server.Server)
[2018-04-24 15:16:00,386] INFO HV000001: Hibernate Validator 5.1.3.Final (org.hibernate.validator.internal.util.Version)
[2018-04-24 15:16:00,597] INFO Started o.e.j.s.ServletContextHandler@52851b44{/,null,AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler)
[2018-04-24 15:16:00,615] INFO Started NetworkTrafficServerConnector@5a18cd76{HTTP/1.1}{0.0.0.0:8081} (org.eclipse.jetty.server.NetworkTrafficServerConnector)
[2018-04-24 15:16:00,617] INFO Started @5995ms (org.eclipse.jetty.server.Server)
[2018-04-24 15:16:00,618] INFO Server started, listening for requests... (io.confluent.kafka.schemaregistry.rest.SchemaRegistryMain)
[2018-04-24 15:22:57,676] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-24 15:22:57,754] INFO 127.0.0.1 - - [24/Apr/2018:15:22:57 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  637 (io.confluent.rest-utils.requests)
[2018-04-24 15:22:58,576] INFO 127.0.0.1 - - [24/Apr/2018:15:22:58 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 256  10 (io.confluent.rest-utils.requests)
[2018-04-24 15:24:50,345] INFO 127.0.0.1 - - [24/Apr/2018:15:24:50 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  8 (io.confluent.rest-utils.requests)
[2018-04-24 15:24:50,824] INFO 127.0.0.1 - - [24/Apr/2018:15:24:50 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 256  5 (io.confluent.rest-utils.requests)
[2018-04-24 16:16:25,215] INFO 127.0.0.1 - - [24/Apr/2018:16:16:25 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  57 (io.confluent.rest-utils.requests)
[2018-04-24 16:16:25,994] INFO 127.0.0.1 - - [24/Apr/2018:16:16:25 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 256  6 (io.confluent.rest-utils.requests)
[2018-04-24 16:18:05,253] INFO 127.0.0.1 - - [24/Apr/2018:16:18:05 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  47 (io.confluent.rest-utils.requests)
[2018-04-24 16:18:05,934] INFO 127.0.0.1 - - [24/Apr/2018:16:18:05 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 256  26 (io.confluent.rest-utils.requests)
[2018-04-24 16:29:01,642] INFO 127.0.0.1 - - [24/Apr/2018:16:29:01 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  16 (io.confluent.rest-utils.requests)
[2018-04-24 16:29:02,181] INFO 127.0.0.1 - - [24/Apr/2018:16:29:02 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 256  21 (io.confluent.rest-utils.requests)
[2018-04-24 16:30:48,239] INFO 127.0.0.1 - - [24/Apr/2018:16:30:48 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  46 (io.confluent.rest-utils.requests)
[2018-04-24 16:30:48,742] INFO 127.0.0.1 - - [24/Apr/2018:16:30:48 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 256  3 (io.confluent.rest-utils.requests)
[2018-04-24 16:31:31,800] INFO 127.0.0.1 - - [24/Apr/2018:16:31:31 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  24 (io.confluent.rest-utils.requests)
[2018-04-24 16:31:32,663] INFO 127.0.0.1 - - [24/Apr/2018:16:31:32 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 256  69 (io.confluent.rest-utils.requests)
[2018-04-24 16:32:37,205] INFO 127.0.0.1 - - [24/Apr/2018:16:32:37 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  52 (io.confluent.rest-utils.requests)
[2018-04-24 16:32:37,817] INFO 127.0.0.1 - - [24/Apr/2018:16:32:37 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 256  8 (io.confluent.rest-utils.requests)
[2018-04-24 16:33:36,873] INFO 127.0.0.1 - - [24/Apr/2018:16:33:36 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  28 (io.confluent.rest-utils.requests)
[2018-04-24 16:33:37,620] INFO 127.0.0.1 - - [24/Apr/2018:16:33:37 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 256  25 (io.confluent.rest-utils.requests)
[2018-04-24 16:34:31,443] INFO 127.0.0.1 - - [24/Apr/2018:16:34:31 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  6 (io.confluent.rest-utils.requests)
[2018-04-24 16:34:32,140] INFO 127.0.0.1 - - [24/Apr/2018:16:34:32 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 256  20 (io.confluent.rest-utils.requests)
[2018-04-24 19:23:33,343] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-04-24 19:23:35,976] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-04-24 19:39:20,025] INFO Stopped NetworkTrafficServerConnector@5a18cd76{HTTP/1.1}{0.0.0.0:8081} (org.eclipse.jetty.server.NetworkTrafficServerConnector)
[2018-04-24 19:39:21,104] INFO Stopped o.e.j.s.ServletContextHandler@52851b44{/,null,UNAVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler)
[2018-04-24 19:39:21,334] INFO Shutting down schema registry (io.confluent.kafka.schemaregistry.storage.KafkaSchemaRegistry)
[2018-04-24 19:39:21,701] INFO [kafka-store-reader-thread-_schemas]: Shutting down (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-04-24 19:39:21,835] INFO [kafka-store-reader-thread-_schemas]: Shutdown completed (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-04-24 19:39:21,946] INFO [kafka-store-reader-thread-_schemas]: Stopped (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-04-24 19:39:22,279] INFO KafkaStoreReaderThread shutdown complete. (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-04-24 20:04:07,681] INFO SchemaRegistryConfig values: 
	metric.reporters = []
	kafkastore.sasl.kerberos.kinit.cmd = /usr/bin/kinit
	response.mediatype.default = application/vnd.schemaregistry.v1+json
	kafkastore.ssl.trustmanager.algorithm = PKIX
	authentication.realm = 
	ssl.keystore.type = JKS
	kafkastore.topic = _schemas
	metrics.jmx.prefix = kafka.schema.registry
	kafkastore.ssl.enabled.protocols = TLSv1.2,TLSv1.1,TLSv1
	kafkastore.topic.replication.factor = 3
	ssl.truststore.password = [hidden]
	kafkastore.timeout.ms = 500
	host.name = maya
	kafkastore.bootstrap.servers = []
	schema.registry.zk.namespace = schema_registry
	kafkastore.sasl.kerberos.ticket.renew.window.factor = 0.8
	kafkastore.sasl.kerberos.service.name = 
	schema.registry.resource.extension.class = 
	ssl.endpoint.identification.algorithm = 
	compression.enable = false
	kafkastore.ssl.truststore.type = JKS
	avro.compatibility.level = backward
	kafkastore.ssl.protocol = TLS
	kafkastore.ssl.provider = 
	kafkastore.ssl.truststore.location = 
	response.mediatype.preferred = [application/vnd.schemaregistry.v1+json, application/vnd.schemaregistry+json, application/json]
	kafkastore.ssl.keystore.type = JKS
	ssl.truststore.type = JKS
	kafkastore.ssl.truststore.password = [hidden]
	access.control.allow.origin = 
	ssl.truststore.location = 
	ssl.keystore.password = [hidden]
	port = 8081
	kafkastore.ssl.keystore.location = 
	master.eligibility = true
	ssl.client.auth = false
	kafkastore.ssl.keystore.password = [hidden]
	kafkastore.security.protocol = PLAINTEXT
	ssl.trustmanager.algorithm = 
	authentication.method = NONE
	request.logger.name = io.confluent.rest-utils.requests
	ssl.key.password = [hidden]
	kafkastore.zk.session.timeout.ms = 30000
	kafkastore.sasl.mechanism = GSSAPI
	kafkastore.sasl.kerberos.ticket.renew.jitter = 0.05
	kafkastore.ssl.key.password = [hidden]
	zookeeper.set.acl = false
	schema.registry.inter.instance.protocol = http
	authentication.roles = [*]
	metrics.num.samples = 2
	ssl.protocol = TLS
	schema.registry.group.id = schema-registry
	kafkastore.ssl.keymanager.algorithm = SunX509
	kafkastore.connection.url = localhost:2181
	debug = false
	listeners = [http://0.0.0.0:8081]
	kafkastore.group.id = 
	ssl.provider = 
	ssl.enabled.protocols = []
	shutdown.graceful.ms = 1000
	ssl.keystore.location = 
	ssl.cipher.suites = []
	kafkastore.ssl.endpoint.identification.algorithm = 
	kafkastore.ssl.cipher.suites = 
	access.control.allow.methods = 
	kafkastore.sasl.kerberos.min.time.before.relogin = 60000
	ssl.keymanager.algorithm = 
	metrics.sample.window.ms = 30000
	kafkastore.init.timeout.ms = 60000
 (io.confluent.kafka.schemaregistry.rest.SchemaRegistryConfig)
[2018-04-24 20:04:08,956] INFO Logging initialized @4778ms (org.eclipse.jetty.util.log)
[2018-04-24 20:04:11,607] INFO Initializing KafkaStore with broker endpoints: PLAINTEXT://maya:9092 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-24 20:04:12,607] INFO Creating schemas topic _schemas (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-24 20:04:12,616] WARN Creating the schema topic _schemas using a replication factor of 1, which is less than the desired one of 3. If this is a production environment, it's crucial to add more brokers and increase the replication factor of the topic. (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-24 20:04:14,088] INFO Initialized last consumed offset to -1 (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-04-24 20:04:14,113] INFO [kafka-store-reader-thread-_schemas]: Starting (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-04-24 20:04:14,965] INFO Wait to catch up until the offset of the last message at 0 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-24 20:04:15,209] INFO Joining schema registry with Zookeeper-based coordination (io.confluent.kafka.schemaregistry.storage.KafkaSchemaRegistry)
[2018-04-24 20:04:15,336] INFO Created schema registry namespace localhost:2181/schema_registry (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-04-24 20:04:15,477] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-04-24 20:04:15,541] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-04-24 20:04:15,601] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-24 20:04:15,951] INFO Adding listener: http://0.0.0.0:8081 (io.confluent.rest.Application)
[2018-04-24 20:04:16,220] INFO jetty-9.2.22.v20170606 (org.eclipse.jetty.server.Server)
[2018-04-24 20:04:19,709] INFO HV000001: Hibernate Validator 5.1.3.Final (org.hibernate.validator.internal.util.Version)
[2018-04-24 20:04:20,385] INFO Started o.e.j.s.ServletContextHandler@5ef6ae06{/,null,AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler)
[2018-04-24 20:04:20,470] INFO Started NetworkTrafficServerConnector@3568f9d2{HTTP/1.1}{0.0.0.0:8081} (org.eclipse.jetty.server.NetworkTrafficServerConnector)
[2018-04-24 20:04:20,478] INFO Started @16309ms (org.eclipse.jetty.server.Server)
[2018-04-24 20:04:20,480] INFO Server started, listening for requests... (io.confluent.kafka.schemaregistry.rest.SchemaRegistryMain)
[2018-04-24 20:20:13,348] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-24 20:20:13,593] INFO 127.0.0.1 - - [24/Apr/2018:20:20:11 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  1796 (io.confluent.rest-utils.requests)
[2018-04-24 20:20:24,241] INFO 127.0.0.1 - - [24/Apr/2018:20:20:24 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 256  57 (io.confluent.rest-utils.requests)
[2018-04-24 20:22:24,903] INFO 127.0.0.1 - - [24/Apr/2018:20:22:24 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  23 (io.confluent.rest-utils.requests)
[2018-04-24 20:22:26,851] INFO 127.0.0.1 - - [24/Apr/2018:20:22:26 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 256  24 (io.confluent.rest-utils.requests)
[2018-04-24 20:28:15,409] INFO 127.0.0.1 - - [24/Apr/2018:20:28:15 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  22 (io.confluent.rest-utils.requests)
[2018-04-24 20:28:16,937] INFO 127.0.0.1 - - [24/Apr/2018:20:28:16 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 256  13 (io.confluent.rest-utils.requests)
[2018-04-24 21:07:09,259] INFO 127.0.0.1 - - [24/Apr/2018:21:07:09 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  25 (io.confluent.rest-utils.requests)
[2018-04-24 21:07:10,895] INFO 127.0.0.1 - - [24/Apr/2018:21:07:10 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 256  25 (io.confluent.rest-utils.requests)
[2018-04-24 21:08:21,567] INFO 127.0.0.1 - - [24/Apr/2018:21:08:21 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  22 (io.confluent.rest-utils.requests)
[2018-04-24 21:08:23,232] INFO 127.0.0.1 - - [24/Apr/2018:21:08:23 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 256  13 (io.confluent.rest-utils.requests)
[2018-04-24 21:49:56,676] INFO 127.0.0.1 - - [24/Apr/2018:21:49:56 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  121 (io.confluent.rest-utils.requests)
[2018-04-24 21:49:58,485] INFO 127.0.0.1 - - [24/Apr/2018:21:49:58 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 256  71 (io.confluent.rest-utils.requests)
[2018-04-24 21:54:28,121] INFO 127.0.0.1 - - [24/Apr/2018:21:54:28 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  15 (io.confluent.rest-utils.requests)
[2018-04-24 21:54:29,494] INFO 127.0.0.1 - - [24/Apr/2018:21:54:29 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 256  11 (io.confluent.rest-utils.requests)
[2018-04-25 10:25:58,021] INFO SchemaRegistryConfig values: 
	metric.reporters = []
	kafkastore.sasl.kerberos.kinit.cmd = /usr/bin/kinit
	response.mediatype.default = application/vnd.schemaregistry.v1+json
	kafkastore.ssl.trustmanager.algorithm = PKIX
	authentication.realm = 
	ssl.keystore.type = JKS
	kafkastore.topic = _schemas
	metrics.jmx.prefix = kafka.schema.registry
	kafkastore.ssl.enabled.protocols = TLSv1.2,TLSv1.1,TLSv1
	kafkastore.topic.replication.factor = 3
	ssl.truststore.password = [hidden]
	kafkastore.timeout.ms = 500
	host.name = maya
	kafkastore.bootstrap.servers = []
	schema.registry.zk.namespace = schema_registry
	kafkastore.sasl.kerberos.ticket.renew.window.factor = 0.8
	kafkastore.sasl.kerberos.service.name = 
	schema.registry.resource.extension.class = 
	ssl.endpoint.identification.algorithm = 
	compression.enable = false
	kafkastore.ssl.truststore.type = JKS
	avro.compatibility.level = backward
	kafkastore.ssl.protocol = TLS
	kafkastore.ssl.provider = 
	kafkastore.ssl.truststore.location = 
	response.mediatype.preferred = [application/vnd.schemaregistry.v1+json, application/vnd.schemaregistry+json, application/json]
	kafkastore.ssl.keystore.type = JKS
	ssl.truststore.type = JKS
	kafkastore.ssl.truststore.password = [hidden]
	access.control.allow.origin = 
	ssl.truststore.location = 
	ssl.keystore.password = [hidden]
	port = 8081
	kafkastore.ssl.keystore.location = 
	master.eligibility = true
	ssl.client.auth = false
	kafkastore.ssl.keystore.password = [hidden]
	kafkastore.security.protocol = PLAINTEXT
	ssl.trustmanager.algorithm = 
	authentication.method = NONE
	request.logger.name = io.confluent.rest-utils.requests
	ssl.key.password = [hidden]
	kafkastore.zk.session.timeout.ms = 30000
	kafkastore.sasl.mechanism = GSSAPI
	kafkastore.sasl.kerberos.ticket.renew.jitter = 0.05
	kafkastore.ssl.key.password = [hidden]
	zookeeper.set.acl = false
	schema.registry.inter.instance.protocol = http
	authentication.roles = [*]
	metrics.num.samples = 2
	ssl.protocol = TLS
	schema.registry.group.id = schema-registry
	kafkastore.ssl.keymanager.algorithm = SunX509
	kafkastore.connection.url = localhost:2181
	debug = false
	listeners = [http://0.0.0.0:8081]
	kafkastore.group.id = 
	ssl.provider = 
	ssl.enabled.protocols = []
	shutdown.graceful.ms = 1000
	ssl.keystore.location = 
	ssl.cipher.suites = []
	kafkastore.ssl.endpoint.identification.algorithm = 
	kafkastore.ssl.cipher.suites = 
	access.control.allow.methods = 
	kafkastore.sasl.kerberos.min.time.before.relogin = 60000
	ssl.keymanager.algorithm = 
	metrics.sample.window.ms = 30000
	kafkastore.init.timeout.ms = 60000
 (io.confluent.kafka.schemaregistry.rest.SchemaRegistryConfig)
[2018-04-25 10:25:58,615] INFO Logging initialized @2735ms (org.eclipse.jetty.util.log)
[2018-04-25 10:25:59,740] INFO Initializing KafkaStore with broker endpoints: PLAINTEXT://maya:9092 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-25 10:26:00,303] INFO Creating schemas topic _schemas (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-25 10:26:00,303] WARN Creating the schema topic _schemas using a replication factor of 1, which is less than the desired one of 3. If this is a production environment, it's crucial to add more brokers and increase the replication factor of the topic. (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-25 10:26:01,271] INFO Initialized last consumed offset to -1 (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-04-25 10:26:01,271] INFO [kafka-store-reader-thread-_schemas]: Starting (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-04-25 10:26:01,646] INFO Wait to catch up until the offset of the last message at 0 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-25 10:26:01,709] INFO Joining schema registry with Zookeeper-based coordination (io.confluent.kafka.schemaregistry.storage.KafkaSchemaRegistry)
[2018-04-25 10:26:01,803] INFO Created schema registry namespace localhost:2181/schema_registry (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-04-25 10:26:02,006] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-04-25 10:26:02,115] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-04-25 10:26:02,131] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-25 10:26:02,287] INFO Adding listener: http://0.0.0.0:8081 (io.confluent.rest.Application)
[2018-04-25 10:26:02,365] INFO jetty-9.2.22.v20170606 (org.eclipse.jetty.server.Server)
[2018-04-25 10:26:03,678] INFO HV000001: Hibernate Validator 5.1.3.Final (org.hibernate.validator.internal.util.Version)
[2018-04-25 10:26:04,021] INFO Started o.e.j.s.ServletContextHandler@5ef6ae06{/,null,AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler)
[2018-04-25 10:26:04,053] INFO Started NetworkTrafficServerConnector@3568f9d2{HTTP/1.1}{0.0.0.0:8081} (org.eclipse.jetty.server.NetworkTrafficServerConnector)
[2018-04-25 10:26:04,053] INFO Started @8175ms (org.eclipse.jetty.server.Server)
[2018-04-25 10:26:04,053] INFO Server started, listening for requests... (io.confluent.kafka.schemaregistry.rest.SchemaRegistryMain)
[2018-04-25 11:05:17,621] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-25 11:05:17,693] INFO 127.0.0.1 - - [25/Apr/2018:11:05:16 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  814 (io.confluent.rest-utils.requests)
[2018-04-25 11:07:00,271] INFO 127.0.0.1 - - [25/Apr/2018:11:07:00 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  10 (io.confluent.rest-utils.requests)
[2018-04-25 11:08:34,358] INFO 127.0.0.1 - - [25/Apr/2018:11:08:34 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  5 (io.confluent.rest-utils.requests)
[2018-04-25 11:11:59,426] INFO 127.0.0.1 - - [25/Apr/2018:11:11:59 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  9 (io.confluent.rest-utils.requests)
[2018-04-25 11:29:29,111] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-04-25 11:29:29,307] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-04-25 11:32:59,114] INFO 127.0.0.1 - - [25/Apr/2018:11:32:59 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  7 (io.confluent.rest-utils.requests)
[2018-04-25 11:41:35,060] INFO 127.0.0.1 - - [25/Apr/2018:11:41:35 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  12 (io.confluent.rest-utils.requests)
[2018-04-25 11:45:27,894] INFO 127.0.0.1 - - [25/Apr/2018:11:45:27 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  6 (io.confluent.rest-utils.requests)
[2018-04-25 11:49:10,820] INFO 127.0.0.1 - - [25/Apr/2018:11:49:10 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  42 (io.confluent.rest-utils.requests)
[2018-04-25 11:50:25,958] INFO 127.0.0.1 - - [25/Apr/2018:11:50:25 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  72 (io.confluent.rest-utils.requests)
[2018-04-25 12:03:18,849] INFO 127.0.0.1 - - [25/Apr/2018:12:03:18 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  58 (io.confluent.rest-utils.requests)
[2018-04-25 12:04:40,003] INFO 127.0.0.1 - - [25/Apr/2018:12:04:39 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  29 (io.confluent.rest-utils.requests)
[2018-04-25 12:06:10,027] INFO 127.0.0.1 - - [25/Apr/2018:12:06:09 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  41 (io.confluent.rest-utils.requests)
[2018-04-25 12:06:57,099] INFO 127.0.0.1 - - [25/Apr/2018:12:06:57 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  16 (io.confluent.rest-utils.requests)
[2018-04-25 12:08:41,537] INFO 127.0.0.1 - - [25/Apr/2018:12:08:41 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  54 (io.confluent.rest-utils.requests)
[2018-04-25 12:11:56,326] INFO 127.0.0.1 - - [25/Apr/2018:12:11:56 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  18 (io.confluent.rest-utils.requests)
[2018-04-25 12:23:32,020] INFO Wait to catch up until the offset of the last message at 2 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-25 12:23:32,208] INFO 127.0.0.1 - - [25/Apr/2018:12:23:31 +0530] "POST /subjects/examination-value/versions HTTP/1.1" 200 8  461 (io.confluent.rest-utils.requests)
[2018-04-25 12:23:33,152] INFO 127.0.0.1 - - [25/Apr/2018:12:23:33 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 257  147 (io.confluent.rest-utils.requests)
[2018-04-25 12:24:50,338] INFO 127.0.0.1 - - [25/Apr/2018:12:24:50 +0530] "POST /subjects/examination-value/versions HTTP/1.1" 200 8  7 (io.confluent.rest-utils.requests)
[2018-04-25 12:25:06,310] INFO 127.0.0.1 - - [25/Apr/2018:12:25:06 +0530] "POST /subjects/examination-value/versions HTTP/1.1" 200 8  7 (io.confluent.rest-utils.requests)
[2018-04-25 12:26:25,318] INFO 127.0.0.1 - - [25/Apr/2018:12:26:25 +0530] "POST /subjects/examination-value/versions HTTP/1.1" 200 8  31 (io.confluent.rest-utils.requests)
[2018-04-25 12:34:54,410] INFO 127.0.0.1 - - [25/Apr/2018:12:34:54 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  39 (io.confluent.rest-utils.requests)
[2018-04-25 12:36:20,412] INFO 127.0.0.1 - - [25/Apr/2018:12:36:20 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  41 (io.confluent.rest-utils.requests)
[2018-04-25 12:42:31,315] INFO 127.0.0.1 - - [25/Apr/2018:12:42:31 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  23 (io.confluent.rest-utils.requests)
[2018-04-25 12:47:02,121] INFO 127.0.0.1 - - [25/Apr/2018:12:47:02 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  6 (io.confluent.rest-utils.requests)
[2018-04-25 12:48:52,550] INFO 127.0.0.1 - - [25/Apr/2018:12:48:52 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  4 (io.confluent.rest-utils.requests)
[2018-04-25 12:50:19,406] INFO 127.0.0.1 - - [25/Apr/2018:12:50:19 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  52 (io.confluent.rest-utils.requests)
[2018-04-25 12:52:12,605] INFO 127.0.0.1 - - [25/Apr/2018:12:52:12 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  52 (io.confluent.rest-utils.requests)
[2018-04-25 12:53:20,312] INFO 127.0.0.1 - - [25/Apr/2018:12:53:20 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  6 (io.confluent.rest-utils.requests)
[2018-04-25 12:57:03,997] INFO 127.0.0.1 - - [25/Apr/2018:12:57:03 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  65 (io.confluent.rest-utils.requests)
[2018-04-25 13:00:41,588] INFO 127.0.0.1 - - [25/Apr/2018:13:00:41 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  6 (io.confluent.rest-utils.requests)
[2018-04-25 13:39:58,415] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-04-25 13:40:00,330] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-04-25 13:48:06,083] INFO 127.0.0.1 - - [25/Apr/2018:13:48:06 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  5 (io.confluent.rest-utils.requests)
[2018-04-25 13:55:32,208] INFO 127.0.0.1 - - [25/Apr/2018:13:55:32 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  62 (io.confluent.rest-utils.requests)
[2018-04-25 13:57:14,273] INFO 127.0.0.1 - - [25/Apr/2018:13:57:14 +0530] "POST /subjects/examination-value/versions HTTP/1.1" 200 8  68 (io.confluent.rest-utils.requests)
[2018-04-25 13:57:14,743] INFO 127.0.0.1 - - [25/Apr/2018:13:57:14 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 257  23 (io.confluent.rest-utils.requests)
[2018-04-25 13:59:44,734] INFO 127.0.0.1 - - [25/Apr/2018:13:59:44 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  105 (io.confluent.rest-utils.requests)
[2018-04-25 14:02:22,568] INFO 127.0.0.1 - - [25/Apr/2018:14:02:22 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  61 (io.confluent.rest-utils.requests)
[2018-04-25 14:05:02,094] INFO 127.0.0.1 - - [25/Apr/2018:14:05:02 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  22 (io.confluent.rest-utils.requests)
[2018-04-25 14:05:43,409] INFO 127.0.0.1 - - [25/Apr/2018:14:05:43 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  43 (io.confluent.rest-utils.requests)
[2018-04-25 14:54:37,409] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-04-25 14:54:38,029] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-04-25 15:26:31,648] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-04-25 15:26:31,807] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-04-25 15:29:28,889] INFO 127.0.0.1 - - [25/Apr/2018:15:29:28 +0530] "POST /subjects/examination-value/versions HTTP/1.1" 200 8  49 (io.confluent.rest-utils.requests)
[2018-04-25 15:29:29,451] INFO 127.0.0.1 - - [25/Apr/2018:15:29:29 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 257  23 (io.confluent.rest-utils.requests)
[2018-04-25 15:35:19,249] INFO 127.0.0.1 - - [25/Apr/2018:15:35:19 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  10 (io.confluent.rest-utils.requests)
[2018-04-25 15:35:19,817] INFO 127.0.0.1 - - [25/Apr/2018:15:35:19 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 256  24 (io.confluent.rest-utils.requests)
[2018-04-25 15:36:00,050] INFO 127.0.0.1 - - [25/Apr/2018:15:36:00 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  22 (io.confluent.rest-utils.requests)
[2018-04-25 15:36:00,641] INFO 127.0.0.1 - - [25/Apr/2018:15:36:00 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 256  5 (io.confluent.rest-utils.requests)
[2018-04-25 15:39:32,881] INFO 127.0.0.1 - - [25/Apr/2018:15:39:32 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  47 (io.confluent.rest-utils.requests)
[2018-04-25 15:39:33,465] INFO 127.0.0.1 - - [25/Apr/2018:15:39:33 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 256  3 (io.confluent.rest-utils.requests)
[2018-04-25 15:42:20,023] INFO 127.0.0.1 - - [25/Apr/2018:15:42:19 +0530] "POST /subjects/examination-value/versions HTTP/1.1" 200 8  27 (io.confluent.rest-utils.requests)
[2018-04-25 15:42:20,484] INFO 127.0.0.1 - - [25/Apr/2018:15:42:20 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 257  10 (io.confluent.rest-utils.requests)
[2018-04-25 16:07:32,820] INFO Stopped NetworkTrafficServerConnector@3568f9d2{HTTP/1.1}{0.0.0.0:8081} (org.eclipse.jetty.server.NetworkTrafficServerConnector)
[2018-04-25 16:07:33,066] INFO Stopped o.e.j.s.ServletContextHandler@5ef6ae06{/,null,UNAVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler)
[2018-04-25 16:07:33,135] INFO Shutting down schema registry (io.confluent.kafka.schemaregistry.storage.KafkaSchemaRegistry)
[2018-04-25 16:07:33,450] INFO [kafka-store-reader-thread-_schemas]: Shutting down (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-04-25 16:07:33,495] INFO [kafka-store-reader-thread-_schemas]: Shutdown completed (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-04-25 16:07:33,496] INFO [kafka-store-reader-thread-_schemas]: Stopped (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-04-25 16:07:33,534] INFO KafkaStoreReaderThread shutdown complete. (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-04-25 16:12:35,811] INFO SchemaRegistryConfig values: 
	metric.reporters = []
	kafkastore.sasl.kerberos.kinit.cmd = /usr/bin/kinit
	response.mediatype.default = application/vnd.schemaregistry.v1+json
	kafkastore.ssl.trustmanager.algorithm = PKIX
	authentication.realm = 
	ssl.keystore.type = JKS
	kafkastore.topic = _schemas
	metrics.jmx.prefix = kafka.schema.registry
	kafkastore.ssl.enabled.protocols = TLSv1.2,TLSv1.1,TLSv1
	kafkastore.topic.replication.factor = 3
	ssl.truststore.password = [hidden]
	kafkastore.timeout.ms = 500
	host.name = maya
	kafkastore.bootstrap.servers = []
	schema.registry.zk.namespace = schema_registry
	kafkastore.sasl.kerberos.ticket.renew.window.factor = 0.8
	kafkastore.sasl.kerberos.service.name = 
	schema.registry.resource.extension.class = 
	ssl.endpoint.identification.algorithm = 
	compression.enable = false
	kafkastore.ssl.truststore.type = JKS
	avro.compatibility.level = backward
	kafkastore.ssl.protocol = TLS
	kafkastore.ssl.provider = 
	kafkastore.ssl.truststore.location = 
	response.mediatype.preferred = [application/vnd.schemaregistry.v1+json, application/vnd.schemaregistry+json, application/json]
	kafkastore.ssl.keystore.type = JKS
	ssl.truststore.type = JKS
	kafkastore.ssl.truststore.password = [hidden]
	access.control.allow.origin = 
	ssl.truststore.location = 
	ssl.keystore.password = [hidden]
	port = 8081
	kafkastore.ssl.keystore.location = 
	master.eligibility = true
	ssl.client.auth = false
	kafkastore.ssl.keystore.password = [hidden]
	kafkastore.security.protocol = PLAINTEXT
	ssl.trustmanager.algorithm = 
	authentication.method = NONE
	request.logger.name = io.confluent.rest-utils.requests
	ssl.key.password = [hidden]
	kafkastore.zk.session.timeout.ms = 30000
	kafkastore.sasl.mechanism = GSSAPI
	kafkastore.sasl.kerberos.ticket.renew.jitter = 0.05
	kafkastore.ssl.key.password = [hidden]
	zookeeper.set.acl = false
	schema.registry.inter.instance.protocol = http
	authentication.roles = [*]
	metrics.num.samples = 2
	ssl.protocol = TLS
	schema.registry.group.id = schema-registry
	kafkastore.ssl.keymanager.algorithm = SunX509
	kafkastore.connection.url = localhost:2181
	debug = false
	listeners = [http://0.0.0.0:8081]
	kafkastore.group.id = 
	ssl.provider = 
	ssl.enabled.protocols = []
	shutdown.graceful.ms = 1000
	ssl.keystore.location = 
	ssl.cipher.suites = []
	kafkastore.ssl.endpoint.identification.algorithm = 
	kafkastore.ssl.cipher.suites = 
	access.control.allow.methods = 
	kafkastore.sasl.kerberos.min.time.before.relogin = 60000
	ssl.keymanager.algorithm = 
	metrics.sample.window.ms = 30000
	kafkastore.init.timeout.ms = 60000
 (io.confluent.kafka.schemaregistry.rest.SchemaRegistryConfig)
[2018-04-25 16:12:36,452] INFO Logging initialized @2800ms (org.eclipse.jetty.util.log)
[2018-04-25 16:12:37,811] INFO Initializing KafkaStore with broker endpoints: PLAINTEXT://maya:9092 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-25 16:12:38,280] INFO Creating schemas topic _schemas (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-25 16:12:38,280] WARN Creating the schema topic _schemas using a replication factor of 1, which is less than the desired one of 3. If this is a production environment, it's crucial to add more brokers and increase the replication factor of the topic. (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-25 16:12:39,202] INFO Initialized last consumed offset to -1 (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-04-25 16:12:39,218] INFO [kafka-store-reader-thread-_schemas]: Starting (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-04-25 16:12:39,796] INFO Wait to catch up until the offset of the last message at 0 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-25 16:12:39,889] INFO Joining schema registry with Zookeeper-based coordination (io.confluent.kafka.schemaregistry.storage.KafkaSchemaRegistry)
[2018-04-25 16:12:39,983] INFO Created schema registry namespace localhost:2181/schema_registry (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-04-25 16:12:40,124] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-04-25 16:12:40,186] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-04-25 16:12:40,202] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-25 16:12:40,358] INFO Adding listener: http://0.0.0.0:8081 (io.confluent.rest.Application)
[2018-04-25 16:12:40,468] INFO jetty-9.2.22.v20170606 (org.eclipse.jetty.server.Server)
[2018-04-25 16:12:41,624] INFO HV000001: Hibernate Validator 5.1.3.Final (org.hibernate.validator.internal.util.Version)
[2018-04-25 16:12:41,874] INFO Started o.e.j.s.ServletContextHandler@5ef6ae06{/,null,AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler)
[2018-04-25 16:12:41,921] INFO Started NetworkTrafficServerConnector@3568f9d2{HTTP/1.1}{0.0.0.0:8081} (org.eclipse.jetty.server.NetworkTrafficServerConnector)
[2018-04-25 16:12:41,921] INFO Started @8263ms (org.eclipse.jetty.server.Server)
[2018-04-25 16:12:41,921] INFO Server started, listening for requests... (io.confluent.kafka.schemaregistry.rest.SchemaRegistryMain)
[2018-04-25 16:18:12,780] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-25 16:18:12,849] INFO 127.0.0.1 - - [25/Apr/2018:16:18:12 +0530] "POST /subjects/examination-value/versions HTTP/1.1" 200 8  498 (io.confluent.rest-utils.requests)
[2018-04-25 16:18:19,372] INFO 127.0.0.1 - - [25/Apr/2018:16:18:19 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 257  12 (io.confluent.rest-utils.requests)
[2018-04-25 16:24:40,115] INFO Wait to catch up until the offset of the last message at 2 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-25 16:24:40,133] INFO 127.0.0.1 - - [25/Apr/2018:16:24:40 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  24 (io.confluent.rest-utils.requests)
[2018-04-25 16:28:23,119] INFO SchemaRegistryConfig values: 
	metric.reporters = []
	kafkastore.sasl.kerberos.kinit.cmd = /usr/bin/kinit
	response.mediatype.default = application/vnd.schemaregistry.v1+json
	kafkastore.ssl.trustmanager.algorithm = PKIX
	authentication.realm = 
	ssl.keystore.type = JKS
	kafkastore.topic = _schemas
	metrics.jmx.prefix = kafka.schema.registry
	kafkastore.ssl.enabled.protocols = TLSv1.2,TLSv1.1,TLSv1
	kafkastore.topic.replication.factor = 3
	ssl.truststore.password = [hidden]
	kafkastore.timeout.ms = 500
	host.name = maya
	kafkastore.bootstrap.servers = []
	schema.registry.zk.namespace = schema_registry
	kafkastore.sasl.kerberos.ticket.renew.window.factor = 0.8
	kafkastore.sasl.kerberos.service.name = 
	schema.registry.resource.extension.class = 
	ssl.endpoint.identification.algorithm = 
	compression.enable = false
	kafkastore.ssl.truststore.type = JKS
	avro.compatibility.level = backward
	kafkastore.ssl.protocol = TLS
	kafkastore.ssl.provider = 
	kafkastore.ssl.truststore.location = 
	response.mediatype.preferred = [application/vnd.schemaregistry.v1+json, application/vnd.schemaregistry+json, application/json]
	kafkastore.ssl.keystore.type = JKS
	ssl.truststore.type = JKS
	kafkastore.ssl.truststore.password = [hidden]
	access.control.allow.origin = 
	ssl.truststore.location = 
	ssl.keystore.password = [hidden]
	port = 8081
	kafkastore.ssl.keystore.location = 
	master.eligibility = true
	ssl.client.auth = false
	kafkastore.ssl.keystore.password = [hidden]
	kafkastore.security.protocol = PLAINTEXT
	ssl.trustmanager.algorithm = 
	authentication.method = NONE
	request.logger.name = io.confluent.rest-utils.requests
	ssl.key.password = [hidden]
	kafkastore.zk.session.timeout.ms = 30000
	kafkastore.sasl.mechanism = GSSAPI
	kafkastore.sasl.kerberos.ticket.renew.jitter = 0.05
	kafkastore.ssl.key.password = [hidden]
	zookeeper.set.acl = false
	schema.registry.inter.instance.protocol = http
	authentication.roles = [*]
	metrics.num.samples = 2
	ssl.protocol = TLS
	schema.registry.group.id = schema-registry
	kafkastore.ssl.keymanager.algorithm = SunX509
	kafkastore.connection.url = localhost:2181
	debug = false
	listeners = [http://0.0.0.0:8081]
	kafkastore.group.id = 
	ssl.provider = 
	ssl.enabled.protocols = []
	shutdown.graceful.ms = 1000
	ssl.keystore.location = 
	ssl.cipher.suites = []
	kafkastore.ssl.endpoint.identification.algorithm = 
	kafkastore.ssl.cipher.suites = 
	access.control.allow.methods = 
	kafkastore.sasl.kerberos.min.time.before.relogin = 60000
	ssl.keymanager.algorithm = 
	metrics.sample.window.ms = 30000
	kafkastore.init.timeout.ms = 60000
 (io.confluent.kafka.schemaregistry.rest.SchemaRegistryConfig)
[2018-04-25 16:28:23,415] INFO Logging initialized @1074ms (org.eclipse.jetty.util.log)
[2018-04-25 16:28:24,855] INFO Initializing KafkaStore with broker endpoints: PLAINTEXT://maya:9092 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-25 16:28:25,171] INFO Creating schemas topic _schemas (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-25 16:28:25,174] WARN Creating the schema topic _schemas using a replication factor of 1, which is less than the desired one of 3. If this is a production environment, it's crucial to add more brokers and increase the replication factor of the topic. (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-25 16:28:25,976] INFO Initialized last consumed offset to -1 (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-04-25 16:28:25,979] INFO [kafka-store-reader-thread-_schemas]: Starting (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-04-25 16:28:26,284] INFO Wait to catch up until the offset of the last message at 0 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-25 16:28:26,349] INFO Joining schema registry with Zookeeper-based coordination (io.confluent.kafka.schemaregistry.storage.KafkaSchemaRegistry)
[2018-04-25 16:28:26,427] INFO Created schema registry namespace localhost:2181/schema_registry (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-04-25 16:28:26,520] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-04-25 16:28:26,552] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-25 16:28:26,562] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-04-25 16:28:26,643] INFO Adding listener: http://0.0.0.0:8081 (io.confluent.rest.Application)
[2018-04-25 16:28:26,715] INFO jetty-9.2.22.v20170606 (org.eclipse.jetty.server.Server)
[2018-04-25 16:28:27,650] INFO HV000001: Hibernate Validator 5.1.3.Final (org.hibernate.validator.internal.util.Version)
[2018-04-25 16:28:27,871] INFO Started o.e.j.s.ServletContextHandler@5ef6ae06{/,null,AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler)
[2018-04-25 16:28:27,893] INFO Started NetworkTrafficServerConnector@3568f9d2{HTTP/1.1}{0.0.0.0:8081} (org.eclipse.jetty.server.NetworkTrafficServerConnector)
[2018-04-25 16:28:27,896] INFO Started @5556ms (org.eclipse.jetty.server.Server)
[2018-04-25 16:28:27,897] INFO Server started, listening for requests... (io.confluent.kafka.schemaregistry.rest.SchemaRegistryMain)
[2018-04-25 16:29:23,579] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-25 16:29:23,625] INFO 127.0.0.1 - - [25/Apr/2018:16:29:23 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  343 (io.confluent.rest-utils.requests)
[2018-04-26 09:17:53,616] INFO SchemaRegistryConfig values: 
	metric.reporters = []
	kafkastore.sasl.kerberos.kinit.cmd = /usr/bin/kinit
	response.mediatype.default = application/vnd.schemaregistry.v1+json
	kafkastore.ssl.trustmanager.algorithm = PKIX
	authentication.realm = 
	ssl.keystore.type = JKS
	kafkastore.topic = _schemas
	metrics.jmx.prefix = kafka.schema.registry
	kafkastore.ssl.enabled.protocols = TLSv1.2,TLSv1.1,TLSv1
	kafkastore.topic.replication.factor = 3
	ssl.truststore.password = [hidden]
	kafkastore.timeout.ms = 500
	host.name = maya
	kafkastore.bootstrap.servers = []
	schema.registry.zk.namespace = schema_registry
	kafkastore.sasl.kerberos.ticket.renew.window.factor = 0.8
	kafkastore.sasl.kerberos.service.name = 
	schema.registry.resource.extension.class = 
	ssl.endpoint.identification.algorithm = 
	compression.enable = false
	kafkastore.ssl.truststore.type = JKS
	avro.compatibility.level = backward
	kafkastore.ssl.protocol = TLS
	kafkastore.ssl.provider = 
	kafkastore.ssl.truststore.location = 
	response.mediatype.preferred = [application/vnd.schemaregistry.v1+json, application/vnd.schemaregistry+json, application/json]
	kafkastore.ssl.keystore.type = JKS
	ssl.truststore.type = JKS
	kafkastore.ssl.truststore.password = [hidden]
	access.control.allow.origin = 
	ssl.truststore.location = 
	ssl.keystore.password = [hidden]
	port = 8081
	kafkastore.ssl.keystore.location = 
	master.eligibility = true
	ssl.client.auth = false
	kafkastore.ssl.keystore.password = [hidden]
	kafkastore.security.protocol = PLAINTEXT
	ssl.trustmanager.algorithm = 
	authentication.method = NONE
	request.logger.name = io.confluent.rest-utils.requests
	ssl.key.password = [hidden]
	kafkastore.zk.session.timeout.ms = 30000
	kafkastore.sasl.mechanism = GSSAPI
	kafkastore.sasl.kerberos.ticket.renew.jitter = 0.05
	kafkastore.ssl.key.password = [hidden]
	zookeeper.set.acl = false
	schema.registry.inter.instance.protocol = http
	authentication.roles = [*]
	metrics.num.samples = 2
	ssl.protocol = TLS
	schema.registry.group.id = schema-registry
	kafkastore.ssl.keymanager.algorithm = SunX509
	kafkastore.connection.url = localhost:2181
	debug = false
	listeners = [http://0.0.0.0:8081]
	kafkastore.group.id = 
	ssl.provider = 
	ssl.enabled.protocols = []
	shutdown.graceful.ms = 1000
	ssl.keystore.location = 
	ssl.cipher.suites = []
	kafkastore.ssl.endpoint.identification.algorithm = 
	kafkastore.ssl.cipher.suites = 
	access.control.allow.methods = 
	kafkastore.sasl.kerberos.min.time.before.relogin = 60000
	ssl.keymanager.algorithm = 
	metrics.sample.window.ms = 30000
	kafkastore.init.timeout.ms = 60000
 (io.confluent.kafka.schemaregistry.rest.SchemaRegistryConfig)
[2018-04-26 09:17:54,253] INFO Logging initialized @2765ms (org.eclipse.jetty.util.log)
[2018-04-26 09:17:55,524] INFO Initializing KafkaStore with broker endpoints: PLAINTEXT://maya:9092 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-26 09:17:55,972] INFO Creating schemas topic _schemas (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-26 09:17:55,976] WARN Creating the schema topic _schemas using a replication factor of 1, which is less than the desired one of 3. If this is a production environment, it's crucial to add more brokers and increase the replication factor of the topic. (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-26 09:17:57,021] INFO Initialized last consumed offset to -1 (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-04-26 09:17:57,022] INFO [kafka-store-reader-thread-_schemas]: Starting (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-04-26 09:17:57,557] INFO Wait to catch up until the offset of the last message at 0 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-26 09:17:57,625] INFO Joining schema registry with Zookeeper-based coordination (io.confluent.kafka.schemaregistry.storage.KafkaSchemaRegistry)
[2018-04-26 09:17:57,717] INFO Created schema registry namespace localhost:2181/schema_registry (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-04-26 09:17:57,865] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-04-26 09:17:57,902] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-04-26 09:17:57,924] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-26 09:17:58,078] INFO Adding listener: http://0.0.0.0:8081 (io.confluent.rest.Application)
[2018-04-26 09:17:58,154] INFO jetty-9.2.22.v20170606 (org.eclipse.jetty.server.Server)
[2018-04-26 09:17:59,470] INFO HV000001: Hibernate Validator 5.1.3.Final (org.hibernate.validator.internal.util.Version)
[2018-04-26 09:17:59,917] INFO Started o.e.j.s.ServletContextHandler@5ef6ae06{/,null,AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler)
[2018-04-26 09:17:59,955] INFO Started NetworkTrafficServerConnector@3568f9d2{HTTP/1.1}{0.0.0.0:8081} (org.eclipse.jetty.server.NetworkTrafficServerConnector)
[2018-04-26 09:17:59,957] INFO Started @8472ms (org.eclipse.jetty.server.Server)
[2018-04-26 09:17:59,958] INFO Server started, listening for requests... (io.confluent.kafka.schemaregistry.rest.SchemaRegistryMain)
[2018-04-26 09:29:59,527] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-26 09:29:59,590] INFO 127.0.0.1 - - [26/Apr/2018:09:29:59 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  433 (io.confluent.rest-utils.requests)
[2018-04-26 14:51:38,093] INFO SchemaRegistryConfig values: 
	metric.reporters = []
	kafkastore.sasl.kerberos.kinit.cmd = /usr/bin/kinit
	response.mediatype.default = application/vnd.schemaregistry.v1+json
	kafkastore.ssl.trustmanager.algorithm = PKIX
	authentication.realm = 
	ssl.keystore.type = JKS
	kafkastore.topic = _schemas
	metrics.jmx.prefix = kafka.schema.registry
	kafkastore.ssl.enabled.protocols = TLSv1.2,TLSv1.1,TLSv1
	kafkastore.topic.replication.factor = 3
	ssl.truststore.password = [hidden]
	kafkastore.timeout.ms = 500
	host.name = maya
	kafkastore.bootstrap.servers = []
	schema.registry.zk.namespace = schema_registry
	kafkastore.sasl.kerberos.ticket.renew.window.factor = 0.8
	kafkastore.sasl.kerberos.service.name = 
	schema.registry.resource.extension.class = 
	ssl.endpoint.identification.algorithm = 
	compression.enable = false
	kafkastore.ssl.truststore.type = JKS
	avro.compatibility.level = backward
	kafkastore.ssl.protocol = TLS
	kafkastore.ssl.provider = 
	kafkastore.ssl.truststore.location = 
	response.mediatype.preferred = [application/vnd.schemaregistry.v1+json, application/vnd.schemaregistry+json, application/json]
	kafkastore.ssl.keystore.type = JKS
	ssl.truststore.type = JKS
	kafkastore.ssl.truststore.password = [hidden]
	access.control.allow.origin = 
	ssl.truststore.location = 
	ssl.keystore.password = [hidden]
	port = 8081
	kafkastore.ssl.keystore.location = 
	master.eligibility = true
	ssl.client.auth = false
	kafkastore.ssl.keystore.password = [hidden]
	kafkastore.security.protocol = PLAINTEXT
	ssl.trustmanager.algorithm = 
	authentication.method = NONE
	request.logger.name = io.confluent.rest-utils.requests
	ssl.key.password = [hidden]
	kafkastore.zk.session.timeout.ms = 30000
	kafkastore.sasl.mechanism = GSSAPI
	kafkastore.sasl.kerberos.ticket.renew.jitter = 0.05
	kafkastore.ssl.key.password = [hidden]
	zookeeper.set.acl = false
	schema.registry.inter.instance.protocol = http
	authentication.roles = [*]
	metrics.num.samples = 2
	ssl.protocol = TLS
	schema.registry.group.id = schema-registry
	kafkastore.ssl.keymanager.algorithm = SunX509
	kafkastore.connection.url = localhost:2181
	debug = false
	listeners = [http://0.0.0.0:8081]
	kafkastore.group.id = 
	ssl.provider = 
	ssl.enabled.protocols = []
	shutdown.graceful.ms = 1000
	ssl.keystore.location = 
	ssl.cipher.suites = []
	kafkastore.ssl.endpoint.identification.algorithm = 
	kafkastore.ssl.cipher.suites = 
	access.control.allow.methods = 
	kafkastore.sasl.kerberos.min.time.before.relogin = 60000
	ssl.keymanager.algorithm = 
	metrics.sample.window.ms = 30000
	kafkastore.init.timeout.ms = 60000
 (io.confluent.kafka.schemaregistry.rest.SchemaRegistryConfig)
[2018-04-26 14:51:38,742] INFO Logging initialized @2878ms (org.eclipse.jetty.util.log)
[2018-04-26 14:51:40,175] INFO Initializing KafkaStore with broker endpoints: PLAINTEXT://maya:9092 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-26 14:51:40,593] INFO Creating schemas topic _schemas (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-26 14:51:40,596] WARN Creating the schema topic _schemas using a replication factor of 1, which is less than the desired one of 3. If this is a production environment, it's crucial to add more brokers and increase the replication factor of the topic. (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-26 14:51:41,738] INFO Initialized last consumed offset to -1 (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-04-26 14:51:41,740] INFO [kafka-store-reader-thread-_schemas]: Starting (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-04-26 14:51:42,195] INFO Wait to catch up until the offset of the last message at 0 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-26 14:51:42,248] INFO Joining schema registry with Zookeeper-based coordination (io.confluent.kafka.schemaregistry.storage.KafkaSchemaRegistry)
[2018-04-26 14:51:42,322] INFO Created schema registry namespace localhost:2181/schema_registry (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-04-26 14:51:42,482] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-04-26 14:51:42,530] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-04-26 14:51:42,545] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-26 14:51:42,759] INFO Adding listener: http://0.0.0.0:8081 (io.confluent.rest.Application)
[2018-04-26 14:51:42,836] INFO jetty-9.2.22.v20170606 (org.eclipse.jetty.server.Server)
[2018-04-26 14:51:43,932] INFO HV000001: Hibernate Validator 5.1.3.Final (org.hibernate.validator.internal.util.Version)
[2018-04-26 14:51:44,233] INFO Started o.e.j.s.ServletContextHandler@5ef6ae06{/,null,AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler)
[2018-04-26 14:51:44,263] INFO Started NetworkTrafficServerConnector@3568f9d2{HTTP/1.1}{0.0.0.0:8081} (org.eclipse.jetty.server.NetworkTrafficServerConnector)
[2018-04-26 14:51:44,266] INFO Started @8404ms (org.eclipse.jetty.server.Server)
[2018-04-26 14:51:44,267] INFO Server started, listening for requests... (io.confluent.kafka.schemaregistry.rest.SchemaRegistryMain)
[2018-04-26 15:50:42,193] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-26 15:50:42,369] INFO 127.0.0.1 - - [26/Apr/2018:15:50:41 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  688 (io.confluent.rest-utils.requests)
[2018-04-26 15:54:36,699] INFO 127.0.0.1 - - [26/Apr/2018:15:54:36 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  10 (io.confluent.rest-utils.requests)
[2018-04-26 15:56:17,794] INFO 127.0.0.1 - - [26/Apr/2018:15:56:17 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  21 (io.confluent.rest-utils.requests)
[2018-04-26 15:58:13,339] INFO 127.0.0.1 - - [26/Apr/2018:15:58:13 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  32 (io.confluent.rest-utils.requests)
[2018-04-26 16:02:35,417] INFO 127.0.0.1 - - [26/Apr/2018:16:02:35 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  12 (io.confluent.rest-utils.requests)
[2018-04-26 16:04:14,283] INFO 127.0.0.1 - - [26/Apr/2018:16:04:14 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  9 (io.confluent.rest-utils.requests)
[2018-04-27 11:26:43,565] INFO SchemaRegistryConfig values: 
	metric.reporters = []
	kafkastore.sasl.kerberos.kinit.cmd = /usr/bin/kinit
	response.mediatype.default = application/vnd.schemaregistry.v1+json
	kafkastore.ssl.trustmanager.algorithm = PKIX
	authentication.realm = 
	ssl.keystore.type = JKS
	kafkastore.topic = _schemas
	metrics.jmx.prefix = kafka.schema.registry
	kafkastore.ssl.enabled.protocols = TLSv1.2,TLSv1.1,TLSv1
	kafkastore.topic.replication.factor = 3
	ssl.truststore.password = [hidden]
	kafkastore.timeout.ms = 500
	host.name = maya
	kafkastore.bootstrap.servers = []
	schema.registry.zk.namespace = schema_registry
	kafkastore.sasl.kerberos.ticket.renew.window.factor = 0.8
	kafkastore.sasl.kerberos.service.name = 
	schema.registry.resource.extension.class = 
	ssl.endpoint.identification.algorithm = 
	compression.enable = false
	kafkastore.ssl.truststore.type = JKS
	avro.compatibility.level = backward
	kafkastore.ssl.protocol = TLS
	kafkastore.ssl.provider = 
	kafkastore.ssl.truststore.location = 
	response.mediatype.preferred = [application/vnd.schemaregistry.v1+json, application/vnd.schemaregistry+json, application/json]
	kafkastore.ssl.keystore.type = JKS
	ssl.truststore.type = JKS
	kafkastore.ssl.truststore.password = [hidden]
	access.control.allow.origin = 
	ssl.truststore.location = 
	ssl.keystore.password = [hidden]
	port = 8081
	kafkastore.ssl.keystore.location = 
	master.eligibility = true
	ssl.client.auth = false
	kafkastore.ssl.keystore.password = [hidden]
	kafkastore.security.protocol = PLAINTEXT
	ssl.trustmanager.algorithm = 
	authentication.method = NONE
	request.logger.name = io.confluent.rest-utils.requests
	ssl.key.password = [hidden]
	kafkastore.zk.session.timeout.ms = 30000
	kafkastore.sasl.mechanism = GSSAPI
	kafkastore.sasl.kerberos.ticket.renew.jitter = 0.05
	kafkastore.ssl.key.password = [hidden]
	zookeeper.set.acl = false
	schema.registry.inter.instance.protocol = http
	authentication.roles = [*]
	metrics.num.samples = 2
	ssl.protocol = TLS
	schema.registry.group.id = schema-registry
	kafkastore.ssl.keymanager.algorithm = SunX509
	kafkastore.connection.url = localhost:2181
	debug = false
	listeners = [http://0.0.0.0:8081]
	kafkastore.group.id = 
	ssl.provider = 
	ssl.enabled.protocols = []
	shutdown.graceful.ms = 1000
	ssl.keystore.location = 
	ssl.cipher.suites = []
	kafkastore.ssl.endpoint.identification.algorithm = 
	kafkastore.ssl.cipher.suites = 
	access.control.allow.methods = 
	kafkastore.sasl.kerberos.min.time.before.relogin = 60000
	ssl.keymanager.algorithm = 
	metrics.sample.window.ms = 30000
	kafkastore.init.timeout.ms = 60000
 (io.confluent.kafka.schemaregistry.rest.SchemaRegistryConfig)
[2018-04-27 11:26:44,271] INFO Logging initialized @2860ms (org.eclipse.jetty.util.log)
[2018-04-27 11:26:45,744] INFO Initializing KafkaStore with broker endpoints: PLAINTEXT://maya:9092 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-27 11:26:46,274] INFO Creating schemas topic _schemas (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-27 11:26:46,282] WARN Creating the schema topic _schemas using a replication factor of 1, which is less than the desired one of 3. If this is a production environment, it's crucial to add more brokers and increase the replication factor of the topic. (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-27 11:26:47,322] INFO Initialized last consumed offset to -1 (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-04-27 11:26:47,324] INFO [kafka-store-reader-thread-_schemas]: Starting (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-04-27 11:26:47,891] INFO Wait to catch up until the offset of the last message at 0 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-27 11:26:48,041] INFO Joining schema registry with Zookeeper-based coordination (io.confluent.kafka.schemaregistry.storage.KafkaSchemaRegistry)
[2018-04-27 11:26:48,159] INFO Created schema registry namespace localhost:2181/schema_registry (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-04-27 11:26:48,320] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-04-27 11:26:48,367] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-04-27 11:26:48,391] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-27 11:26:48,631] INFO Adding listener: http://0.0.0.0:8081 (io.confluent.rest.Application)
[2018-04-27 11:26:48,741] INFO jetty-9.2.22.v20170606 (org.eclipse.jetty.server.Server)
[2018-04-27 11:26:50,000] INFO HV000001: Hibernate Validator 5.1.3.Final (org.hibernate.validator.internal.util.Version)
[2018-04-27 11:26:50,327] INFO Started o.e.j.s.ServletContextHandler@5ef6ae06{/,null,AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler)
[2018-04-27 11:26:50,376] INFO Started NetworkTrafficServerConnector@3568f9d2{HTTP/1.1}{0.0.0.0:8081} (org.eclipse.jetty.server.NetworkTrafficServerConnector)
[2018-04-27 11:26:50,378] INFO Started @8969ms (org.eclipse.jetty.server.Server)
[2018-04-27 11:26:50,378] INFO Server started, listening for requests... (io.confluent.kafka.schemaregistry.rest.SchemaRegistryMain)
[2018-04-27 13:32:46,498] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-04-27 13:32:47,045] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-04-27 15:44:15,023] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-27 15:44:17,517] INFO 127.0.0.1 - - [27/Apr/2018:15:44:01 +0530] "POST /subjects/register-value/versions HTTP/1.1" 500 61  15757 (io.confluent.rest-utils.requests)
[2018-04-27 15:46:24,434] INFO SchemaRegistryConfig values: 
	metric.reporters = []
	kafkastore.sasl.kerberos.kinit.cmd = /usr/bin/kinit
	response.mediatype.default = application/vnd.schemaregistry.v1+json
	kafkastore.ssl.trustmanager.algorithm = PKIX
	authentication.realm = 
	ssl.keystore.type = JKS
	kafkastore.topic = _schemas
	metrics.jmx.prefix = kafka.schema.registry
	kafkastore.ssl.enabled.protocols = TLSv1.2,TLSv1.1,TLSv1
	kafkastore.topic.replication.factor = 3
	ssl.truststore.password = [hidden]
	kafkastore.timeout.ms = 500
	host.name = maya
	kafkastore.bootstrap.servers = []
	schema.registry.zk.namespace = schema_registry
	kafkastore.sasl.kerberos.ticket.renew.window.factor = 0.8
	kafkastore.sasl.kerberos.service.name = 
	schema.registry.resource.extension.class = 
	ssl.endpoint.identification.algorithm = 
	compression.enable = false
	kafkastore.ssl.truststore.type = JKS
	avro.compatibility.level = backward
	kafkastore.ssl.protocol = TLS
	kafkastore.ssl.provider = 
	kafkastore.ssl.truststore.location = 
	response.mediatype.preferred = [application/vnd.schemaregistry.v1+json, application/vnd.schemaregistry+json, application/json]
	kafkastore.ssl.keystore.type = JKS
	ssl.truststore.type = JKS
	kafkastore.ssl.truststore.password = [hidden]
	access.control.allow.origin = 
	ssl.truststore.location = 
	ssl.keystore.password = [hidden]
	port = 8081
	kafkastore.ssl.keystore.location = 
	master.eligibility = true
	ssl.client.auth = false
	kafkastore.ssl.keystore.password = [hidden]
	kafkastore.security.protocol = PLAINTEXT
	ssl.trustmanager.algorithm = 
	authentication.method = NONE
	request.logger.name = io.confluent.rest-utils.requests
	ssl.key.password = [hidden]
	kafkastore.zk.session.timeout.ms = 30000
	kafkastore.sasl.mechanism = GSSAPI
	kafkastore.sasl.kerberos.ticket.renew.jitter = 0.05
	kafkastore.ssl.key.password = [hidden]
	zookeeper.set.acl = false
	schema.registry.inter.instance.protocol = http
	authentication.roles = [*]
	metrics.num.samples = 2
	ssl.protocol = TLS
	schema.registry.group.id = schema-registry
	kafkastore.ssl.keymanager.algorithm = SunX509
	kafkastore.connection.url = localhost:2181
	debug = false
	listeners = [http://0.0.0.0:8081]
	kafkastore.group.id = 
	ssl.provider = 
	ssl.enabled.protocols = []
	shutdown.graceful.ms = 1000
	ssl.keystore.location = 
	ssl.cipher.suites = []
	kafkastore.ssl.endpoint.identification.algorithm = 
	kafkastore.ssl.cipher.suites = 
	access.control.allow.methods = 
	kafkastore.sasl.kerberos.min.time.before.relogin = 60000
	ssl.keymanager.algorithm = 
	metrics.sample.window.ms = 30000
	kafkastore.init.timeout.ms = 60000
 (io.confluent.kafka.schemaregistry.rest.SchemaRegistryConfig)
[2018-04-27 15:46:25,129] INFO Logging initialized @2801ms (org.eclipse.jetty.util.log)
[2018-04-27 15:46:26,682] INFO Initializing KafkaStore with broker endpoints: PLAINTEXT://maya:9092 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-27 15:46:27,056] INFO Creating schemas topic _schemas (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-27 15:46:27,059] WARN Creating the schema topic _schemas using a replication factor of 1, which is less than the desired one of 3. If this is a production environment, it's crucial to add more brokers and increase the replication factor of the topic. (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-27 15:46:27,982] INFO Initialized last consumed offset to -1 (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-04-27 15:46:27,983] INFO [kafka-store-reader-thread-_schemas]: Starting (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-04-27 15:46:28,294] INFO Wait to catch up until the offset of the last message at 0 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-27 15:46:28,383] INFO Joining schema registry with Zookeeper-based coordination (io.confluent.kafka.schemaregistry.storage.KafkaSchemaRegistry)
[2018-04-27 15:46:28,453] INFO Created schema registry namespace localhost:2181/schema_registry (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-04-27 15:46:28,560] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-04-27 15:46:28,606] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-04-27 15:46:28,630] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-27 15:46:28,803] INFO Adding listener: http://0.0.0.0:8081 (io.confluent.rest.Application)
[2018-04-27 15:46:28,903] INFO jetty-9.2.22.v20170606 (org.eclipse.jetty.server.Server)
[2018-04-27 15:46:30,120] INFO HV000001: Hibernate Validator 5.1.3.Final (org.hibernate.validator.internal.util.Version)
[2018-04-27 15:46:30,411] INFO Started o.e.j.s.ServletContextHandler@5ef6ae06{/,null,AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler)
[2018-04-27 15:46:30,428] INFO Started NetworkTrafficServerConnector@3568f9d2{HTTP/1.1}{0.0.0.0:8081} (org.eclipse.jetty.server.NetworkTrafficServerConnector)
[2018-04-27 15:46:30,430] INFO Started @8104ms (org.eclipse.jetty.server.Server)
[2018-04-27 15:46:30,431] INFO Server started, listening for requests... (io.confluent.kafka.schemaregistry.rest.SchemaRegistryMain)
[2018-04-27 15:47:14,220] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-27 15:47:14,281] INFO 127.0.0.1 - - [27/Apr/2018:15:47:13 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  338 (io.confluent.rest-utils.requests)
[2018-04-27 15:47:16,207] INFO Wait to catch up until the offset of the last message at 2 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-27 15:47:16,226] INFO 127.0.0.1 - - [27/Apr/2018:15:47:16 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  23 (io.confluent.rest-utils.requests)
[2018-04-27 15:47:17,473] INFO Wait to catch up until the offset of the last message at 3 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-27 15:47:17,491] INFO 127.0.0.1 - - [27/Apr/2018:15:47:17 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  22 (io.confluent.rest-utils.requests)
[2018-04-27 15:47:17,502] INFO Wait to catch up until the offset of the last message at 4 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-27 15:47:18,914] INFO 127.0.0.1 - - [27/Apr/2018:15:47:17 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 409 93  1420 (io.confluent.rest-utils.requests)
[2018-04-27 15:54:23,964] INFO 127.0.0.1 - - [27/Apr/2018:15:54:23 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  17 (io.confluent.rest-utils.requests)
[2018-04-27 15:54:24,075] INFO 127.0.0.1 - - [27/Apr/2018:15:54:24 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  7 (io.confluent.rest-utils.requests)
[2018-04-27 15:54:24,126] INFO Wait to catch up until the offset of the last message at 4 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-27 15:54:24,135] INFO 127.0.0.1 - - [27/Apr/2018:15:54:24 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 409 93  12 (io.confluent.rest-utils.requests)
[2018-04-27 16:05:05,616] INFO 127.0.0.1 - - [27/Apr/2018:16:05:05 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  16 (io.confluent.rest-utils.requests)
[2018-04-27 16:05:05,744] INFO 127.0.0.1 - - [27/Apr/2018:16:05:05 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  12 (io.confluent.rest-utils.requests)
[2018-04-27 16:05:05,772] INFO Wait to catch up until the offset of the last message at 4 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-27 16:05:05,792] INFO 127.0.0.1 - - [27/Apr/2018:16:05:05 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 409 93  27 (io.confluent.rest-utils.requests)
[2018-04-27 16:10:02,235] INFO 127.0.0.1 - - [27/Apr/2018:16:10:02 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  6 (io.confluent.rest-utils.requests)
[2018-04-27 16:10:02,355] INFO 127.0.0.1 - - [27/Apr/2018:16:10:02 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  20 (io.confluent.rest-utils.requests)
[2018-04-27 16:10:02,375] INFO Wait to catch up until the offset of the last message at 4 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-27 16:10:02,379] INFO 127.0.0.1 - - [27/Apr/2018:16:10:02 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 409 93  8 (io.confluent.rest-utils.requests)
[2018-04-27 16:12:27,762] INFO 127.0.0.1 - - [27/Apr/2018:16:12:27 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  6 (io.confluent.rest-utils.requests)
[2018-04-27 16:12:27,877] INFO 127.0.0.1 - - [27/Apr/2018:16:12:27 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  6 (io.confluent.rest-utils.requests)
[2018-04-27 16:15:07,074] INFO 127.0.0.1 - - [27/Apr/2018:16:15:07 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  41 (io.confluent.rest-utils.requests)
[2018-04-27 16:15:07,205] INFO 127.0.0.1 - - [27/Apr/2018:16:15:07 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  19 (io.confluent.rest-utils.requests)
[2018-04-27 16:18:41,108] INFO 127.0.0.1 - - [27/Apr/2018:16:18:41 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  17 (io.confluent.rest-utils.requests)
[2018-04-27 16:18:41,250] INFO 127.0.0.1 - - [27/Apr/2018:16:18:41 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  36 (io.confluent.rest-utils.requests)
[2018-04-27 16:18:41,286] INFO Wait to catch up until the offset of the last message at 4 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-27 16:18:41,289] INFO 127.0.0.1 - - [27/Apr/2018:16:18:41 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 409 93  28 (io.confluent.rest-utils.requests)
[2018-04-27 16:29:35,145] INFO 127.0.0.1 - - [27/Apr/2018:16:29:35 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  95 (io.confluent.rest-utils.requests)
[2018-04-27 16:29:35,329] INFO 127.0.0.1 - - [27/Apr/2018:16:29:35 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  116 (io.confluent.rest-utils.requests)
[2018-04-27 16:29:37,642] INFO Wait to catch up until the offset of the last message at 4 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-27 16:29:37,960] INFO 127.0.0.1 - - [27/Apr/2018:16:29:37 +0530] "POST /subjects/payments-value/versions HTTP/1.1" 200 8  325 (io.confluent.rest-utils.requests)
[2018-04-27 16:32:44,511] INFO 127.0.0.1 - - [27/Apr/2018:16:32:44 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  11 (io.confluent.rest-utils.requests)
[2018-04-27 16:32:44,633] INFO 127.0.0.1 - - [27/Apr/2018:16:32:44 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  19 (io.confluent.rest-utils.requests)
[2018-04-27 16:32:44,652] INFO 127.0.0.1 - - [27/Apr/2018:16:32:44 +0530] "POST /subjects/payments-value/versions HTTP/1.1" 200 8  4 (io.confluent.rest-utils.requests)
[2018-04-27 16:37:18,990] INFO SchemaRegistryConfig values: 
	metric.reporters = []
	kafkastore.sasl.kerberos.kinit.cmd = /usr/bin/kinit
	response.mediatype.default = application/vnd.schemaregistry.v1+json
	kafkastore.ssl.trustmanager.algorithm = PKIX
	authentication.realm = 
	ssl.keystore.type = JKS
	kafkastore.topic = _schemas
	metrics.jmx.prefix = kafka.schema.registry
	kafkastore.ssl.enabled.protocols = TLSv1.2,TLSv1.1,TLSv1
	kafkastore.topic.replication.factor = 3
	ssl.truststore.password = [hidden]
	kafkastore.timeout.ms = 500
	host.name = maya
	kafkastore.bootstrap.servers = []
	schema.registry.zk.namespace = schema_registry
	kafkastore.sasl.kerberos.ticket.renew.window.factor = 0.8
	kafkastore.sasl.kerberos.service.name = 
	schema.registry.resource.extension.class = 
	ssl.endpoint.identification.algorithm = 
	compression.enable = false
	kafkastore.ssl.truststore.type = JKS
	avro.compatibility.level = backward
	kafkastore.ssl.protocol = TLS
	kafkastore.ssl.provider = 
	kafkastore.ssl.truststore.location = 
	response.mediatype.preferred = [application/vnd.schemaregistry.v1+json, application/vnd.schemaregistry+json, application/json]
	kafkastore.ssl.keystore.type = JKS
	ssl.truststore.type = JKS
	kafkastore.ssl.truststore.password = [hidden]
	access.control.allow.origin = 
	ssl.truststore.location = 
	ssl.keystore.password = [hidden]
	port = 8081
	kafkastore.ssl.keystore.location = 
	master.eligibility = true
	ssl.client.auth = false
	kafkastore.ssl.keystore.password = [hidden]
	kafkastore.security.protocol = PLAINTEXT
	ssl.trustmanager.algorithm = 
	authentication.method = NONE
	request.logger.name = io.confluent.rest-utils.requests
	ssl.key.password = [hidden]
	kafkastore.zk.session.timeout.ms = 30000
	kafkastore.sasl.mechanism = GSSAPI
	kafkastore.sasl.kerberos.ticket.renew.jitter = 0.05
	kafkastore.ssl.key.password = [hidden]
	zookeeper.set.acl = false
	schema.registry.inter.instance.protocol = http
	authentication.roles = [*]
	metrics.num.samples = 2
	ssl.protocol = TLS
	schema.registry.group.id = schema-registry
	kafkastore.ssl.keymanager.algorithm = SunX509
	kafkastore.connection.url = localhost:2181
	debug = false
	listeners = [http://0.0.0.0:8081]
	kafkastore.group.id = 
	ssl.provider = 
	ssl.enabled.protocols = []
	shutdown.graceful.ms = 1000
	ssl.keystore.location = 
	ssl.cipher.suites = []
	kafkastore.ssl.endpoint.identification.algorithm = 
	kafkastore.ssl.cipher.suites = 
	access.control.allow.methods = 
	kafkastore.sasl.kerberos.min.time.before.relogin = 60000
	ssl.keymanager.algorithm = 
	metrics.sample.window.ms = 30000
	kafkastore.init.timeout.ms = 60000
 (io.confluent.kafka.schemaregistry.rest.SchemaRegistryConfig)
[2018-04-27 16:37:19,706] INFO Logging initialized @2749ms (org.eclipse.jetty.util.log)
[2018-04-27 16:37:21,224] INFO Initializing KafkaStore with broker endpoints: PLAINTEXT://maya:9092 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-27 16:37:21,755] INFO Creating schemas topic _schemas (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-27 16:37:21,758] WARN Creating the schema topic _schemas using a replication factor of 1, which is less than the desired one of 3. If this is a production environment, it's crucial to add more brokers and increase the replication factor of the topic. (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-27 16:37:22,632] INFO Initialized last consumed offset to -1 (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-04-27 16:37:22,634] INFO [kafka-store-reader-thread-_schemas]: Starting (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-04-27 16:37:23,077] INFO Wait to catch up until the offset of the last message at 0 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-27 16:37:23,154] INFO Joining schema registry with Zookeeper-based coordination (io.confluent.kafka.schemaregistry.storage.KafkaSchemaRegistry)
[2018-04-27 16:37:23,285] INFO Created schema registry namespace localhost:2181/schema_registry (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-04-27 16:37:23,434] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-04-27 16:37:23,483] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-04-27 16:37:23,514] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-27 16:37:23,714] INFO Adding listener: http://0.0.0.0:8081 (io.confluent.rest.Application)
[2018-04-27 16:37:23,821] INFO jetty-9.2.22.v20170606 (org.eclipse.jetty.server.Server)
[2018-04-27 16:37:25,114] INFO HV000001: Hibernate Validator 5.1.3.Final (org.hibernate.validator.internal.util.Version)
[2018-04-27 16:37:25,397] INFO Started o.e.j.s.ServletContextHandler@5ef6ae06{/,null,AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler)
[2018-04-27 16:37:25,431] INFO Started NetworkTrafficServerConnector@3568f9d2{HTTP/1.1}{0.0.0.0:8081} (org.eclipse.jetty.server.NetworkTrafficServerConnector)
[2018-04-27 16:37:25,433] INFO Started @8479ms (org.eclipse.jetty.server.Server)
[2018-04-27 16:37:25,433] INFO Server started, listening for requests... (io.confluent.kafka.schemaregistry.rest.SchemaRegistryMain)
[2018-04-27 16:39:45,488] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-27 16:39:45,574] INFO 127.0.0.1 - - [27/Apr/2018:16:39:45 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  504 (io.confluent.rest-utils.requests)
[2018-04-27 16:39:46,090] INFO Wait to catch up until the offset of the last message at 2 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-27 16:39:46,126] INFO 127.0.0.1 - - [27/Apr/2018:16:39:46 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  47 (io.confluent.rest-utils.requests)
[2018-04-27 16:39:46,565] INFO Wait to catch up until the offset of the last message at 3 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-27 16:39:46,579] INFO 127.0.0.1 - - [27/Apr/2018:16:39:46 +0530] "POST /subjects/payments-value/versions HTTP/1.1" 200 8  17 (io.confluent.rest-utils.requests)
[2018-04-30 09:55:39,856] INFO SchemaRegistryConfig values: 
	metric.reporters = []
	kafkastore.sasl.kerberos.kinit.cmd = /usr/bin/kinit
	response.mediatype.default = application/vnd.schemaregistry.v1+json
	kafkastore.ssl.trustmanager.algorithm = PKIX
	authentication.realm = 
	ssl.keystore.type = JKS
	kafkastore.topic = _schemas
	metrics.jmx.prefix = kafka.schema.registry
	kafkastore.ssl.enabled.protocols = TLSv1.2,TLSv1.1,TLSv1
	kafkastore.topic.replication.factor = 3
	ssl.truststore.password = [hidden]
	kafkastore.timeout.ms = 500
	host.name = maya
	kafkastore.bootstrap.servers = []
	schema.registry.zk.namespace = schema_registry
	kafkastore.sasl.kerberos.ticket.renew.window.factor = 0.8
	kafkastore.sasl.kerberos.service.name = 
	schema.registry.resource.extension.class = 
	ssl.endpoint.identification.algorithm = 
	compression.enable = false
	kafkastore.ssl.truststore.type = JKS
	avro.compatibility.level = backward
	kafkastore.ssl.protocol = TLS
	kafkastore.ssl.provider = 
	kafkastore.ssl.truststore.location = 
	response.mediatype.preferred = [application/vnd.schemaregistry.v1+json, application/vnd.schemaregistry+json, application/json]
	kafkastore.ssl.keystore.type = JKS
	ssl.truststore.type = JKS
	kafkastore.ssl.truststore.password = [hidden]
	access.control.allow.origin = 
	ssl.truststore.location = 
	ssl.keystore.password = [hidden]
	port = 8081
	kafkastore.ssl.keystore.location = 
	master.eligibility = true
	ssl.client.auth = false
	kafkastore.ssl.keystore.password = [hidden]
	kafkastore.security.protocol = PLAINTEXT
	ssl.trustmanager.algorithm = 
	authentication.method = NONE
	request.logger.name = io.confluent.rest-utils.requests
	ssl.key.password = [hidden]
	kafkastore.zk.session.timeout.ms = 30000
	kafkastore.sasl.mechanism = GSSAPI
	kafkastore.sasl.kerberos.ticket.renew.jitter = 0.05
	kafkastore.ssl.key.password = [hidden]
	zookeeper.set.acl = false
	schema.registry.inter.instance.protocol = http
	authentication.roles = [*]
	metrics.num.samples = 2
	ssl.protocol = TLS
	schema.registry.group.id = schema-registry
	kafkastore.ssl.keymanager.algorithm = SunX509
	kafkastore.connection.url = localhost:2181
	debug = false
	listeners = [http://0.0.0.0:8081]
	kafkastore.group.id = 
	ssl.provider = 
	ssl.enabled.protocols = []
	shutdown.graceful.ms = 1000
	ssl.keystore.location = 
	ssl.cipher.suites = []
	kafkastore.ssl.endpoint.identification.algorithm = 
	kafkastore.ssl.cipher.suites = 
	access.control.allow.methods = 
	kafkastore.sasl.kerberos.min.time.before.relogin = 60000
	ssl.keymanager.algorithm = 
	metrics.sample.window.ms = 30000
	kafkastore.init.timeout.ms = 60000
 (io.confluent.kafka.schemaregistry.rest.SchemaRegistryConfig)
[2018-04-30 09:55:40,468] INFO Logging initialized @2849ms (org.eclipse.jetty.util.log)
[2018-04-30 09:55:42,141] INFO Initializing KafkaStore with broker endpoints: PLAINTEXT://maya:9092 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-30 09:55:42,656] INFO Creating schemas topic _schemas (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-30 09:55:42,660] WARN Creating the schema topic _schemas using a replication factor of 1, which is less than the desired one of 3. If this is a production environment, it's crucial to add more brokers and increase the replication factor of the topic. (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-30 09:55:43,638] INFO Initialized last consumed offset to -1 (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-04-30 09:55:43,640] INFO [kafka-store-reader-thread-_schemas]: Starting (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-04-30 09:55:44,005] INFO Wait to catch up until the offset of the last message at 0 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-30 09:55:44,118] INFO Joining schema registry with Zookeeper-based coordination (io.confluent.kafka.schemaregistry.storage.KafkaSchemaRegistry)
[2018-04-30 09:55:44,201] INFO Created schema registry namespace localhost:2181/schema_registry (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-04-30 09:55:44,294] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-04-30 09:55:44,328] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-04-30 09:55:44,359] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-30 09:55:44,673] INFO Adding listener: http://0.0.0.0:8081 (io.confluent.rest.Application)
[2018-04-30 09:55:44,774] INFO jetty-9.2.22.v20170606 (org.eclipse.jetty.server.Server)
[2018-04-30 09:55:46,034] INFO HV000001: Hibernate Validator 5.1.3.Final (org.hibernate.validator.internal.util.Version)
[2018-04-30 09:55:46,370] INFO Started o.e.j.s.ServletContextHandler@5ef6ae06{/,null,AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler)
[2018-04-30 09:55:46,406] INFO Started NetworkTrafficServerConnector@3568f9d2{HTTP/1.1}{0.0.0.0:8081} (org.eclipse.jetty.server.NetworkTrafficServerConnector)
[2018-04-30 09:55:46,408] INFO Started @8792ms (org.eclipse.jetty.server.Server)
[2018-04-30 09:55:46,408] INFO Server started, listening for requests... (io.confluent.kafka.schemaregistry.rest.SchemaRegistryMain)
[2018-04-30 10:01:55,704] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-30 10:01:55,819] INFO 127.0.0.1 - - [30/Apr/2018:10:01:55 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  593 (io.confluent.rest-utils.requests)
[2018-04-30 10:01:56,445] INFO Wait to catch up until the offset of the last message at 2 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-30 10:01:56,465] INFO 127.0.0.1 - - [30/Apr/2018:10:01:56 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  23 (io.confluent.rest-utils.requests)
[2018-04-30 10:01:56,916] INFO Wait to catch up until the offset of the last message at 3 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-30 10:01:56,953] INFO 127.0.0.1 - - [30/Apr/2018:10:01:56 +0530] "POST /subjects/payments-value/versions HTTP/1.1" 200 8  48 (io.confluent.rest-utils.requests)
[2018-04-30 10:09:48,537] INFO 127.0.0.1 - - [30/Apr/2018:10:09:48 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  9 (io.confluent.rest-utils.requests)
[2018-04-30 10:12:53,754] INFO 127.0.0.1 - - [30/Apr/2018:10:12:53 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  7 (io.confluent.rest-utils.requests)
[2018-04-30 10:16:03,016] INFO 127.0.0.1 - - [30/Apr/2018:10:16:02 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  20 (io.confluent.rest-utils.requests)
[2018-04-30 10:16:03,133] INFO 127.0.0.1 - - [30/Apr/2018:10:16:03 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  14 (io.confluent.rest-utils.requests)
[2018-04-30 10:16:03,162] INFO 127.0.0.1 - - [30/Apr/2018:10:16:03 +0530] "POST /subjects/payments-value/versions HTTP/1.1" 200 8  17 (io.confluent.rest-utils.requests)
[2018-04-30 13:35:47,201] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-04-30 13:35:48,103] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-04-30 13:38:53,098] INFO 127.0.0.1 - - [30/Apr/2018:13:38:53 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  65 (io.confluent.rest-utils.requests)
[2018-04-30 13:38:53,253] INFO 127.0.0.1 - - [30/Apr/2018:13:38:53 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  34 (io.confluent.rest-utils.requests)
[2018-04-30 13:38:53,292] INFO 127.0.0.1 - - [30/Apr/2018:13:38:53 +0530] "POST /subjects/payments-value/versions HTTP/1.1" 200 8  7 (io.confluent.rest-utils.requests)
[2018-04-30 14:03:21,499] INFO SchemaRegistryConfig values: 
	metric.reporters = []
	kafkastore.sasl.kerberos.kinit.cmd = /usr/bin/kinit
	response.mediatype.default = application/vnd.schemaregistry.v1+json
	kafkastore.ssl.trustmanager.algorithm = PKIX
	authentication.realm = 
	ssl.keystore.type = JKS
	kafkastore.topic = _schemas
	metrics.jmx.prefix = kafka.schema.registry
	kafkastore.ssl.enabled.protocols = TLSv1.2,TLSv1.1,TLSv1
	kafkastore.topic.replication.factor = 3
	ssl.truststore.password = [hidden]
	kafkastore.timeout.ms = 500
	host.name = maya
	kafkastore.bootstrap.servers = []
	schema.registry.zk.namespace = schema_registry
	kafkastore.sasl.kerberos.ticket.renew.window.factor = 0.8
	kafkastore.sasl.kerberos.service.name = 
	schema.registry.resource.extension.class = 
	ssl.endpoint.identification.algorithm = 
	compression.enable = false
	kafkastore.ssl.truststore.type = JKS
	avro.compatibility.level = backward
	kafkastore.ssl.protocol = TLS
	kafkastore.ssl.provider = 
	kafkastore.ssl.truststore.location = 
	response.mediatype.preferred = [application/vnd.schemaregistry.v1+json, application/vnd.schemaregistry+json, application/json]
	kafkastore.ssl.keystore.type = JKS
	ssl.truststore.type = JKS
	kafkastore.ssl.truststore.password = [hidden]
	access.control.allow.origin = 
	ssl.truststore.location = 
	ssl.keystore.password = [hidden]
	port = 8081
	kafkastore.ssl.keystore.location = 
	master.eligibility = true
	ssl.client.auth = false
	kafkastore.ssl.keystore.password = [hidden]
	kafkastore.security.protocol = PLAINTEXT
	ssl.trustmanager.algorithm = 
	authentication.method = NONE
	request.logger.name = io.confluent.rest-utils.requests
	ssl.key.password = [hidden]
	kafkastore.zk.session.timeout.ms = 30000
	kafkastore.sasl.mechanism = GSSAPI
	kafkastore.sasl.kerberos.ticket.renew.jitter = 0.05
	kafkastore.ssl.key.password = [hidden]
	zookeeper.set.acl = false
	schema.registry.inter.instance.protocol = http
	authentication.roles = [*]
	metrics.num.samples = 2
	ssl.protocol = TLS
	schema.registry.group.id = schema-registry
	kafkastore.ssl.keymanager.algorithm = SunX509
	kafkastore.connection.url = localhost:2181
	debug = false
	listeners = [http://0.0.0.0:8081]
	kafkastore.group.id = 
	ssl.provider = 
	ssl.enabled.protocols = []
	shutdown.graceful.ms = 1000
	ssl.keystore.location = 
	ssl.cipher.suites = []
	kafkastore.ssl.endpoint.identification.algorithm = 
	kafkastore.ssl.cipher.suites = 
	access.control.allow.methods = 
	kafkastore.sasl.kerberos.min.time.before.relogin = 60000
	ssl.keymanager.algorithm = 
	metrics.sample.window.ms = 30000
	kafkastore.init.timeout.ms = 60000
 (io.confluent.kafka.schemaregistry.rest.SchemaRegistryConfig)
[2018-04-30 14:03:22,155] INFO Logging initialized @2896ms (org.eclipse.jetty.util.log)
[2018-04-30 14:03:23,702] INFO Initializing KafkaStore with broker endpoints: PLAINTEXT://maya:9092 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-30 14:03:24,139] INFO Creating schemas topic _schemas (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-30 14:03:24,139] WARN Creating the schema topic _schemas using a replication factor of 1, which is less than the desired one of 3. If this is a production environment, it's crucial to add more brokers and increase the replication factor of the topic. (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-30 14:03:25,202] INFO Initialized last consumed offset to -1 (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-04-30 14:03:25,202] INFO [kafka-store-reader-thread-_schemas]: Starting (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-04-30 14:03:25,686] INFO Wait to catch up until the offset of the last message at 0 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-30 14:03:25,811] INFO Joining schema registry with Zookeeper-based coordination (io.confluent.kafka.schemaregistry.storage.KafkaSchemaRegistry)
[2018-04-30 14:03:25,889] INFO Created schema registry namespace localhost:2181/schema_registry (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-04-30 14:03:26,030] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-04-30 14:03:26,077] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-04-30 14:03:26,108] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-30 14:03:26,327] INFO Adding listener: http://0.0.0.0:8081 (io.confluent.rest.Application)
[2018-04-30 14:03:26,405] INFO jetty-9.2.22.v20170606 (org.eclipse.jetty.server.Server)
[2018-04-30 14:03:27,639] INFO HV000001: Hibernate Validator 5.1.3.Final (org.hibernate.validator.internal.util.Version)
[2018-04-30 14:03:27,905] INFO Started o.e.j.s.ServletContextHandler@5ef6ae06{/,null,AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler)
[2018-04-30 14:03:27,936] INFO Started NetworkTrafficServerConnector@3568f9d2{HTTP/1.1}{0.0.0.0:8081} (org.eclipse.jetty.server.NetworkTrafficServerConnector)
[2018-04-30 14:03:27,936] INFO Started @8688ms (org.eclipse.jetty.server.Server)
[2018-04-30 14:03:27,936] INFO Server started, listening for requests... (io.confluent.kafka.schemaregistry.rest.SchemaRegistryMain)
[2018-04-30 14:05:18,464] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-30 14:05:18,551] INFO 127.0.0.1 - - [30/Apr/2018:14:05:17 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  568 (io.confluent.rest-utils.requests)
[2018-04-30 14:05:19,069] INFO Wait to catch up until the offset of the last message at 2 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-30 14:05:19,094] INFO 127.0.0.1 - - [30/Apr/2018:14:05:19 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  31 (io.confluent.rest-utils.requests)
[2018-04-30 14:05:19,531] INFO Wait to catch up until the offset of the last message at 3 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-30 14:05:19,571] INFO 127.0.0.1 - - [30/Apr/2018:14:05:19 +0530] "POST /subjects/payments-value/versions HTTP/1.1" 200 8  51 (io.confluent.rest-utils.requests)
[2018-04-30 14:32:26,345] INFO SchemaRegistryConfig values: 
	metric.reporters = []
	kafkastore.sasl.kerberos.kinit.cmd = /usr/bin/kinit
	response.mediatype.default = application/vnd.schemaregistry.v1+json
	kafkastore.ssl.trustmanager.algorithm = PKIX
	authentication.realm = 
	ssl.keystore.type = JKS
	kafkastore.topic = _schemas
	metrics.jmx.prefix = kafka.schema.registry
	kafkastore.ssl.enabled.protocols = TLSv1.2,TLSv1.1,TLSv1
	kafkastore.topic.replication.factor = 3
	ssl.truststore.password = [hidden]
	kafkastore.timeout.ms = 500
	host.name = maya
	kafkastore.bootstrap.servers = []
	schema.registry.zk.namespace = schema_registry
	kafkastore.sasl.kerberos.ticket.renew.window.factor = 0.8
	kafkastore.sasl.kerberos.service.name = 
	schema.registry.resource.extension.class = 
	ssl.endpoint.identification.algorithm = 
	compression.enable = false
	kafkastore.ssl.truststore.type = JKS
	avro.compatibility.level = backward
	kafkastore.ssl.protocol = TLS
	kafkastore.ssl.provider = 
	kafkastore.ssl.truststore.location = 
	response.mediatype.preferred = [application/vnd.schemaregistry.v1+json, application/vnd.schemaregistry+json, application/json]
	kafkastore.ssl.keystore.type = JKS
	ssl.truststore.type = JKS
	kafkastore.ssl.truststore.password = [hidden]
	access.control.allow.origin = 
	ssl.truststore.location = 
	ssl.keystore.password = [hidden]
	port = 8081
	kafkastore.ssl.keystore.location = 
	master.eligibility = true
	ssl.client.auth = false
	kafkastore.ssl.keystore.password = [hidden]
	kafkastore.security.protocol = PLAINTEXT
	ssl.trustmanager.algorithm = 
	authentication.method = NONE
	request.logger.name = io.confluent.rest-utils.requests
	ssl.key.password = [hidden]
	kafkastore.zk.session.timeout.ms = 30000
	kafkastore.sasl.mechanism = GSSAPI
	kafkastore.sasl.kerberos.ticket.renew.jitter = 0.05
	kafkastore.ssl.key.password = [hidden]
	zookeeper.set.acl = false
	schema.registry.inter.instance.protocol = http
	authentication.roles = [*]
	metrics.num.samples = 2
	ssl.protocol = TLS
	schema.registry.group.id = schema-registry
	kafkastore.ssl.keymanager.algorithm = SunX509
	kafkastore.connection.url = localhost:2181
	debug = false
	listeners = [http://0.0.0.0:8081]
	kafkastore.group.id = 
	ssl.provider = 
	ssl.enabled.protocols = []
	shutdown.graceful.ms = 1000
	ssl.keystore.location = 
	ssl.cipher.suites = []
	kafkastore.ssl.endpoint.identification.algorithm = 
	kafkastore.ssl.cipher.suites = 
	access.control.allow.methods = 
	kafkastore.sasl.kerberos.min.time.before.relogin = 60000
	ssl.keymanager.algorithm = 
	metrics.sample.window.ms = 30000
	kafkastore.init.timeout.ms = 60000
 (io.confluent.kafka.schemaregistry.rest.SchemaRegistryConfig)
[2018-04-30 14:32:26,612] INFO Logging initialized @915ms (org.eclipse.jetty.util.log)
[2018-04-30 14:32:27,589] INFO Initializing KafkaStore with broker endpoints: PLAINTEXT://maya:9092 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-30 14:32:27,850] INFO Creating schemas topic _schemas (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-30 14:32:27,854] WARN Creating the schema topic _schemas using a replication factor of 1, which is less than the desired one of 3. If this is a production environment, it's crucial to add more brokers and increase the replication factor of the topic. (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-30 14:32:28,453] INFO Initialized last consumed offset to -1 (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-04-30 14:32:28,455] INFO [kafka-store-reader-thread-_schemas]: Starting (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-04-30 14:32:28,789] INFO Wait to catch up until the offset of the last message at 0 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-30 14:32:28,828] INFO Joining schema registry with Zookeeper-based coordination (io.confluent.kafka.schemaregistry.storage.KafkaSchemaRegistry)
[2018-04-30 14:32:28,899] INFO Created schema registry namespace localhost:2181/schema_registry (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-04-30 14:32:29,018] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-04-30 14:32:29,034] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-30 14:32:29,063] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-04-30 14:32:29,121] INFO Adding listener: http://0.0.0.0:8081 (io.confluent.rest.Application)
[2018-04-30 14:32:29,208] INFO jetty-9.2.22.v20170606 (org.eclipse.jetty.server.Server)
[2018-04-30 14:32:30,113] INFO HV000001: Hibernate Validator 5.1.3.Final (org.hibernate.validator.internal.util.Version)
[2018-04-30 14:32:30,324] INFO Started o.e.j.s.ServletContextHandler@5ef6ae06{/,null,AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler)
[2018-04-30 14:32:30,345] INFO Started NetworkTrafficServerConnector@3568f9d2{HTTP/1.1}{0.0.0.0:8081} (org.eclipse.jetty.server.NetworkTrafficServerConnector)
[2018-04-30 14:32:30,347] INFO Started @4652ms (org.eclipse.jetty.server.Server)
[2018-04-30 14:32:30,347] INFO Server started, listening for requests... (io.confluent.kafka.schemaregistry.rest.SchemaRegistryMain)
[2018-04-30 14:32:55,641] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-30 14:32:55,720] INFO 127.0.0.1 - - [30/Apr/2018:14:32:55 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  415 (io.confluent.rest-utils.requests)
[2018-04-30 14:32:56,288] INFO Wait to catch up until the offset of the last message at 2 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-30 14:32:56,313] INFO 127.0.0.1 - - [30/Apr/2018:14:32:56 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  39 (io.confluent.rest-utils.requests)
[2018-04-30 14:32:56,695] INFO Wait to catch up until the offset of the last message at 3 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-30 14:32:56,727] INFO 127.0.0.1 - - [30/Apr/2018:14:32:56 +0530] "POST /subjects/payments-value/versions HTTP/1.1" 200 8  41 (io.confluent.rest-utils.requests)
[2018-04-30 14:37:14,556] INFO 127.0.0.1 - - [30/Apr/2018:14:37:14 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  9 (io.confluent.rest-utils.requests)
[2018-04-30 14:37:14,702] INFO 127.0.0.1 - - [30/Apr/2018:14:37:14 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  12 (io.confluent.rest-utils.requests)
[2018-04-30 14:37:15,097] INFO Wait to catch up until the offset of the last message at 4 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-04-30 14:37:15,145] INFO 127.0.0.1 - - [30/Apr/2018:14:37:15 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  59 (io.confluent.rest-utils.requests)
[2018-04-30 14:38:56,931] INFO 127.0.0.1 - - [30/Apr/2018:14:38:56 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  8 (io.confluent.rest-utils.requests)
[2018-04-30 14:38:57,061] INFO 127.0.0.1 - - [30/Apr/2018:14:38:57 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  22 (io.confluent.rest-utils.requests)
[2018-04-30 14:38:57,089] INFO 127.0.0.1 - - [30/Apr/2018:14:38:57 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  22 (io.confluent.rest-utils.requests)
[2018-05-02 09:22:24,885] INFO SchemaRegistryConfig values: 
	metric.reporters = []
	kafkastore.sasl.kerberos.kinit.cmd = /usr/bin/kinit
	response.mediatype.default = application/vnd.schemaregistry.v1+json
	kafkastore.ssl.trustmanager.algorithm = PKIX
	authentication.realm = 
	ssl.keystore.type = JKS
	kafkastore.topic = _schemas
	metrics.jmx.prefix = kafka.schema.registry
	kafkastore.ssl.enabled.protocols = TLSv1.2,TLSv1.1,TLSv1
	kafkastore.topic.replication.factor = 3
	ssl.truststore.password = [hidden]
	kafkastore.timeout.ms = 500
	host.name = maya
	kafkastore.bootstrap.servers = []
	schema.registry.zk.namespace = schema_registry
	kafkastore.sasl.kerberos.ticket.renew.window.factor = 0.8
	kafkastore.sasl.kerberos.service.name = 
	schema.registry.resource.extension.class = 
	ssl.endpoint.identification.algorithm = 
	compression.enable = false
	kafkastore.ssl.truststore.type = JKS
	avro.compatibility.level = backward
	kafkastore.ssl.protocol = TLS
	kafkastore.ssl.provider = 
	kafkastore.ssl.truststore.location = 
	response.mediatype.preferred = [application/vnd.schemaregistry.v1+json, application/vnd.schemaregistry+json, application/json]
	kafkastore.ssl.keystore.type = JKS
	ssl.truststore.type = JKS
	kafkastore.ssl.truststore.password = [hidden]
	access.control.allow.origin = 
	ssl.truststore.location = 
	ssl.keystore.password = [hidden]
	port = 8081
	kafkastore.ssl.keystore.location = 
	master.eligibility = true
	ssl.client.auth = false
	kafkastore.ssl.keystore.password = [hidden]
	kafkastore.security.protocol = PLAINTEXT
	ssl.trustmanager.algorithm = 
	authentication.method = NONE
	request.logger.name = io.confluent.rest-utils.requests
	ssl.key.password = [hidden]
	kafkastore.zk.session.timeout.ms = 30000
	kafkastore.sasl.mechanism = GSSAPI
	kafkastore.sasl.kerberos.ticket.renew.jitter = 0.05
	kafkastore.ssl.key.password = [hidden]
	zookeeper.set.acl = false
	schema.registry.inter.instance.protocol = http
	authentication.roles = [*]
	metrics.num.samples = 2
	ssl.protocol = TLS
	schema.registry.group.id = schema-registry
	kafkastore.ssl.keymanager.algorithm = SunX509
	kafkastore.connection.url = localhost:2181
	debug = false
	listeners = [http://0.0.0.0:8081]
	kafkastore.group.id = 
	ssl.provider = 
	ssl.enabled.protocols = []
	shutdown.graceful.ms = 1000
	ssl.keystore.location = 
	ssl.cipher.suites = []
	kafkastore.ssl.endpoint.identification.algorithm = 
	kafkastore.ssl.cipher.suites = 
	access.control.allow.methods = 
	kafkastore.sasl.kerberos.min.time.before.relogin = 60000
	ssl.keymanager.algorithm = 
	metrics.sample.window.ms = 30000
	kafkastore.init.timeout.ms = 60000
 (io.confluent.kafka.schemaregistry.rest.SchemaRegistryConfig)
[2018-05-02 09:22:25,451] INFO Logging initialized @2705ms (org.eclipse.jetty.util.log)
[2018-05-02 09:22:26,840] INFO Initializing KafkaStore with broker endpoints: PLAINTEXT://maya:9092 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-02 09:22:27,325] INFO Creating schemas topic _schemas (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-02 09:22:27,329] WARN Creating the schema topic _schemas using a replication factor of 1, which is less than the desired one of 3. If this is a production environment, it's crucial to add more brokers and increase the replication factor of the topic. (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-02 09:22:28,304] INFO Initialized last consumed offset to -1 (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-05-02 09:22:28,306] INFO [kafka-store-reader-thread-_schemas]: Starting (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-05-02 09:22:28,722] INFO Wait to catch up until the offset of the last message at 0 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-02 09:22:28,791] INFO Joining schema registry with Zookeeper-based coordination (io.confluent.kafka.schemaregistry.storage.KafkaSchemaRegistry)
[2018-05-02 09:22:28,864] INFO Created schema registry namespace localhost:2181/schema_registry (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-02 09:22:28,956] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-02 09:22:28,992] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-02 09:22:29,016] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-02 09:22:29,269] INFO Adding listener: http://0.0.0.0:8081 (io.confluent.rest.Application)
[2018-05-02 09:22:29,365] INFO jetty-9.2.22.v20170606 (org.eclipse.jetty.server.Server)
[2018-05-02 09:22:30,563] INFO HV000001: Hibernate Validator 5.1.3.Final (org.hibernate.validator.internal.util.Version)
[2018-05-02 09:22:30,887] INFO Started o.e.j.s.ServletContextHandler@5ef6ae06{/,null,AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler)
[2018-05-02 09:22:30,925] INFO Started NetworkTrafficServerConnector@3568f9d2{HTTP/1.1}{0.0.0.0:8081} (org.eclipse.jetty.server.NetworkTrafficServerConnector)
[2018-05-02 09:22:30,927] INFO Started @8183ms (org.eclipse.jetty.server.Server)
[2018-05-02 09:22:30,928] INFO Server started, listening for requests... (io.confluent.kafka.schemaregistry.rest.SchemaRegistryMain)
[2018-05-02 09:25:15,015] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-02 09:25:15,098] INFO 127.0.0.1 - - [02/May/2018:09:25:14 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  647 (io.confluent.rest-utils.requests)
[2018-05-02 09:25:15,697] INFO Wait to catch up until the offset of the last message at 2 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-02 09:25:15,733] INFO 127.0.0.1 - - [02/May/2018:09:25:15 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  50 (io.confluent.rest-utils.requests)
[2018-05-02 09:25:16,120] INFO Wait to catch up until the offset of the last message at 3 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-02 09:25:16,153] INFO 127.0.0.1 - - [02/May/2018:09:25:16 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  42 (io.confluent.rest-utils.requests)
[2018-05-02 09:25:23,393] INFO 127.0.0.1 - - [02/May/2018:09:25:23 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  9 (io.confluent.rest-utils.requests)
[2018-05-02 09:25:23,457] INFO 127.0.0.1 - - [02/May/2018:09:25:23 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  5 (io.confluent.rest-utils.requests)
[2018-05-02 09:25:23,479] INFO 127.0.0.1 - - [02/May/2018:09:25:23 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  16 (io.confluent.rest-utils.requests)
[2018-05-02 09:29:08,736] INFO 127.0.0.1 - - [02/May/2018:09:29:08 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  11 (io.confluent.rest-utils.requests)
[2018-05-02 09:29:09,396] INFO 127.0.0.1 - - [02/May/2018:09:29:09 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  8 (io.confluent.rest-utils.requests)
[2018-05-02 09:34:56,103] INFO 127.0.0.1 - - [02/May/2018:09:34:56 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  7 (io.confluent.rest-utils.requests)
[2018-05-02 09:34:56,223] INFO 127.0.0.1 - - [02/May/2018:09:34:56 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  13 (io.confluent.rest-utils.requests)
[2018-05-02 09:34:56,254] INFO 127.0.0.1 - - [02/May/2018:09:34:56 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  22 (io.confluent.rest-utils.requests)
[2018-05-02 09:35:00,049] INFO 127.0.0.1 - - [02/May/2018:09:35:00 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  4 (io.confluent.rest-utils.requests)
[2018-05-02 09:35:00,074] INFO 127.0.0.1 - - [02/May/2018:09:35:00 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  7 (io.confluent.rest-utils.requests)
[2018-05-02 09:35:00,081] INFO 127.0.0.1 - - [02/May/2018:09:35:00 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  5 (io.confluent.rest-utils.requests)
[2018-05-02 09:37:20,481] INFO 127.0.0.1 - - [02/May/2018:09:37:20 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  28 (io.confluent.rest-utils.requests)
[2018-05-02 09:37:20,935] INFO 127.0.0.1 - - [02/May/2018:09:37:20 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  16 (io.confluent.rest-utils.requests)
[2018-05-02 09:37:20,971] INFO 127.0.0.1 - - [02/May/2018:09:37:20 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  11 (io.confluent.rest-utils.requests)
[2018-05-02 09:37:23,111] INFO 127.0.0.1 - - [02/May/2018:09:37:23 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  10 (io.confluent.rest-utils.requests)
[2018-05-02 09:37:23,152] INFO 127.0.0.1 - - [02/May/2018:09:37:23 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  5 (io.confluent.rest-utils.requests)
[2018-05-02 09:37:23,177] INFO 127.0.0.1 - - [02/May/2018:09:37:23 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  20 (io.confluent.rest-utils.requests)
[2018-05-02 09:45:04,719] INFO 127.0.0.1 - - [02/May/2018:09:45:04 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  14 (io.confluent.rest-utils.requests)
[2018-05-02 09:45:04,931] INFO 127.0.0.1 - - [02/May/2018:09:45:04 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  12 (io.confluent.rest-utils.requests)
[2018-05-02 09:45:04,954] INFO 127.0.0.1 - - [02/May/2018:09:45:04 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  9 (io.confluent.rest-utils.requests)
[2018-05-02 10:15:23,722] INFO SchemaRegistryConfig values: 
	metric.reporters = []
	kafkastore.sasl.kerberos.kinit.cmd = /usr/bin/kinit
	response.mediatype.default = application/vnd.schemaregistry.v1+json
	kafkastore.ssl.trustmanager.algorithm = PKIX
	authentication.realm = 
	ssl.keystore.type = JKS
	kafkastore.topic = _schemas
	metrics.jmx.prefix = kafka.schema.registry
	kafkastore.ssl.enabled.protocols = TLSv1.2,TLSv1.1,TLSv1
	kafkastore.topic.replication.factor = 3
	ssl.truststore.password = [hidden]
	kafkastore.timeout.ms = 500
	host.name = maya
	kafkastore.bootstrap.servers = []
	schema.registry.zk.namespace = schema_registry
	kafkastore.sasl.kerberos.ticket.renew.window.factor = 0.8
	kafkastore.sasl.kerberos.service.name = 
	schema.registry.resource.extension.class = 
	ssl.endpoint.identification.algorithm = 
	compression.enable = false
	kafkastore.ssl.truststore.type = JKS
	avro.compatibility.level = backward
	kafkastore.ssl.protocol = TLS
	kafkastore.ssl.provider = 
	kafkastore.ssl.truststore.location = 
	response.mediatype.preferred = [application/vnd.schemaregistry.v1+json, application/vnd.schemaregistry+json, application/json]
	kafkastore.ssl.keystore.type = JKS
	ssl.truststore.type = JKS
	kafkastore.ssl.truststore.password = [hidden]
	access.control.allow.origin = 
	ssl.truststore.location = 
	ssl.keystore.password = [hidden]
	port = 8081
	kafkastore.ssl.keystore.location = 
	master.eligibility = true
	ssl.client.auth = false
	kafkastore.ssl.keystore.password = [hidden]
	kafkastore.security.protocol = PLAINTEXT
	ssl.trustmanager.algorithm = 
	authentication.method = NONE
	request.logger.name = io.confluent.rest-utils.requests
	ssl.key.password = [hidden]
	kafkastore.zk.session.timeout.ms = 30000
	kafkastore.sasl.mechanism = GSSAPI
	kafkastore.sasl.kerberos.ticket.renew.jitter = 0.05
	kafkastore.ssl.key.password = [hidden]
	zookeeper.set.acl = false
	schema.registry.inter.instance.protocol = http
	authentication.roles = [*]
	metrics.num.samples = 2
	ssl.protocol = TLS
	schema.registry.group.id = schema-registry
	kafkastore.ssl.keymanager.algorithm = SunX509
	kafkastore.connection.url = localhost:2181
	debug = false
	listeners = [http://0.0.0.0:8081]
	kafkastore.group.id = 
	ssl.provider = 
	ssl.enabled.protocols = []
	shutdown.graceful.ms = 1000
	ssl.keystore.location = 
	ssl.cipher.suites = []
	kafkastore.ssl.endpoint.identification.algorithm = 
	kafkastore.ssl.cipher.suites = 
	access.control.allow.methods = 
	kafkastore.sasl.kerberos.min.time.before.relogin = 60000
	ssl.keymanager.algorithm = 
	metrics.sample.window.ms = 30000
	kafkastore.init.timeout.ms = 60000
 (io.confluent.kafka.schemaregistry.rest.SchemaRegistryConfig)
[2018-05-02 10:15:24,085] INFO Logging initialized @1050ms (org.eclipse.jetty.util.log)
[2018-05-02 10:15:25,235] INFO Initializing KafkaStore with broker endpoints: PLAINTEXT://maya:9092 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-02 10:15:25,595] INFO Creating schemas topic _schemas (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-02 10:15:25,600] WARN Creating the schema topic _schemas using a replication factor of 1, which is less than the desired one of 3. If this is a production environment, it's crucial to add more brokers and increase the replication factor of the topic. (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-02 10:15:26,428] INFO Initialized last consumed offset to -1 (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-05-02 10:15:26,429] INFO [kafka-store-reader-thread-_schemas]: Starting (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-05-02 10:15:26,740] INFO Wait to catch up until the offset of the last message at 0 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-02 10:15:26,809] INFO Joining schema registry with Zookeeper-based coordination (io.confluent.kafka.schemaregistry.storage.KafkaSchemaRegistry)
[2018-05-02 10:15:26,863] INFO Created schema registry namespace localhost:2181/schema_registry (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-02 10:15:26,932] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-02 10:15:26,946] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-02 10:15:26,987] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-02 10:15:27,067] INFO Adding listener: http://0.0.0.0:8081 (io.confluent.rest.Application)
[2018-05-02 10:15:27,143] INFO jetty-9.2.22.v20170606 (org.eclipse.jetty.server.Server)
[2018-05-02 10:15:28,110] INFO HV000001: Hibernate Validator 5.1.3.Final (org.hibernate.validator.internal.util.Version)
[2018-05-02 10:15:28,343] INFO Started o.e.j.s.ServletContextHandler@5ef6ae06{/,null,AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler)
[2018-05-02 10:15:28,360] INFO Started NetworkTrafficServerConnector@3568f9d2{HTTP/1.1}{0.0.0.0:8081} (org.eclipse.jetty.server.NetworkTrafficServerConnector)
[2018-05-02 10:15:28,361] INFO Started @5328ms (org.eclipse.jetty.server.Server)
[2018-05-02 10:15:28,362] INFO Server started, listening for requests... (io.confluent.kafka.schemaregistry.rest.SchemaRegistryMain)
[2018-05-02 10:15:57,492] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-02 10:15:57,583] INFO 127.0.0.1 - - [02/May/2018:10:15:56 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  678 (io.confluent.rest-utils.requests)
[2018-05-02 10:15:58,110] INFO Wait to catch up until the offset of the last message at 2 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-02 10:15:58,154] INFO 127.0.0.1 - - [02/May/2018:10:15:58 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  58 (io.confluent.rest-utils.requests)
[2018-05-02 10:15:58,595] INFO Wait to catch up until the offset of the last message at 3 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-02 10:15:58,637] INFO 127.0.0.1 - - [02/May/2018:10:15:58 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  52 (io.confluent.rest-utils.requests)
[2018-05-02 10:16:05,728] INFO 127.0.0.1 - - [02/May/2018:10:16:05 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  26 (io.confluent.rest-utils.requests)
[2018-05-02 10:16:05,785] INFO 127.0.0.1 - - [02/May/2018:10:16:05 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  11 (io.confluent.rest-utils.requests)
[2018-05-02 10:19:33,489] INFO 127.0.0.1 - - [02/May/2018:10:19:33 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  12 (io.confluent.rest-utils.requests)
[2018-05-02 10:19:33,652] INFO 127.0.0.1 - - [02/May/2018:10:19:33 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  9 (io.confluent.rest-utils.requests)
[2018-05-02 10:19:33,687] INFO 127.0.0.1 - - [02/May/2018:10:19:33 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  12 (io.confluent.rest-utils.requests)
[2018-05-02 10:19:34,951] INFO 127.0.0.1 - - [02/May/2018:10:19:34 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  16 (io.confluent.rest-utils.requests)
[2018-05-02 10:19:34,991] INFO 127.0.0.1 - - [02/May/2018:10:19:34 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  9 (io.confluent.rest-utils.requests)
[2018-05-02 10:22:16,550] INFO 127.0.0.1 - - [02/May/2018:10:22:16 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  11 (io.confluent.rest-utils.requests)
[2018-05-02 10:22:16,673] INFO 127.0.0.1 - - [02/May/2018:10:22:16 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  28 (io.confluent.rest-utils.requests)
[2018-05-02 10:22:16,690] INFO 127.0.0.1 - - [02/May/2018:10:22:16 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  8 (io.confluent.rest-utils.requests)
[2018-05-02 10:22:17,152] INFO 127.0.0.1 - - [02/May/2018:10:22:17 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  3 (io.confluent.rest-utils.requests)
[2018-05-02 10:22:42,374] INFO 127.0.0.1 - - [02/May/2018:10:22:42 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  6 (io.confluent.rest-utils.requests)
[2018-05-02 10:22:42,483] INFO 127.0.0.1 - - [02/May/2018:10:22:42 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  11 (io.confluent.rest-utils.requests)
[2018-05-02 10:22:42,510] INFO 127.0.0.1 - - [02/May/2018:10:22:42 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  4 (io.confluent.rest-utils.requests)
[2018-05-02 10:22:42,998] INFO 127.0.0.1 - - [02/May/2018:10:22:42 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  4 (io.confluent.rest-utils.requests)
[2018-05-02 10:23:55,853] INFO 127.0.0.1 - - [02/May/2018:10:23:55 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  6 (io.confluent.rest-utils.requests)
[2018-05-02 10:23:55,959] INFO 127.0.0.1 - - [02/May/2018:10:23:55 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  13 (io.confluent.rest-utils.requests)
[2018-05-02 10:23:55,978] INFO 127.0.0.1 - - [02/May/2018:10:23:55 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  4 (io.confluent.rest-utils.requests)
[2018-05-02 10:23:56,290] INFO 127.0.0.1 - - [02/May/2018:10:23:56 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  5 (io.confluent.rest-utils.requests)
[2018-05-02 10:25:32,171] INFO 127.0.0.1 - - [02/May/2018:10:25:32 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  10 (io.confluent.rest-utils.requests)
[2018-05-02 10:25:32,272] INFO 127.0.0.1 - - [02/May/2018:10:25:32 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  7 (io.confluent.rest-utils.requests)
[2018-05-02 10:25:32,299] INFO 127.0.0.1 - - [02/May/2018:10:25:32 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  7 (io.confluent.rest-utils.requests)
[2018-05-02 10:25:32,788] INFO 127.0.0.1 - - [02/May/2018:10:25:32 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  7 (io.confluent.rest-utils.requests)
[2018-05-02 10:27:08,124] INFO 127.0.0.1 - - [02/May/2018:10:27:08 +0530] "POST /subjects/register-value/versions HTTP/1.1" 200 8  4 (io.confluent.rest-utils.requests)
[2018-05-02 10:27:08,229] INFO 127.0.0.1 - - [02/May/2018:10:27:08 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  9 (io.confluent.rest-utils.requests)
[2018-05-02 10:27:08,253] INFO 127.0.0.1 - - [02/May/2018:10:27:08 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  9 (io.confluent.rest-utils.requests)
[2018-05-02 10:27:08,553] INFO 127.0.0.1 - - [02/May/2018:10:27:08 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  2 (io.confluent.rest-utils.requests)
[2018-05-02 10:36:53,527] INFO Wait to catch up until the offset of the last message at 4 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-02 10:36:53,546] INFO 127.0.0.1 - - [02/May/2018:10:36:53 +0530] "POST /subjects/register1-value/versions HTTP/1.1" 200 8  31 (io.confluent.rest-utils.requests)
[2018-05-02 10:36:54,804] INFO Wait to catch up until the offset of the last message at 5 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-02 10:36:54,876] INFO 127.0.0.1 - - [02/May/2018:10:36:54 +0530] "POST /subjects/booking1-value/versions HTTP/1.1" 200 8  80 (io.confluent.rest-utils.requests)
[2018-05-02 10:36:56,248] INFO Wait to catch up until the offset of the last message at 6 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-02 10:36:56,457] INFO 127.0.0.1 - - [02/May/2018:10:36:56 +0530] "POST /subjects/payment1-value/versions HTTP/1.1" 200 8  212 (io.confluent.rest-utils.requests)
[2018-05-02 10:36:58,163] INFO 127.0.0.1 - - [02/May/2018:10:36:58 +0530] "GET /schemas/ids/3 HTTP/1.1" 200 310  8 (io.confluent.rest-utils.requests)
[2018-05-02 10:36:58,191] INFO 127.0.0.1 - - [02/May/2018:10:36:58 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  8 (io.confluent.rest-utils.requests)
[2018-05-02 10:36:58,202] INFO 127.0.0.1 - - [02/May/2018:10:36:58 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  6 (io.confluent.rest-utils.requests)
[2018-05-02 10:41:16,248] INFO 127.0.0.1 - - [02/May/2018:10:41:16 +0530] "POST /subjects/register1-value/versions HTTP/1.1" 200 8  6 (io.confluent.rest-utils.requests)
[2018-05-02 10:41:16,383] INFO 127.0.0.1 - - [02/May/2018:10:41:16 +0530] "POST /subjects/booking1-value/versions HTTP/1.1" 200 8  23 (io.confluent.rest-utils.requests)
[2018-05-02 10:41:16,409] INFO 127.0.0.1 - - [02/May/2018:10:41:16 +0530] "POST /subjects/payment1-value/versions HTTP/1.1" 200 8  5 (io.confluent.rest-utils.requests)
[2018-05-02 10:41:17,636] INFO 127.0.0.1 - - [02/May/2018:10:41:17 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  4 (io.confluent.rest-utils.requests)
[2018-05-02 10:41:17,668] INFO 127.0.0.1 - - [02/May/2018:10:41:17 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  8 (io.confluent.rest-utils.requests)
[2018-05-02 10:43:26,081] INFO 127.0.0.1 - - [02/May/2018:10:43:26 +0530] "POST /subjects/register1-value/versions HTTP/1.1" 200 8  6 (io.confluent.rest-utils.requests)
[2018-05-02 10:43:26,167] INFO 127.0.0.1 - - [02/May/2018:10:43:26 +0530] "POST /subjects/booking1-value/versions HTTP/1.1" 200 8  11 (io.confluent.rest-utils.requests)
[2018-05-02 10:43:26,180] INFO 127.0.0.1 - - [02/May/2018:10:43:26 +0530] "POST /subjects/payment1-value/versions HTTP/1.1" 200 8  4 (io.confluent.rest-utils.requests)
[2018-05-02 10:43:27,076] INFO 127.0.0.1 - - [02/May/2018:10:43:27 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  5 (io.confluent.rest-utils.requests)
[2018-05-02 10:43:27,111] INFO 127.0.0.1 - - [02/May/2018:10:43:27 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  4 (io.confluent.rest-utils.requests)
[2018-05-02 10:47:09,805] INFO 127.0.0.1 - - [02/May/2018:10:47:09 +0530] "POST /subjects/register1-value/versions HTTP/1.1" 200 8  7 (io.confluent.rest-utils.requests)
[2018-05-02 10:47:09,924] INFO 127.0.0.1 - - [02/May/2018:10:47:09 +0530] "POST /subjects/booking1-value/versions HTTP/1.1" 200 8  14 (io.confluent.rest-utils.requests)
[2018-05-02 10:47:09,962] INFO 127.0.0.1 - - [02/May/2018:10:47:09 +0530] "POST /subjects/payment1-value/versions HTTP/1.1" 200 8  4 (io.confluent.rest-utils.requests)
[2018-05-02 10:47:10,943] INFO 127.0.0.1 - - [02/May/2018:10:47:10 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  14 (io.confluent.rest-utils.requests)
[2018-05-02 10:47:11,019] INFO 127.0.0.1 - - [02/May/2018:10:47:10 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  43 (io.confluent.rest-utils.requests)
[2018-05-02 11:20:28,667] INFO SchemaRegistryConfig values: 
	metric.reporters = []
	kafkastore.sasl.kerberos.kinit.cmd = /usr/bin/kinit
	response.mediatype.default = application/vnd.schemaregistry.v1+json
	kafkastore.ssl.trustmanager.algorithm = PKIX
	authentication.realm = 
	ssl.keystore.type = JKS
	kafkastore.topic = _schemas
	metrics.jmx.prefix = kafka.schema.registry
	kafkastore.ssl.enabled.protocols = TLSv1.2,TLSv1.1,TLSv1
	kafkastore.topic.replication.factor = 3
	ssl.truststore.password = [hidden]
	kafkastore.timeout.ms = 500
	host.name = maya
	kafkastore.bootstrap.servers = []
	schema.registry.zk.namespace = schema_registry
	kafkastore.sasl.kerberos.ticket.renew.window.factor = 0.8
	kafkastore.sasl.kerberos.service.name = 
	schema.registry.resource.extension.class = 
	ssl.endpoint.identification.algorithm = 
	compression.enable = false
	kafkastore.ssl.truststore.type = JKS
	avro.compatibility.level = backward
	kafkastore.ssl.protocol = TLS
	kafkastore.ssl.provider = 
	kafkastore.ssl.truststore.location = 
	response.mediatype.preferred = [application/vnd.schemaregistry.v1+json, application/vnd.schemaregistry+json, application/json]
	kafkastore.ssl.keystore.type = JKS
	ssl.truststore.type = JKS
	kafkastore.ssl.truststore.password = [hidden]
	access.control.allow.origin = 
	ssl.truststore.location = 
	ssl.keystore.password = [hidden]
	port = 8081
	kafkastore.ssl.keystore.location = 
	master.eligibility = true
	ssl.client.auth = false
	kafkastore.ssl.keystore.password = [hidden]
	kafkastore.security.protocol = PLAINTEXT
	ssl.trustmanager.algorithm = 
	authentication.method = NONE
	request.logger.name = io.confluent.rest-utils.requests
	ssl.key.password = [hidden]
	kafkastore.zk.session.timeout.ms = 30000
	kafkastore.sasl.mechanism = GSSAPI
	kafkastore.sasl.kerberos.ticket.renew.jitter = 0.05
	kafkastore.ssl.key.password = [hidden]
	zookeeper.set.acl = false
	schema.registry.inter.instance.protocol = http
	authentication.roles = [*]
	metrics.num.samples = 2
	ssl.protocol = TLS
	schema.registry.group.id = schema-registry
	kafkastore.ssl.keymanager.algorithm = SunX509
	kafkastore.connection.url = localhost:2181
	debug = false
	listeners = [http://0.0.0.0:8081]
	kafkastore.group.id = 
	ssl.provider = 
	ssl.enabled.protocols = []
	shutdown.graceful.ms = 1000
	ssl.keystore.location = 
	ssl.cipher.suites = []
	kafkastore.ssl.endpoint.identification.algorithm = 
	kafkastore.ssl.cipher.suites = 
	access.control.allow.methods = 
	kafkastore.sasl.kerberos.min.time.before.relogin = 60000
	ssl.keymanager.algorithm = 
	metrics.sample.window.ms = 30000
	kafkastore.init.timeout.ms = 60000
 (io.confluent.kafka.schemaregistry.rest.SchemaRegistryConfig)
[2018-05-02 11:20:28,974] INFO Logging initialized @851ms (org.eclipse.jetty.util.log)
[2018-05-02 11:20:29,594] INFO Initializing KafkaStore with broker endpoints: PLAINTEXT://maya:9092 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-02 11:20:29,904] INFO Creating schemas topic _schemas (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-02 11:20:29,906] WARN Creating the schema topic _schemas using a replication factor of 1, which is less than the desired one of 3. If this is a production environment, it's crucial to add more brokers and increase the replication factor of the topic. (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-02 11:20:30,575] INFO Initialized last consumed offset to -1 (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-05-02 11:20:30,579] INFO [kafka-store-reader-thread-_schemas]: Starting (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-05-02 11:20:31,067] INFO Wait to catch up until the offset of the last message at 0 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-02 11:20:31,123] INFO Joining schema registry with Zookeeper-based coordination (io.confluent.kafka.schemaregistry.storage.KafkaSchemaRegistry)
[2018-05-02 11:20:31,307] INFO Created schema registry namespace localhost:2181/schema_registry (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-02 11:20:31,425] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-02 11:20:31,465] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-02 11:20:31,512] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-02 11:20:31,571] INFO Adding listener: http://0.0.0.0:8081 (io.confluent.rest.Application)
[2018-05-02 11:20:31,658] INFO jetty-9.2.22.v20170606 (org.eclipse.jetty.server.Server)
[2018-05-02 11:20:32,522] INFO HV000001: Hibernate Validator 5.1.3.Final (org.hibernate.validator.internal.util.Version)
[2018-05-02 11:20:32,737] INFO Started o.e.j.s.ServletContextHandler@5ef6ae06{/,null,AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler)
[2018-05-02 11:20:32,755] INFO Started NetworkTrafficServerConnector@3568f9d2{HTTP/1.1}{0.0.0.0:8081} (org.eclipse.jetty.server.NetworkTrafficServerConnector)
[2018-05-02 11:20:32,756] INFO Started @4635ms (org.eclipse.jetty.server.Server)
[2018-05-02 11:20:32,757] INFO Server started, listening for requests... (io.confluent.kafka.schemaregistry.rest.SchemaRegistryMain)
[2018-05-02 11:23:46,719] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-02 11:23:46,813] INFO 127.0.0.1 - - [02/May/2018:11:23:46 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  727 (io.confluent.rest-utils.requests)
[2018-05-02 11:23:47,376] INFO Wait to catch up until the offset of the last message at 2 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-02 11:23:47,393] INFO 127.0.0.1 - - [02/May/2018:11:23:47 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  22 (io.confluent.rest-utils.requests)
[2018-05-02 11:23:47,788] INFO Wait to catch up until the offset of the last message at 3 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-02 11:23:47,826] INFO 127.0.0.1 - - [02/May/2018:11:23:47 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  50 (io.confluent.rest-utils.requests)
[2018-05-02 11:23:55,227] INFO 127.0.0.1 - - [02/May/2018:11:23:55 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  8 (io.confluent.rest-utils.requests)
[2018-05-02 11:23:55,266] INFO 127.0.0.1 - - [02/May/2018:11:23:55 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  3 (io.confluent.rest-utils.requests)
[2018-05-02 11:33:15,430] INFO 127.0.0.1 - - [02/May/2018:11:33:15 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  7 (io.confluent.rest-utils.requests)
[2018-05-02 11:33:15,536] INFO 127.0.0.1 - - [02/May/2018:11:33:15 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  17 (io.confluent.rest-utils.requests)
[2018-05-02 11:33:15,557] INFO 127.0.0.1 - - [02/May/2018:11:33:15 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  9 (io.confluent.rest-utils.requests)
[2018-05-02 11:33:16,769] INFO 127.0.0.1 - - [02/May/2018:11:33:16 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  4 (io.confluent.rest-utils.requests)
[2018-05-02 11:33:16,800] INFO 127.0.0.1 - - [02/May/2018:11:33:16 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  4 (io.confluent.rest-utils.requests)
[2018-05-02 11:35:07,029] INFO 127.0.0.1 - - [02/May/2018:11:35:07 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  6 (io.confluent.rest-utils.requests)
[2018-05-02 11:35:07,132] INFO 127.0.0.1 - - [02/May/2018:11:35:07 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  12 (io.confluent.rest-utils.requests)
[2018-05-02 11:35:07,171] INFO 127.0.0.1 - - [02/May/2018:11:35:07 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  26 (io.confluent.rest-utils.requests)
[2018-05-02 11:35:08,555] INFO 127.0.0.1 - - [02/May/2018:11:35:08 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  14 (io.confluent.rest-utils.requests)
[2018-05-02 11:36:55,953] INFO 127.0.0.1 - - [02/May/2018:11:36:55 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  6 (io.confluent.rest-utils.requests)
[2018-05-02 11:36:56,063] INFO 127.0.0.1 - - [02/May/2018:11:36:56 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  11 (io.confluent.rest-utils.requests)
[2018-05-02 11:36:56,089] INFO 127.0.0.1 - - [02/May/2018:11:36:56 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  8 (io.confluent.rest-utils.requests)
[2018-05-02 11:36:57,618] INFO 127.0.0.1 - - [02/May/2018:11:36:57 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  21 (io.confluent.rest-utils.requests)
[2018-05-02 11:36:57,649] INFO 127.0.0.1 - - [02/May/2018:11:36:57 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  4 (io.confluent.rest-utils.requests)
[2018-05-02 11:38:20,184] INFO 127.0.0.1 - - [02/May/2018:11:38:20 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  9 (io.confluent.rest-utils.requests)
[2018-05-02 11:38:20,293] INFO 127.0.0.1 - - [02/May/2018:11:38:20 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  9 (io.confluent.rest-utils.requests)
[2018-05-02 11:38:20,346] INFO 127.0.0.1 - - [02/May/2018:11:38:20 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  17 (io.confluent.rest-utils.requests)
[2018-05-02 11:38:21,389] INFO 127.0.0.1 - - [02/May/2018:11:38:21 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  7 (io.confluent.rest-utils.requests)
[2018-05-02 11:38:21,434] INFO 127.0.0.1 - - [02/May/2018:11:38:21 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  4 (io.confluent.rest-utils.requests)
[2018-05-02 11:44:42,495] INFO SchemaRegistryConfig values: 
	metric.reporters = []
	kafkastore.sasl.kerberos.kinit.cmd = /usr/bin/kinit
	response.mediatype.default = application/vnd.schemaregistry.v1+json
	kafkastore.ssl.trustmanager.algorithm = PKIX
	authentication.realm = 
	ssl.keystore.type = JKS
	kafkastore.topic = _schemas
	metrics.jmx.prefix = kafka.schema.registry
	kafkastore.ssl.enabled.protocols = TLSv1.2,TLSv1.1,TLSv1
	kafkastore.topic.replication.factor = 3
	ssl.truststore.password = [hidden]
	kafkastore.timeout.ms = 500
	host.name = maya
	kafkastore.bootstrap.servers = []
	schema.registry.zk.namespace = schema_registry
	kafkastore.sasl.kerberos.ticket.renew.window.factor = 0.8
	kafkastore.sasl.kerberos.service.name = 
	schema.registry.resource.extension.class = 
	ssl.endpoint.identification.algorithm = 
	compression.enable = false
	kafkastore.ssl.truststore.type = JKS
	avro.compatibility.level = backward
	kafkastore.ssl.protocol = TLS
	kafkastore.ssl.provider = 
	kafkastore.ssl.truststore.location = 
	response.mediatype.preferred = [application/vnd.schemaregistry.v1+json, application/vnd.schemaregistry+json, application/json]
	kafkastore.ssl.keystore.type = JKS
	ssl.truststore.type = JKS
	kafkastore.ssl.truststore.password = [hidden]
	access.control.allow.origin = 
	ssl.truststore.location = 
	ssl.keystore.password = [hidden]
	port = 8081
	kafkastore.ssl.keystore.location = 
	master.eligibility = true
	ssl.client.auth = false
	kafkastore.ssl.keystore.password = [hidden]
	kafkastore.security.protocol = PLAINTEXT
	ssl.trustmanager.algorithm = 
	authentication.method = NONE
	request.logger.name = io.confluent.rest-utils.requests
	ssl.key.password = [hidden]
	kafkastore.zk.session.timeout.ms = 30000
	kafkastore.sasl.mechanism = GSSAPI
	kafkastore.sasl.kerberos.ticket.renew.jitter = 0.05
	kafkastore.ssl.key.password = [hidden]
	zookeeper.set.acl = false
	schema.registry.inter.instance.protocol = http
	authentication.roles = [*]
	metrics.num.samples = 2
	ssl.protocol = TLS
	schema.registry.group.id = schema-registry
	kafkastore.ssl.keymanager.algorithm = SunX509
	kafkastore.connection.url = localhost:2181
	debug = false
	listeners = [http://0.0.0.0:8081]
	kafkastore.group.id = 
	ssl.provider = 
	ssl.enabled.protocols = []
	shutdown.graceful.ms = 1000
	ssl.keystore.location = 
	ssl.cipher.suites = []
	kafkastore.ssl.endpoint.identification.algorithm = 
	kafkastore.ssl.cipher.suites = 
	access.control.allow.methods = 
	kafkastore.sasl.kerberos.min.time.before.relogin = 60000
	ssl.keymanager.algorithm = 
	metrics.sample.window.ms = 30000
	kafkastore.init.timeout.ms = 60000
 (io.confluent.kafka.schemaregistry.rest.SchemaRegistryConfig)
[2018-05-02 11:44:42,791] INFO Logging initialized @823ms (org.eclipse.jetty.util.log)
[2018-05-02 11:44:43,298] INFO Initializing KafkaStore with broker endpoints: PLAINTEXT://maya:9092 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-02 11:44:43,605] INFO Creating schemas topic _schemas (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-02 11:44:43,608] WARN Creating the schema topic _schemas using a replication factor of 1, which is less than the desired one of 3. If this is a production environment, it's crucial to add more brokers and increase the replication factor of the topic. (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-02 11:44:44,245] INFO Initialized last consumed offset to -1 (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-05-02 11:44:44,247] INFO [kafka-store-reader-thread-_schemas]: Starting (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-05-02 11:44:44,649] INFO Wait to catch up until the offset of the last message at 0 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-02 11:44:44,688] INFO Joining schema registry with Zookeeper-based coordination (io.confluent.kafka.schemaregistry.storage.KafkaSchemaRegistry)
[2018-05-02 11:44:44,736] INFO Created schema registry namespace localhost:2181/schema_registry (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-02 11:44:44,816] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-02 11:44:44,832] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-02 11:44:44,871] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-02 11:44:44,937] INFO Adding listener: http://0.0.0.0:8081 (io.confluent.rest.Application)
[2018-05-02 11:44:45,009] INFO jetty-9.2.22.v20170606 (org.eclipse.jetty.server.Server)
[2018-05-02 11:44:45,873] INFO HV000001: Hibernate Validator 5.1.3.Final (org.hibernate.validator.internal.util.Version)
[2018-05-02 11:44:46,069] INFO Started o.e.j.s.ServletContextHandler@5ef6ae06{/,null,AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler)
[2018-05-02 11:44:46,082] INFO Started NetworkTrafficServerConnector@3568f9d2{HTTP/1.1}{0.0.0.0:8081} (org.eclipse.jetty.server.NetworkTrafficServerConnector)
[2018-05-02 11:44:46,084] INFO Started @4118ms (org.eclipse.jetty.server.Server)
[2018-05-02 11:44:46,084] INFO Server started, listening for requests... (io.confluent.kafka.schemaregistry.rest.SchemaRegistryMain)
[2018-05-02 11:45:08,243] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-02 11:45:08,297] INFO 127.0.0.1 - - [02/May/2018:11:45:07 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  408 (io.confluent.rest-utils.requests)
[2018-05-02 11:45:08,845] INFO Wait to catch up until the offset of the last message at 2 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-02 11:45:08,869] INFO 127.0.0.1 - - [02/May/2018:11:45:08 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  30 (io.confluent.rest-utils.requests)
[2018-05-02 11:45:09,361] INFO Wait to catch up until the offset of the last message at 3 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-02 11:45:09,403] INFO 127.0.0.1 - - [02/May/2018:11:45:09 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  53 (io.confluent.rest-utils.requests)
[2018-05-02 11:45:16,590] INFO 127.0.0.1 - - [02/May/2018:11:45:16 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  29 (io.confluent.rest-utils.requests)
[2018-05-02 11:45:16,632] INFO 127.0.0.1 - - [02/May/2018:11:45:16 +0530] "GET /schemas/ids/3 HTTP/1.1" 200 310  7 (io.confluent.rest-utils.requests)
[2018-05-02 11:45:16,651] INFO 127.0.0.1 - - [02/May/2018:11:45:16 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  14 (io.confluent.rest-utils.requests)
[2018-05-02 11:48:12,445] INFO 127.0.0.1 - - [02/May/2018:11:48:12 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  13 (io.confluent.rest-utils.requests)
[2018-05-02 11:48:12,569] INFO 127.0.0.1 - - [02/May/2018:11:48:12 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  8 (io.confluent.rest-utils.requests)
[2018-05-02 11:48:12,594] INFO 127.0.0.1 - - [02/May/2018:11:48:12 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  7 (io.confluent.rest-utils.requests)
[2018-05-02 11:48:13,918] INFO 127.0.0.1 - - [02/May/2018:11:48:13 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  5 (io.confluent.rest-utils.requests)
[2018-05-02 11:48:13,964] INFO 127.0.0.1 - - [02/May/2018:11:48:13 +0530] "GET /schemas/ids/3 HTTP/1.1" 200 310  17 (io.confluent.rest-utils.requests)
[2018-05-02 11:48:13,970] INFO 127.0.0.1 - - [02/May/2018:11:48:13 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  4 (io.confluent.rest-utils.requests)
[2018-05-02 11:49:02,793] INFO 127.0.0.1 - - [02/May/2018:11:49:02 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  5 (io.confluent.rest-utils.requests)
[2018-05-02 11:49:02,900] INFO 127.0.0.1 - - [02/May/2018:11:49:02 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  12 (io.confluent.rest-utils.requests)
[2018-05-02 11:49:02,918] INFO 127.0.0.1 - - [02/May/2018:11:49:02 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  5 (io.confluent.rest-utils.requests)
[2018-05-02 11:49:03,942] INFO 127.0.0.1 - - [02/May/2018:11:49:03 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  5 (io.confluent.rest-utils.requests)
[2018-05-02 11:49:03,977] INFO 127.0.0.1 - - [02/May/2018:11:49:03 +0530] "GET /schemas/ids/3 HTTP/1.1" 200 310  4 (io.confluent.rest-utils.requests)
[2018-05-02 11:50:57,754] INFO 127.0.0.1 - - [02/May/2018:11:50:57 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  6 (io.confluent.rest-utils.requests)
[2018-05-02 11:50:57,851] INFO 127.0.0.1 - - [02/May/2018:11:50:57 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  5 (io.confluent.rest-utils.requests)
[2018-05-02 11:50:57,870] INFO 127.0.0.1 - - [02/May/2018:11:50:57 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  6 (io.confluent.rest-utils.requests)
[2018-05-02 11:51:50,389] INFO 127.0.0.1 - - [02/May/2018:11:51:50 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  7 (io.confluent.rest-utils.requests)
[2018-05-02 11:51:50,519] INFO 127.0.0.1 - - [02/May/2018:11:51:50 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  16 (io.confluent.rest-utils.requests)
[2018-05-02 11:51:50,542] INFO 127.0.0.1 - - [02/May/2018:11:51:50 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  6 (io.confluent.rest-utils.requests)
[2018-05-02 11:51:50,977] INFO 127.0.0.1 - - [02/May/2018:11:51:50 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  28 (io.confluent.rest-utils.requests)
[2018-05-02 11:51:51,005] INFO 127.0.0.1 - - [02/May/2018:11:51:51 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  2 (io.confluent.rest-utils.requests)
[2018-05-02 11:51:51,015] INFO 127.0.0.1 - - [02/May/2018:11:51:51 +0530] "GET /schemas/ids/3 HTTP/1.1" 200 310  7 (io.confluent.rest-utils.requests)
[2018-05-02 11:57:05,710] INFO 127.0.0.1 - - [02/May/2018:11:57:05 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  7 (io.confluent.rest-utils.requests)
[2018-05-02 11:57:05,828] INFO 127.0.0.1 - - [02/May/2018:11:57:05 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  9 (io.confluent.rest-utils.requests)
[2018-05-02 11:57:05,868] INFO 127.0.0.1 - - [02/May/2018:11:57:05 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  5 (io.confluent.rest-utils.requests)
[2018-05-02 11:57:06,828] INFO 127.0.0.1 - - [02/May/2018:11:57:06 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  6 (io.confluent.rest-utils.requests)
[2018-05-02 11:57:06,851] INFO 127.0.0.1 - - [02/May/2018:11:57:06 +0530] "GET /schemas/ids/3 HTTP/1.1" 200 310  3 (io.confluent.rest-utils.requests)
[2018-05-02 11:57:06,860] INFO 127.0.0.1 - - [02/May/2018:11:57:06 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  4 (io.confluent.rest-utils.requests)
[2018-05-02 12:05:36,561] INFO 127.0.0.1 - - [02/May/2018:12:05:36 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  5 (io.confluent.rest-utils.requests)
[2018-05-02 12:05:36,673] INFO 127.0.0.1 - - [02/May/2018:12:05:36 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  14 (io.confluent.rest-utils.requests)
[2018-05-02 12:05:36,692] INFO 127.0.0.1 - - [02/May/2018:12:05:36 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  9 (io.confluent.rest-utils.requests)
[2018-05-02 12:05:37,698] INFO 127.0.0.1 - - [02/May/2018:12:05:37 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  4 (io.confluent.rest-utils.requests)
[2018-05-02 12:05:37,719] INFO 127.0.0.1 - - [02/May/2018:12:05:37 +0530] "GET /schemas/ids/3 HTTP/1.1" 200 310  4 (io.confluent.rest-utils.requests)
[2018-05-02 12:05:37,725] INFO 127.0.0.1 - - [02/May/2018:12:05:37 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  3 (io.confluent.rest-utils.requests)
[2018-05-02 12:13:26,019] INFO 127.0.0.1 - - [02/May/2018:12:13:26 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  5 (io.confluent.rest-utils.requests)
[2018-05-02 12:13:26,127] INFO 127.0.0.1 - - [02/May/2018:12:13:26 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  7 (io.confluent.rest-utils.requests)
[2018-05-02 12:13:26,151] INFO 127.0.0.1 - - [02/May/2018:12:13:26 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  6 (io.confluent.rest-utils.requests)
[2018-05-02 12:13:27,170] INFO 127.0.0.1 - - [02/May/2018:12:13:27 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  3 (io.confluent.rest-utils.requests)
[2018-05-02 12:13:27,202] INFO 127.0.0.1 - - [02/May/2018:12:13:27 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  4 (io.confluent.rest-utils.requests)
[2018-05-02 12:45:22,313] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-02 12:45:23,135] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-02 12:51:59,661] INFO 127.0.0.1 - - [02/May/2018:12:51:59 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  14 (io.confluent.rest-utils.requests)
[2018-05-02 12:51:59,753] INFO 127.0.0.1 - - [02/May/2018:12:51:59 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  8 (io.confluent.rest-utils.requests)
[2018-05-02 12:51:59,772] INFO 127.0.0.1 - - [02/May/2018:12:51:59 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  5 (io.confluent.rest-utils.requests)
[2018-05-02 12:52:00,869] INFO 127.0.0.1 - - [02/May/2018:12:52:00 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  23 (io.confluent.rest-utils.requests)
[2018-05-02 12:52:00,904] INFO 127.0.0.1 - - [02/May/2018:12:52:00 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  5 (io.confluent.rest-utils.requests)
[2018-05-02 13:36:49,325] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-02 13:36:50,502] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-02 13:43:52,109] INFO 127.0.0.1 - - [02/May/2018:13:43:52 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  6 (io.confluent.rest-utils.requests)
[2018-05-02 13:43:52,225] INFO 127.0.0.1 - - [02/May/2018:13:43:52 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  8 (io.confluent.rest-utils.requests)
[2018-05-02 13:43:52,256] INFO 127.0.0.1 - - [02/May/2018:13:43:52 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  14 (io.confluent.rest-utils.requests)
[2018-05-02 13:45:36,979] INFO 127.0.0.1 - - [02/May/2018:13:45:36 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  25 (io.confluent.rest-utils.requests)
[2018-05-02 13:45:37,105] INFO 127.0.0.1 - - [02/May/2018:13:45:37 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  6 (io.confluent.rest-utils.requests)
[2018-05-02 13:45:37,130] INFO 127.0.0.1 - - [02/May/2018:13:45:37 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  5 (io.confluent.rest-utils.requests)
[2018-05-02 13:46:19,962] INFO 127.0.0.1 - - [02/May/2018:13:46:19 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  6 (io.confluent.rest-utils.requests)
[2018-05-02 13:46:20,090] INFO 127.0.0.1 - - [02/May/2018:13:46:20 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  13 (io.confluent.rest-utils.requests)
[2018-05-02 13:46:20,112] INFO 127.0.0.1 - - [02/May/2018:13:46:20 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  6 (io.confluent.rest-utils.requests)
[2018-05-02 13:46:21,201] INFO 127.0.0.1 - - [02/May/2018:13:46:21 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  36 (io.confluent.rest-utils.requests)
[2018-05-02 13:46:21,234] INFO 127.0.0.1 - - [02/May/2018:13:46:21 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  3 (io.confluent.rest-utils.requests)
[2018-05-02 13:47:50,170] INFO 127.0.0.1 - - [02/May/2018:13:47:50 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  4 (io.confluent.rest-utils.requests)
[2018-05-02 13:47:50,258] INFO 127.0.0.1 - - [02/May/2018:13:47:50 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  4 (io.confluent.rest-utils.requests)
[2018-05-02 13:47:50,278] INFO 127.0.0.1 - - [02/May/2018:13:47:50 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  9 (io.confluent.rest-utils.requests)
[2018-05-02 13:47:51,166] INFO 127.0.0.1 - - [02/May/2018:13:47:51 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  3 (io.confluent.rest-utils.requests)
[2018-05-02 13:47:51,193] INFO 127.0.0.1 - - [02/May/2018:13:47:51 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  3 (io.confluent.rest-utils.requests)
[2018-05-02 13:57:19,491] INFO 127.0.0.1 - - [02/May/2018:13:57:19 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  8 (io.confluent.rest-utils.requests)
[2018-05-02 13:57:19,600] INFO 127.0.0.1 - - [02/May/2018:13:57:19 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  9 (io.confluent.rest-utils.requests)
[2018-05-02 13:57:19,618] INFO 127.0.0.1 - - [02/May/2018:13:57:19 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  4 (io.confluent.rest-utils.requests)
[2018-05-02 13:57:20,543] INFO 127.0.0.1 - - [02/May/2018:13:57:20 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  9 (io.confluent.rest-utils.requests)
[2018-05-02 13:57:20,570] INFO 127.0.0.1 - - [02/May/2018:13:57:20 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  3 (io.confluent.rest-utils.requests)
[2018-05-02 13:58:17,919] INFO 127.0.0.1 - - [02/May/2018:13:58:17 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  6 (io.confluent.rest-utils.requests)
[2018-05-02 13:58:18,050] INFO 127.0.0.1 - - [02/May/2018:13:58:18 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  25 (io.confluent.rest-utils.requests)
[2018-05-02 13:58:18,066] INFO 127.0.0.1 - - [02/May/2018:13:58:18 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  9 (io.confluent.rest-utils.requests)
[2018-05-02 13:58:19,214] INFO 127.0.0.1 - - [02/May/2018:13:58:19 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  3 (io.confluent.rest-utils.requests)
[2018-05-02 13:58:19,243] INFO 127.0.0.1 - - [02/May/2018:13:58:19 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  4 (io.confluent.rest-utils.requests)
[2018-05-02 13:58:47,445] INFO 127.0.0.1 - - [02/May/2018:13:58:47 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  6 (io.confluent.rest-utils.requests)
[2018-05-02 13:58:47,577] INFO 127.0.0.1 - - [02/May/2018:13:58:47 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  24 (io.confluent.rest-utils.requests)
[2018-05-02 13:58:47,601] INFO 127.0.0.1 - - [02/May/2018:13:58:47 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  7 (io.confluent.rest-utils.requests)
[2018-05-02 13:58:48,632] INFO 127.0.0.1 - - [02/May/2018:13:58:48 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  2 (io.confluent.rest-utils.requests)
[2018-05-02 13:58:48,662] INFO 127.0.0.1 - - [02/May/2018:13:58:48 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  3 (io.confluent.rest-utils.requests)
[2018-05-02 14:00:45,026] INFO 127.0.0.1 - - [02/May/2018:14:00:45 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  11 (io.confluent.rest-utils.requests)
[2018-05-02 14:00:45,104] INFO 127.0.0.1 - - [02/May/2018:14:00:45 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  6 (io.confluent.rest-utils.requests)
[2018-05-02 14:00:45,130] INFO 127.0.0.1 - - [02/May/2018:14:00:45 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  5 (io.confluent.rest-utils.requests)
[2018-05-02 14:00:46,289] INFO 127.0.0.1 - - [02/May/2018:14:00:46 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  3 (io.confluent.rest-utils.requests)
[2018-05-02 14:00:46,351] INFO 127.0.0.1 - - [02/May/2018:14:00:46 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  8 (io.confluent.rest-utils.requests)
[2018-05-02 14:01:28,685] INFO 127.0.0.1 - - [02/May/2018:14:01:28 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  3 (io.confluent.rest-utils.requests)
[2018-05-02 14:01:28,782] INFO 127.0.0.1 - - [02/May/2018:14:01:28 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  17 (io.confluent.rest-utils.requests)
[2018-05-02 14:01:28,800] INFO 127.0.0.1 - - [02/May/2018:14:01:28 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  3 (io.confluent.rest-utils.requests)
[2018-05-02 14:01:29,787] INFO 127.0.0.1 - - [02/May/2018:14:01:29 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  3 (io.confluent.rest-utils.requests)
[2018-05-02 14:01:29,817] INFO 127.0.0.1 - - [02/May/2018:14:01:29 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  2 (io.confluent.rest-utils.requests)
[2018-05-02 14:17:13,844] INFO 127.0.0.1 - - [02/May/2018:14:17:11 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  2077 (io.confluent.rest-utils.requests)
[2018-05-02 14:17:13,986] INFO 127.0.0.1 - - [02/May/2018:14:17:13 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  40 (io.confluent.rest-utils.requests)
[2018-05-02 14:17:14,006] INFO 127.0.0.1 - - [02/May/2018:14:17:14 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  4 (io.confluent.rest-utils.requests)
[2018-05-02 14:17:14,987] INFO 127.0.0.1 - - [02/May/2018:14:17:14 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  3 (io.confluent.rest-utils.requests)
[2018-05-02 14:17:15,015] INFO 127.0.0.1 - - [02/May/2018:14:17:15 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  2 (io.confluent.rest-utils.requests)
[2018-05-02 14:24:17,346] INFO 127.0.0.1 - - [02/May/2018:14:24:17 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  13 (io.confluent.rest-utils.requests)
[2018-05-02 14:24:17,491] INFO 127.0.0.1 - - [02/May/2018:14:24:17 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  34 (io.confluent.rest-utils.requests)
[2018-05-02 14:24:17,507] INFO 127.0.0.1 - - [02/May/2018:14:24:17 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  3 (io.confluent.rest-utils.requests)
[2018-05-02 14:24:21,510] INFO 127.0.0.1 - - [02/May/2018:14:24:21 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  26 (io.confluent.rest-utils.requests)
[2018-05-02 14:24:21,551] INFO 127.0.0.1 - - [02/May/2018:14:24:21 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  3 (io.confluent.rest-utils.requests)
[2018-05-02 14:24:21,586] INFO Wait to catch up until the offset of the last message at 4 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-02 14:24:22,732] INFO 127.0.0.1 - - [02/May/2018:14:24:21 +0530] "POST /subjects/booking-KSTREAM-AGGREGATE-STATE-STORE-0000000007-repartition-value/versions HTTP/1.1" 200 8  1168 (io.confluent.rest-utils.requests)
[2018-05-02 14:24:23,020] INFO 127.0.0.1 - - [02/May/2018:14:24:23 +0530] "GET /schemas/ids/3 HTTP/1.1" 200 310  6 (io.confluent.rest-utils.requests)
[2018-05-02 14:25:06,134] INFO 127.0.0.1 - - [02/May/2018:14:25:06 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  4 (io.confluent.rest-utils.requests)
[2018-05-02 14:25:06,245] INFO 127.0.0.1 - - [02/May/2018:14:25:06 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  25 (io.confluent.rest-utils.requests)
[2018-05-02 14:25:06,261] INFO 127.0.0.1 - - [02/May/2018:14:25:06 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  5 (io.confluent.rest-utils.requests)
[2018-05-02 14:25:08,147] INFO 127.0.0.1 - - [02/May/2018:14:25:08 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  6 (io.confluent.rest-utils.requests)
[2018-05-02 14:25:08,193] INFO 127.0.0.1 - - [02/May/2018:14:25:08 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  2 (io.confluent.rest-utils.requests)
[2018-05-02 14:25:08,204] INFO 127.0.0.1 - - [02/May/2018:14:25:08 +0530] "POST /subjects/booking-KSTREAM-AGGREGATE-STATE-STORE-0000000007-repartition-value/versions HTTP/1.1" 200 8  3 (io.confluent.rest-utils.requests)
[2018-05-02 14:25:08,215] INFO 127.0.0.1 - - [02/May/2018:14:25:08 +0530] "GET /schemas/ids/3 HTTP/1.1" 200 310  2 (io.confluent.rest-utils.requests)
[2018-05-02 14:25:44,364] INFO 127.0.0.1 - - [02/May/2018:14:25:44 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  12 (io.confluent.rest-utils.requests)
[2018-05-02 14:25:44,499] INFO 127.0.0.1 - - [02/May/2018:14:25:44 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  22 (io.confluent.rest-utils.requests)
[2018-05-02 14:25:44,514] INFO 127.0.0.1 - - [02/May/2018:14:25:44 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  4 (io.confluent.rest-utils.requests)
[2018-05-02 14:25:46,334] INFO 127.0.0.1 - - [02/May/2018:14:25:46 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  3 (io.confluent.rest-utils.requests)
[2018-05-02 14:25:46,373] INFO 127.0.0.1 - - [02/May/2018:14:25:46 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  3 (io.confluent.rest-utils.requests)
[2018-05-02 14:25:46,392] INFO 127.0.0.1 - - [02/May/2018:14:25:46 +0530] "POST /subjects/booking-KSTREAM-AGGREGATE-STATE-STORE-0000000007-repartition-value/versions HTTP/1.1" 200 8  5 (io.confluent.rest-utils.requests)
[2018-05-02 14:25:46,424] INFO 127.0.0.1 - - [02/May/2018:14:25:46 +0530] "GET /schemas/ids/3 HTTP/1.1" 200 310  12 (io.confluent.rest-utils.requests)
[2018-05-02 14:26:31,303] INFO 127.0.0.1 - - [02/May/2018:14:26:31 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  85 (io.confluent.rest-utils.requests)
[2018-05-02 14:26:31,408] INFO 127.0.0.1 - - [02/May/2018:14:26:31 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  17 (io.confluent.rest-utils.requests)
[2018-05-02 14:26:31,446] INFO 127.0.0.1 - - [02/May/2018:14:26:31 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  15 (io.confluent.rest-utils.requests)
[2018-05-02 14:26:34,233] INFO 127.0.0.1 - - [02/May/2018:14:26:34 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  8 (io.confluent.rest-utils.requests)
[2018-05-02 14:26:34,288] INFO 127.0.0.1 - - [02/May/2018:14:26:34 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  3 (io.confluent.rest-utils.requests)
[2018-05-02 14:26:34,298] INFO Wait to catch up until the offset of the last message at 5 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-02 14:26:34,417] INFO 127.0.0.1 - - [02/May/2018:14:26:34 +0530] "POST /subjects/booking-KSTREAM-AGGREGATE-STATE-STORE-0000000008-repartition-value/versions HTTP/1.1" 200 8  121 (io.confluent.rest-utils.requests)
[2018-05-02 14:26:34,606] INFO 127.0.0.1 - - [02/May/2018:14:26:34 +0530] "GET /schemas/ids/3 HTTP/1.1" 200 310  4 (io.confluent.rest-utils.requests)
[2018-05-02 14:27:11,820] INFO 127.0.0.1 - - [02/May/2018:14:27:11 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  4 (io.confluent.rest-utils.requests)
[2018-05-02 14:27:11,920] INFO 127.0.0.1 - - [02/May/2018:14:27:11 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  10 (io.confluent.rest-utils.requests)
[2018-05-02 14:27:11,935] INFO 127.0.0.1 - - [02/May/2018:14:27:11 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  4 (io.confluent.rest-utils.requests)
[2018-05-02 14:27:13,269] INFO 127.0.0.1 - - [02/May/2018:14:27:13 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  6 (io.confluent.rest-utils.requests)
[2018-05-02 14:27:13,313] INFO 127.0.0.1 - - [02/May/2018:14:27:13 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  2 (io.confluent.rest-utils.requests)
[2018-05-02 14:27:13,798] INFO 127.0.0.1 - - [02/May/2018:14:27:13 +0530] "POST /subjects/booking-KSTREAM-AGGREGATE-STATE-STORE-0000000008-repartition-value/versions HTTP/1.1" 200 8  475 (io.confluent.rest-utils.requests)
[2018-05-02 14:27:13,839] INFO 127.0.0.1 - - [02/May/2018:14:27:13 +0530] "GET /schemas/ids/3 HTTP/1.1" 200 310  2 (io.confluent.rest-utils.requests)
[2018-05-02 14:27:58,377] INFO 127.0.0.1 - - [02/May/2018:14:27:58 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  54 (io.confluent.rest-utils.requests)
[2018-05-02 14:27:58,517] INFO 127.0.0.1 - - [02/May/2018:14:27:58 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  11 (io.confluent.rest-utils.requests)
[2018-05-02 14:27:58,538] INFO 127.0.0.1 - - [02/May/2018:14:27:58 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  13 (io.confluent.rest-utils.requests)
[2018-05-02 14:28:00,712] INFO 127.0.0.1 - - [02/May/2018:14:28:00 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  2 (io.confluent.rest-utils.requests)
[2018-05-02 14:28:00,741] INFO 127.0.0.1 - - [02/May/2018:14:28:00 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  2 (io.confluent.rest-utils.requests)
[2018-05-02 14:28:00,755] INFO 127.0.0.1 - - [02/May/2018:14:28:00 +0530] "POST /subjects/booking-KSTREAM-AGGREGATE-STATE-STORE-0000000007-repartition-value/versions HTTP/1.1" 200 8  4 (io.confluent.rest-utils.requests)
[2018-05-02 14:28:00,781] INFO 127.0.0.1 - - [02/May/2018:14:28:00 +0530] "GET /schemas/ids/3 HTTP/1.1" 200 310  2 (io.confluent.rest-utils.requests)
[2018-05-02 14:31:06,027] INFO 127.0.0.1 - - [02/May/2018:14:31:06 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  19 (io.confluent.rest-utils.requests)
[2018-05-02 14:31:06,193] INFO 127.0.0.1 - - [02/May/2018:14:31:06 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  5 (io.confluent.rest-utils.requests)
[2018-05-02 14:31:06,241] INFO 127.0.0.1 - - [02/May/2018:14:31:06 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  7 (io.confluent.rest-utils.requests)
[2018-05-02 14:31:08,316] INFO 127.0.0.1 - - [02/May/2018:14:31:08 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  6 (io.confluent.rest-utils.requests)
[2018-05-02 14:31:08,365] INFO 127.0.0.1 - - [02/May/2018:14:31:08 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  3 (io.confluent.rest-utils.requests)
[2018-05-02 14:31:08,480] INFO 127.0.0.1 - - [02/May/2018:14:31:08 +0530] "POST /subjects/booking-KSTREAM-AGGREGATE-STATE-STORE-0000000007-repartition-value/versions HTTP/1.1" 200 8  104 (io.confluent.rest-utils.requests)
[2018-05-02 14:31:08,495] INFO 127.0.0.1 - - [02/May/2018:14:31:08 +0530] "GET /schemas/ids/3 HTTP/1.1" 200 310  2 (io.confluent.rest-utils.requests)
[2018-05-02 14:39:31,016] INFO 127.0.0.1 - - [02/May/2018:14:39:31 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  5 (io.confluent.rest-utils.requests)
[2018-05-02 14:39:31,133] INFO 127.0.0.1 - - [02/May/2018:14:39:31 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  12 (io.confluent.rest-utils.requests)
[2018-05-02 14:39:31,178] INFO 127.0.0.1 - - [02/May/2018:14:39:31 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  35 (io.confluent.rest-utils.requests)
[2018-05-02 14:39:33,175] INFO 127.0.0.1 - - [02/May/2018:14:39:33 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  6 (io.confluent.rest-utils.requests)
[2018-05-02 14:39:33,217] INFO 127.0.0.1 - - [02/May/2018:14:39:33 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  2 (io.confluent.rest-utils.requests)
[2018-05-02 14:39:33,228] INFO 127.0.0.1 - - [02/May/2018:14:39:33 +0530] "POST /subjects/booking-KSTREAM-AGGREGATE-STATE-STORE-0000000007-repartition-value/versions HTTP/1.1" 200 8  3 (io.confluent.rest-utils.requests)
[2018-05-02 14:39:33,330] INFO 127.0.0.1 - - [02/May/2018:14:39:33 +0530] "GET /schemas/ids/3 HTTP/1.1" 200 310  2 (io.confluent.rest-utils.requests)
[2018-05-02 14:41:42,351] INFO 127.0.0.1 - - [02/May/2018:14:41:42 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  5 (io.confluent.rest-utils.requests)
[2018-05-02 14:41:42,455] INFO 127.0.0.1 - - [02/May/2018:14:41:42 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  4 (io.confluent.rest-utils.requests)
[2018-05-02 14:41:42,474] INFO 127.0.0.1 - - [02/May/2018:14:41:42 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  4 (io.confluent.rest-utils.requests)
[2018-05-02 14:41:44,476] INFO 127.0.0.1 - - [02/May/2018:14:41:44 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  21 (io.confluent.rest-utils.requests)
[2018-05-02 14:41:44,496] INFO 127.0.0.1 - - [02/May/2018:14:41:44 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  2 (io.confluent.rest-utils.requests)
[2018-05-02 14:41:44,508] INFO 127.0.0.1 - - [02/May/2018:14:41:44 +0530] "POST /subjects/booking-KSTREAM-AGGREGATE-STATE-STORE-0000000007-repartition-value/versions HTTP/1.1" 200 8  4 (io.confluent.rest-utils.requests)
[2018-05-02 14:41:44,613] INFO 127.0.0.1 - - [02/May/2018:14:41:44 +0530] "GET /schemas/ids/3 HTTP/1.1" 200 310  3 (io.confluent.rest-utils.requests)
[2018-05-02 14:44:12,766] INFO 127.0.0.1 - - [02/May/2018:14:44:12 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  5 (io.confluent.rest-utils.requests)
[2018-05-02 14:44:12,864] INFO 127.0.0.1 - - [02/May/2018:14:44:12 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  6 (io.confluent.rest-utils.requests)
[2018-05-02 14:44:12,882] INFO 127.0.0.1 - - [02/May/2018:14:44:12 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  4 (io.confluent.rest-utils.requests)
[2018-05-02 14:44:14,471] INFO 127.0.0.1 - - [02/May/2018:14:44:14 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  2 (io.confluent.rest-utils.requests)
[2018-05-02 14:44:14,492] INFO 127.0.0.1 - - [02/May/2018:14:44:14 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  2 (io.confluent.rest-utils.requests)
[2018-05-02 14:44:14,509] INFO 127.0.0.1 - - [02/May/2018:14:44:14 +0530] "POST /subjects/booking-KSTREAM-AGGREGATE-STATE-STORE-0000000008-repartition-value/versions HTTP/1.1" 200 8  4 (io.confluent.rest-utils.requests)
[2018-05-02 14:44:14,532] INFO 127.0.0.1 - - [02/May/2018:14:44:14 +0530] "GET /schemas/ids/3 HTTP/1.1" 200 310  2 (io.confluent.rest-utils.requests)
[2018-05-02 14:46:06,951] INFO 127.0.0.1 - - [02/May/2018:14:46:06 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  6 (io.confluent.rest-utils.requests)
[2018-05-02 14:46:07,057] INFO 127.0.0.1 - - [02/May/2018:14:46:07 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  7 (io.confluent.rest-utils.requests)
[2018-05-02 14:46:07,085] INFO 127.0.0.1 - - [02/May/2018:14:46:07 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  12 (io.confluent.rest-utils.requests)
[2018-05-02 14:46:09,156] INFO 127.0.0.1 - - [02/May/2018:14:46:09 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  5 (io.confluent.rest-utils.requests)
[2018-05-02 14:46:09,206] INFO 127.0.0.1 - - [02/May/2018:14:46:09 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  2 (io.confluent.rest-utils.requests)
[2018-05-02 14:46:09,218] INFO 127.0.0.1 - - [02/May/2018:14:46:09 +0530] "POST /subjects/booking-KSTREAM-AGGREGATE-STATE-STORE-0000000008-repartition-value/versions HTTP/1.1" 200 8  3 (io.confluent.rest-utils.requests)
[2018-05-02 14:46:09,332] INFO 127.0.0.1 - - [02/May/2018:14:46:09 +0530] "GET /schemas/ids/3 HTTP/1.1" 200 310  6 (io.confluent.rest-utils.requests)
[2018-05-02 14:55:05,581] INFO 127.0.0.1 - - [02/May/2018:14:55:05 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  4 (io.confluent.rest-utils.requests)
[2018-05-02 14:55:05,688] INFO 127.0.0.1 - - [02/May/2018:14:55:05 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  12 (io.confluent.rest-utils.requests)
[2018-05-02 14:55:05,716] INFO 127.0.0.1 - - [02/May/2018:14:55:05 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  12 (io.confluent.rest-utils.requests)
[2018-05-02 14:55:07,532] INFO 127.0.0.1 - - [02/May/2018:14:55:07 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  7 (io.confluent.rest-utils.requests)
[2018-05-02 14:55:07,577] INFO 127.0.0.1 - - [02/May/2018:14:55:07 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  2 (io.confluent.rest-utils.requests)
[2018-05-02 14:55:07,590] INFO 127.0.0.1 - - [02/May/2018:14:55:07 +0530] "POST /subjects/booking-KSTREAM-AGGREGATE-STATE-STORE-0000000008-repartition-value/versions HTTP/1.1" 200 8  4 (io.confluent.rest-utils.requests)
[2018-05-02 14:55:07,704] INFO 127.0.0.1 - - [02/May/2018:14:55:07 +0530] "GET /schemas/ids/3 HTTP/1.1" 200 310  6 (io.confluent.rest-utils.requests)
[2018-05-02 15:45:59,413] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-02 15:45:59,888] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-02 15:49:18,958] INFO 127.0.0.1 - - [02/May/2018:15:49:18 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  60 (io.confluent.rest-utils.requests)
[2018-05-02 15:49:19,094] INFO 127.0.0.1 - - [02/May/2018:15:49:19 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  22 (io.confluent.rest-utils.requests)
[2018-05-02 15:49:19,126] INFO 127.0.0.1 - - [02/May/2018:15:49:19 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  14 (io.confluent.rest-utils.requests)
[2018-05-02 15:49:20,953] INFO 127.0.0.1 - - [02/May/2018:15:49:20 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  4 (io.confluent.rest-utils.requests)
[2018-05-02 15:49:20,984] INFO 127.0.0.1 - - [02/May/2018:15:49:20 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  2 (io.confluent.rest-utils.requests)
[2018-05-03 11:27:51,216] INFO SchemaRegistryConfig values: 
	metric.reporters = []
	kafkastore.sasl.kerberos.kinit.cmd = /usr/bin/kinit
	response.mediatype.default = application/vnd.schemaregistry.v1+json
	kafkastore.ssl.trustmanager.algorithm = PKIX
	authentication.realm = 
	ssl.keystore.type = JKS
	kafkastore.topic = _schemas
	metrics.jmx.prefix = kafka.schema.registry
	kafkastore.ssl.enabled.protocols = TLSv1.2,TLSv1.1,TLSv1
	kafkastore.topic.replication.factor = 3
	ssl.truststore.password = [hidden]
	kafkastore.timeout.ms = 500
	host.name = maya
	kafkastore.bootstrap.servers = []
	schema.registry.zk.namespace = schema_registry
	kafkastore.sasl.kerberos.ticket.renew.window.factor = 0.8
	kafkastore.sasl.kerberos.service.name = 
	schema.registry.resource.extension.class = 
	ssl.endpoint.identification.algorithm = 
	compression.enable = false
	kafkastore.ssl.truststore.type = JKS
	avro.compatibility.level = backward
	kafkastore.ssl.protocol = TLS
	kafkastore.ssl.provider = 
	kafkastore.ssl.truststore.location = 
	response.mediatype.preferred = [application/vnd.schemaregistry.v1+json, application/vnd.schemaregistry+json, application/json]
	kafkastore.ssl.keystore.type = JKS
	ssl.truststore.type = JKS
	kafkastore.ssl.truststore.password = [hidden]
	access.control.allow.origin = 
	ssl.truststore.location = 
	ssl.keystore.password = [hidden]
	port = 8081
	kafkastore.ssl.keystore.location = 
	master.eligibility = true
	ssl.client.auth = false
	kafkastore.ssl.keystore.password = [hidden]
	kafkastore.security.protocol = PLAINTEXT
	ssl.trustmanager.algorithm = 
	authentication.method = NONE
	request.logger.name = io.confluent.rest-utils.requests
	ssl.key.password = [hidden]
	kafkastore.zk.session.timeout.ms = 30000
	kafkastore.sasl.mechanism = GSSAPI
	kafkastore.sasl.kerberos.ticket.renew.jitter = 0.05
	kafkastore.ssl.key.password = [hidden]
	zookeeper.set.acl = false
	schema.registry.inter.instance.protocol = http
	authentication.roles = [*]
	metrics.num.samples = 2
	ssl.protocol = TLS
	schema.registry.group.id = schema-registry
	kafkastore.ssl.keymanager.algorithm = SunX509
	kafkastore.connection.url = localhost:2181
	debug = false
	listeners = [http://0.0.0.0:8081]
	kafkastore.group.id = 
	ssl.provider = 
	ssl.enabled.protocols = []
	shutdown.graceful.ms = 1000
	ssl.keystore.location = 
	ssl.cipher.suites = []
	kafkastore.ssl.endpoint.identification.algorithm = 
	kafkastore.ssl.cipher.suites = 
	access.control.allow.methods = 
	kafkastore.sasl.kerberos.min.time.before.relogin = 60000
	ssl.keymanager.algorithm = 
	metrics.sample.window.ms = 30000
	kafkastore.init.timeout.ms = 60000
 (io.confluent.kafka.schemaregistry.rest.SchemaRegistryConfig)
[2018-05-03 11:27:51,934] INFO Logging initialized @2922ms (org.eclipse.jetty.util.log)
[2018-05-03 11:27:53,321] INFO Initializing KafkaStore with broker endpoints: PLAINTEXT://maya:9092 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-03 11:27:53,803] INFO Creating schemas topic _schemas (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-03 11:27:53,807] WARN Creating the schema topic _schemas using a replication factor of 1, which is less than the desired one of 3. If this is a production environment, it's crucial to add more brokers and increase the replication factor of the topic. (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-03 11:27:55,073] INFO Initialized last consumed offset to -1 (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-05-03 11:27:55,075] INFO [kafka-store-reader-thread-_schemas]: Starting (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-05-03 11:27:55,684] INFO Wait to catch up until the offset of the last message at 0 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-03 11:27:55,747] INFO Joining schema registry with Zookeeper-based coordination (io.confluent.kafka.schemaregistry.storage.KafkaSchemaRegistry)
[2018-05-03 11:27:55,845] INFO Created schema registry namespace localhost:2181/schema_registry (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-03 11:27:56,094] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-03 11:27:56,145] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-03 11:27:56,167] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-03 11:27:56,359] INFO Adding listener: http://0.0.0.0:8081 (io.confluent.rest.Application)
[2018-05-03 11:27:56,435] INFO jetty-9.2.22.v20170606 (org.eclipse.jetty.server.Server)
[2018-05-03 11:27:57,708] INFO HV000001: Hibernate Validator 5.1.3.Final (org.hibernate.validator.internal.util.Version)
[2018-05-03 11:27:57,992] INFO Started o.e.j.s.ServletContextHandler@5ef6ae06{/,null,AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler)
[2018-05-03 11:27:58,028] INFO Started NetworkTrafficServerConnector@3568f9d2{HTTP/1.1}{0.0.0.0:8081} (org.eclipse.jetty.server.NetworkTrafficServerConnector)
[2018-05-03 11:27:58,030] INFO Started @9021ms (org.eclipse.jetty.server.Server)
[2018-05-03 11:27:58,031] INFO Server started, listening for requests... (io.confluent.kafka.schemaregistry.rest.SchemaRegistryMain)
[2018-05-03 11:28:29,805] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-03 11:28:29,888] INFO 127.0.0.1 - - [03/May/2018:11:28:29 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  563 (io.confluent.rest-utils.requests)
[2018-05-03 11:28:30,369] INFO Wait to catch up until the offset of the last message at 2 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-03 11:28:30,390] INFO 127.0.0.1 - - [03/May/2018:11:28:30 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  27 (io.confluent.rest-utils.requests)
[2018-05-03 11:28:30,769] INFO Wait to catch up until the offset of the last message at 3 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-03 11:28:30,785] INFO 127.0.0.1 - - [03/May/2018:11:28:30 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  20 (io.confluent.rest-utils.requests)
[2018-05-03 11:28:37,616] INFO 127.0.0.1 - - [03/May/2018:11:28:37 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  8 (io.confluent.rest-utils.requests)
[2018-05-03 11:28:37,640] INFO 127.0.0.1 - - [03/May/2018:11:28:37 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  5 (io.confluent.rest-utils.requests)
[2018-05-03 11:29:31,415] INFO 127.0.0.1 - - [03/May/2018:11:29:31 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  6 (io.confluent.rest-utils.requests)
[2018-05-03 11:29:31,519] INFO 127.0.0.1 - - [03/May/2018:11:29:31 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  7 (io.confluent.rest-utils.requests)
[2018-05-03 11:29:31,553] INFO 127.0.0.1 - - [03/May/2018:11:29:31 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  17 (io.confluent.rest-utils.requests)
[2018-05-03 11:29:33,759] INFO 127.0.0.1 - - [03/May/2018:11:29:33 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  12 (io.confluent.rest-utils.requests)
[2018-05-03 11:29:33,815] INFO 127.0.0.1 - - [03/May/2018:11:29:33 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  5 (io.confluent.rest-utils.requests)
[2018-05-03 11:29:33,831] INFO Wait to catch up until the offset of the last message at 4 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-03 11:29:33,851] INFO 127.0.0.1 - - [03/May/2018:11:29:33 +0530] "POST /subjects/booking-KSTREAM-REDUCE-STATE-STORE-0000000008-repartition-value/versions HTTP/1.1" 200 8  24 (io.confluent.rest-utils.requests)
[2018-05-03 11:29:33,964] INFO 127.0.0.1 - - [03/May/2018:11:29:33 +0530] "GET /schemas/ids/3 HTTP/1.1" 200 310  2 (io.confluent.rest-utils.requests)
[2018-05-03 11:29:33,971] INFO Wait to catch up until the offset of the last message at 5 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-03 11:29:33,998] INFO 127.0.0.1 - - [03/May/2018:11:29:33 +0530] "POST /subjects/booking-KSTREAM-REDUCE-STATE-STORE-0000000008-changelog-value/versions HTTP/1.1" 200 8  31 (io.confluent.rest-utils.requests)
[2018-05-03 11:33:54,422] INFO 127.0.0.1 - - [03/May/2018:11:33:54 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  11 (io.confluent.rest-utils.requests)
[2018-05-03 11:33:54,548] INFO 127.0.0.1 - - [03/May/2018:11:33:54 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  8 (io.confluent.rest-utils.requests)
[2018-05-03 11:33:54,570] INFO 127.0.0.1 - - [03/May/2018:11:33:54 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  8 (io.confluent.rest-utils.requests)
[2018-05-03 11:33:56,479] INFO 127.0.0.1 - - [03/May/2018:11:33:56 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  10 (io.confluent.rest-utils.requests)
[2018-05-03 11:33:56,536] INFO 127.0.0.1 - - [03/May/2018:11:33:56 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  4 (io.confluent.rest-utils.requests)
[2018-05-03 11:33:56,561] INFO 127.0.0.1 - - [03/May/2018:11:33:56 +0530] "POST /subjects/booking-KSTREAM-REDUCE-STATE-STORE-0000000008-repartition-value/versions HTTP/1.1" 200 8  7 (io.confluent.rest-utils.requests)
[2018-05-03 11:33:56,657] INFO 127.0.0.1 - - [03/May/2018:11:33:56 +0530] "GET /schemas/ids/3 HTTP/1.1" 200 310  3 (io.confluent.rest-utils.requests)
[2018-05-03 11:33:56,665] INFO 127.0.0.1 - - [03/May/2018:11:33:56 +0530] "POST /subjects/booking-KSTREAM-REDUCE-STATE-STORE-0000000008-changelog-value/versions HTTP/1.1" 200 8  4 (io.confluent.rest-utils.requests)
[2018-05-03 12:17:43,339] INFO 127.0.0.1 - - [03/May/2018:12:17:43 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  20 (io.confluent.rest-utils.requests)
[2018-05-03 12:17:43,451] INFO 127.0.0.1 - - [03/May/2018:12:17:43 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  13 (io.confluent.rest-utils.requests)
[2018-05-03 12:17:43,482] INFO 127.0.0.1 - - [03/May/2018:12:17:43 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  15 (io.confluent.rest-utils.requests)
[2018-05-03 12:17:44,737] INFO 127.0.0.1 - - [03/May/2018:12:17:44 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  21 (io.confluent.rest-utils.requests)
[2018-05-03 12:17:44,776] INFO 127.0.0.1 - - [03/May/2018:12:17:44 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  7 (io.confluent.rest-utils.requests)
[2018-05-03 12:17:44,794] INFO Wait to catch up until the offset of the last message at 6 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-03 12:17:44,822] INFO 127.0.0.1 - - [03/May/2018:12:17:44 +0530] "POST /subjects/booking-KSTREAM-JOINOTHER-0000000005-store-changelog-value/versions HTTP/1.1" 200 8  32 (io.confluent.rest-utils.requests)
[2018-05-03 12:17:45,499] INFO Wait to catch up until the offset of the last message at 7 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-03 12:17:45,524] INFO 127.0.0.1 - - [03/May/2018:12:17:45 +0530] "POST /subjects/booking-KSTREAM-JOINTHIS-0000000004-store-changelog-value/versions HTTP/1.1" 200 8  30 (io.confluent.rest-utils.requests)
[2018-05-03 12:21:52,743] INFO 127.0.0.1 - - [03/May/2018:12:21:52 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  6 (io.confluent.rest-utils.requests)
[2018-05-03 12:21:52,834] INFO 127.0.0.1 - - [03/May/2018:12:21:52 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  5 (io.confluent.rest-utils.requests)
[2018-05-03 12:21:52,865] INFO 127.0.0.1 - - [03/May/2018:12:21:52 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  11 (io.confluent.rest-utils.requests)
[2018-05-03 12:21:54,020] INFO 127.0.0.1 - - [03/May/2018:12:21:54 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  3 (io.confluent.rest-utils.requests)
[2018-05-03 12:21:54,041] INFO 127.0.0.1 - - [03/May/2018:12:21:54 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  3 (io.confluent.rest-utils.requests)
[2018-05-03 12:23:24,833] INFO 127.0.0.1 - - [03/May/2018:12:23:24 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  5 (io.confluent.rest-utils.requests)
[2018-05-03 12:23:24,939] INFO 127.0.0.1 - - [03/May/2018:12:23:24 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  6 (io.confluent.rest-utils.requests)
[2018-05-03 12:23:24,958] INFO 127.0.0.1 - - [03/May/2018:12:23:24 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  4 (io.confluent.rest-utils.requests)
[2018-05-03 12:23:26,024] INFO 127.0.0.1 - - [03/May/2018:12:23:26 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  3 (io.confluent.rest-utils.requests)
[2018-05-03 12:23:26,051] INFO 127.0.0.1 - - [03/May/2018:12:23:26 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  3 (io.confluent.rest-utils.requests)
[2018-05-03 12:24:20,753] INFO 127.0.0.1 - - [03/May/2018:12:24:20 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  5 (io.confluent.rest-utils.requests)
[2018-05-03 12:24:20,869] INFO 127.0.0.1 - - [03/May/2018:12:24:20 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  12 (io.confluent.rest-utils.requests)
[2018-05-03 12:24:20,891] INFO 127.0.0.1 - - [03/May/2018:12:24:20 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  9 (io.confluent.rest-utils.requests)
[2018-05-03 12:24:21,287] INFO 127.0.0.1 - - [03/May/2018:12:24:21 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  5 (io.confluent.rest-utils.requests)
[2018-05-03 12:24:21,312] INFO 127.0.0.1 - - [03/May/2018:12:24:21 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  4 (io.confluent.rest-utils.requests)
[2018-05-03 12:26:32,953] INFO 127.0.0.1 - - [03/May/2018:12:26:32 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  6 (io.confluent.rest-utils.requests)
[2018-05-03 12:26:33,073] INFO 127.0.0.1 - - [03/May/2018:12:26:33 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  9 (io.confluent.rest-utils.requests)
[2018-05-03 12:26:33,092] INFO 127.0.0.1 - - [03/May/2018:12:26:33 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  5 (io.confluent.rest-utils.requests)
[2018-05-03 12:26:33,615] INFO 127.0.0.1 - - [03/May/2018:12:26:33 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  3 (io.confluent.rest-utils.requests)
[2018-05-03 12:26:33,642] INFO 127.0.0.1 - - [03/May/2018:12:26:33 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  2 (io.confluent.rest-utils.requests)
[2018-05-03 12:27:45,586] INFO 127.0.0.1 - - [03/May/2018:12:27:45 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  5 (io.confluent.rest-utils.requests)
[2018-05-03 12:27:45,709] INFO 127.0.0.1 - - [03/May/2018:12:27:45 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  20 (io.confluent.rest-utils.requests)
[2018-05-03 12:27:45,738] INFO 127.0.0.1 - - [03/May/2018:12:27:45 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  20 (io.confluent.rest-utils.requests)
[2018-05-03 12:27:46,623] INFO 127.0.0.1 - - [03/May/2018:12:27:46 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  4 (io.confluent.rest-utils.requests)
[2018-05-03 12:27:46,654] INFO 127.0.0.1 - - [03/May/2018:12:27:46 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  5 (io.confluent.rest-utils.requests)
[2018-05-03 12:28:37,157] INFO 127.0.0.1 - - [03/May/2018:12:28:37 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  4 (io.confluent.rest-utils.requests)
[2018-05-03 12:28:37,262] INFO 127.0.0.1 - - [03/May/2018:12:28:37 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  5 (io.confluent.rest-utils.requests)
[2018-05-03 12:28:37,287] INFO 127.0.0.1 - - [03/May/2018:12:28:37 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  9 (io.confluent.rest-utils.requests)
[2018-05-03 12:28:38,177] INFO 127.0.0.1 - - [03/May/2018:12:28:38 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  3 (io.confluent.rest-utils.requests)
[2018-05-03 12:28:38,203] INFO 127.0.0.1 - - [03/May/2018:12:28:38 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  2 (io.confluent.rest-utils.requests)
[2018-05-03 12:28:38,217] INFO Wait to catch up until the offset of the last message at 8 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-03 12:28:38,233] INFO 127.0.0.1 - - [03/May/2018:12:28:38 +0530] "POST /subjects/booking-KSTREAM-JOINTHIS-0000000006-store-changelog-value/versions HTTP/1.1" 200 8  18 (io.confluent.rest-utils.requests)
[2018-05-03 12:28:38,899] INFO Wait to catch up until the offset of the last message at 9 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-03 12:28:38,921] INFO 127.0.0.1 - - [03/May/2018:12:28:38 +0530] "POST /subjects/booking-KSTREAM-JOINOTHER-0000000007-store-changelog-value/versions HTTP/1.1" 200 8  27 (io.confluent.rest-utils.requests)
[2018-05-03 12:32:15,985] INFO 127.0.0.1 - - [03/May/2018:12:32:15 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  10 (io.confluent.rest-utils.requests)
[2018-05-03 12:32:16,120] INFO 127.0.0.1 - - [03/May/2018:12:32:16 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  14 (io.confluent.rest-utils.requests)
[2018-05-03 12:32:16,135] INFO 127.0.0.1 - - [03/May/2018:12:32:16 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  4 (io.confluent.rest-utils.requests)
[2018-05-03 12:32:17,282] INFO 127.0.0.1 - - [03/May/2018:12:32:17 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  7 (io.confluent.rest-utils.requests)
[2018-05-03 12:32:17,322] INFO 127.0.0.1 - - [03/May/2018:12:32:17 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  10 (io.confluent.rest-utils.requests)
[2018-05-03 12:54:47,354] INFO 127.0.0.1 - - [03/May/2018:12:54:47 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  4 (io.confluent.rest-utils.requests)
[2018-05-03 12:54:47,449] INFO 127.0.0.1 - - [03/May/2018:12:54:47 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  6 (io.confluent.rest-utils.requests)
[2018-05-03 12:54:47,468] INFO 127.0.0.1 - - [03/May/2018:12:54:47 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  4 (io.confluent.rest-utils.requests)
[2018-05-03 12:54:49,148] INFO 127.0.0.1 - - [03/May/2018:12:54:49 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  4 (io.confluent.rest-utils.requests)
[2018-05-03 12:54:49,189] INFO Wait to catch up until the offset of the last message at 10 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-03 12:54:49,203] INFO 127.0.0.1 - - [03/May/2018:12:54:49 +0530] "POST /subjects/booking-registering-STATE-STORE-0000000000-changelog-value/versions HTTP/1.1" 200 8  17 (io.confluent.rest-utils.requests)
[2018-05-03 13:47:04,070] INFO 127.0.0.1 - - [03/May/2018:13:47:04 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  6 (io.confluent.rest-utils.requests)
[2018-05-03 13:47:04,182] INFO 127.0.0.1 - - [03/May/2018:13:47:04 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  6 (io.confluent.rest-utils.requests)
[2018-05-03 13:47:04,204] INFO 127.0.0.1 - - [03/May/2018:13:47:04 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  5 (io.confluent.rest-utils.requests)
[2018-05-03 13:47:05,349] INFO 127.0.0.1 - - [03/May/2018:13:47:05 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  3 (io.confluent.rest-utils.requests)
[2018-05-03 13:47:05,385] INFO 127.0.0.1 - - [03/May/2018:13:47:05 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  3 (io.confluent.rest-utils.requests)
[2018-05-03 13:54:33,949] INFO 127.0.0.1 - - [03/May/2018:13:54:33 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  7 (io.confluent.rest-utils.requests)
[2018-05-03 13:54:34,169] INFO 127.0.0.1 - - [03/May/2018:13:54:34 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  17 (io.confluent.rest-utils.requests)
[2018-05-03 13:54:34,201] INFO 127.0.0.1 - - [03/May/2018:13:54:34 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  13 (io.confluent.rest-utils.requests)
[2018-05-03 13:54:36,313] INFO 127.0.0.1 - - [03/May/2018:13:54:36 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  7 (io.confluent.rest-utils.requests)
[2018-05-03 13:54:36,369] INFO 127.0.0.1 - - [03/May/2018:13:54:36 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  3 (io.confluent.rest-utils.requests)
[2018-05-03 13:54:36,388] INFO 127.0.0.1 - - [03/May/2018:13:54:36 +0530] "POST /subjects/booking-KSTREAM-REDUCE-STATE-STORE-0000000008-repartition-value/versions HTTP/1.1" 200 8  6 (io.confluent.rest-utils.requests)
[2018-05-03 13:54:36,489] INFO 127.0.0.1 - - [03/May/2018:13:54:36 +0530] "GET /schemas/ids/3 HTTP/1.1" 200 310  4 (io.confluent.rest-utils.requests)
[2018-05-03 13:54:36,503] INFO 127.0.0.1 - - [03/May/2018:13:54:36 +0530] "POST /subjects/booking-KSTREAM-REDUCE-STATE-STORE-0000000008-changelog-value/versions HTTP/1.1" 200 8  7 (io.confluent.rest-utils.requests)
[2018-05-03 16:20:55,393] INFO 127.0.0.1 - - [03/May/2018:16:20:55 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  9 (io.confluent.rest-utils.requests)
[2018-05-03 16:20:55,493] INFO 127.0.0.1 - - [03/May/2018:16:20:55 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  8 (io.confluent.rest-utils.requests)
[2018-05-03 16:20:55,511] INFO 127.0.0.1 - - [03/May/2018:16:20:55 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  6 (io.confluent.rest-utils.requests)
[2018-05-03 16:20:56,369] INFO 127.0.0.1 - - [03/May/2018:16:20:56 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  7 (io.confluent.rest-utils.requests)
[2018-05-03 16:20:56,391] INFO 127.0.0.1 - - [03/May/2018:16:20:56 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  2 (io.confluent.rest-utils.requests)
[2018-05-03 16:33:02,877] INFO SchemaRegistryConfig values: 
	metric.reporters = []
	kafkastore.sasl.kerberos.kinit.cmd = /usr/bin/kinit
	response.mediatype.default = application/vnd.schemaregistry.v1+json
	kafkastore.ssl.trustmanager.algorithm = PKIX
	authentication.realm = 
	ssl.keystore.type = JKS
	kafkastore.topic = _schemas
	metrics.jmx.prefix = kafka.schema.registry
	kafkastore.ssl.enabled.protocols = TLSv1.2,TLSv1.1,TLSv1
	kafkastore.topic.replication.factor = 3
	ssl.truststore.password = [hidden]
	kafkastore.timeout.ms = 500
	host.name = maya
	kafkastore.bootstrap.servers = []
	schema.registry.zk.namespace = schema_registry
	kafkastore.sasl.kerberos.ticket.renew.window.factor = 0.8
	kafkastore.sasl.kerberos.service.name = 
	schema.registry.resource.extension.class = 
	ssl.endpoint.identification.algorithm = 
	compression.enable = false
	kafkastore.ssl.truststore.type = JKS
	avro.compatibility.level = backward
	kafkastore.ssl.protocol = TLS
	kafkastore.ssl.provider = 
	kafkastore.ssl.truststore.location = 
	response.mediatype.preferred = [application/vnd.schemaregistry.v1+json, application/vnd.schemaregistry+json, application/json]
	kafkastore.ssl.keystore.type = JKS
	ssl.truststore.type = JKS
	kafkastore.ssl.truststore.password = [hidden]
	access.control.allow.origin = 
	ssl.truststore.location = 
	ssl.keystore.password = [hidden]
	port = 8081
	kafkastore.ssl.keystore.location = 
	master.eligibility = true
	ssl.client.auth = false
	kafkastore.ssl.keystore.password = [hidden]
	kafkastore.security.protocol = PLAINTEXT
	ssl.trustmanager.algorithm = 
	authentication.method = NONE
	request.logger.name = io.confluent.rest-utils.requests
	ssl.key.password = [hidden]
	kafkastore.zk.session.timeout.ms = 30000
	kafkastore.sasl.mechanism = GSSAPI
	kafkastore.sasl.kerberos.ticket.renew.jitter = 0.05
	kafkastore.ssl.key.password = [hidden]
	zookeeper.set.acl = false
	schema.registry.inter.instance.protocol = http
	authentication.roles = [*]
	metrics.num.samples = 2
	ssl.protocol = TLS
	schema.registry.group.id = schema-registry
	kafkastore.ssl.keymanager.algorithm = SunX509
	kafkastore.connection.url = localhost:2181
	debug = false
	listeners = [http://0.0.0.0:8081]
	kafkastore.group.id = 
	ssl.provider = 
	ssl.enabled.protocols = []
	shutdown.graceful.ms = 1000
	ssl.keystore.location = 
	ssl.cipher.suites = []
	kafkastore.ssl.endpoint.identification.algorithm = 
	kafkastore.ssl.cipher.suites = 
	access.control.allow.methods = 
	kafkastore.sasl.kerberos.min.time.before.relogin = 60000
	ssl.keymanager.algorithm = 
	metrics.sample.window.ms = 30000
	kafkastore.init.timeout.ms = 60000
 (io.confluent.kafka.schemaregistry.rest.SchemaRegistryConfig)
[2018-05-03 16:33:03,580] INFO Logging initialized @3184ms (org.eclipse.jetty.util.log)
[2018-05-03 16:33:05,315] INFO Initializing KafkaStore with broker endpoints: PLAINTEXT://maya:9092 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-03 16:33:05,800] INFO Creating schemas topic _schemas (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-03 16:33:05,800] WARN Creating the schema topic _schemas using a replication factor of 1, which is less than the desired one of 3. If this is a production environment, it's crucial to add more brokers and increase the replication factor of the topic. (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-03 16:33:06,769] INFO Initialized last consumed offset to -1 (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-05-03 16:33:06,769] INFO [kafka-store-reader-thread-_schemas]: Starting (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-05-03 16:33:07,378] INFO Wait to catch up until the offset of the last message at 0 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-03 16:33:07,534] INFO Joining schema registry with Zookeeper-based coordination (io.confluent.kafka.schemaregistry.storage.KafkaSchemaRegistry)
[2018-05-03 16:33:07,612] INFO Created schema registry namespace localhost:2181/schema_registry (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-03 16:33:07,722] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-03 16:33:07,769] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-03 16:33:07,800] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-03 16:33:07,987] INFO Adding listener: http://0.0.0.0:8081 (io.confluent.rest.Application)
[2018-05-03 16:33:08,066] INFO jetty-9.2.22.v20170606 (org.eclipse.jetty.server.Server)
[2018-05-03 16:33:09,722] INFO HV000001: Hibernate Validator 5.1.3.Final (org.hibernate.validator.internal.util.Version)
[2018-05-03 16:33:10,050] INFO Started o.e.j.s.ServletContextHandler@5ef6ae06{/,null,AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler)
[2018-05-03 16:33:10,113] INFO Started NetworkTrafficServerConnector@3568f9d2{HTTP/1.1}{0.0.0.0:8081} (org.eclipse.jetty.server.NetworkTrafficServerConnector)
[2018-05-03 16:33:10,113] INFO Started @9714ms (org.eclipse.jetty.server.Server)
[2018-05-03 16:33:10,113] INFO Server started, listening for requests... (io.confluent.kafka.schemaregistry.rest.SchemaRegistryMain)
[2018-05-03 16:35:10,417] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-03 16:35:10,512] INFO 127.0.0.1 - - [03/May/2018:16:35:09 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  577 (io.confluent.rest-utils.requests)
[2018-05-03 16:35:11,083] INFO Wait to catch up until the offset of the last message at 2 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-03 16:35:11,117] INFO 127.0.0.1 - - [03/May/2018:16:35:11 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  43 (io.confluent.rest-utils.requests)
[2018-05-03 16:35:11,509] INFO Wait to catch up until the offset of the last message at 3 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-03 16:35:11,537] INFO 127.0.0.1 - - [03/May/2018:16:35:11 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  33 (io.confluent.rest-utils.requests)
[2018-05-03 16:35:18,538] INFO 127.0.0.1 - - [03/May/2018:16:35:18 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  10 (io.confluent.rest-utils.requests)
[2018-05-03 16:35:18,598] INFO 127.0.0.1 - - [03/May/2018:16:35:18 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  7 (io.confluent.rest-utils.requests)
[2018-05-03 16:36:09,605] INFO 127.0.0.1 - - [03/May/2018:16:36:09 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  5 (io.confluent.rest-utils.requests)
[2018-05-03 16:36:09,723] INFO 127.0.0.1 - - [03/May/2018:16:36:09 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  13 (io.confluent.rest-utils.requests)
[2018-05-03 16:36:09,743] INFO 127.0.0.1 - - [03/May/2018:16:36:09 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  8 (io.confluent.rest-utils.requests)
[2018-05-03 16:36:10,706] INFO 127.0.0.1 - - [03/May/2018:16:36:10 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  4 (io.confluent.rest-utils.requests)
[2018-05-03 16:36:10,735] INFO 127.0.0.1 - - [03/May/2018:16:36:10 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  4 (io.confluent.rest-utils.requests)
[2018-05-03 16:38:17,478] INFO 127.0.0.1 - - [03/May/2018:16:38:17 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  19 (io.confluent.rest-utils.requests)
[2018-05-03 16:38:17,596] INFO 127.0.0.1 - - [03/May/2018:16:38:17 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  7 (io.confluent.rest-utils.requests)
[2018-05-03 16:38:17,625] INFO 127.0.0.1 - - [03/May/2018:16:38:17 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  12 (io.confluent.rest-utils.requests)
[2018-05-03 16:38:18,643] INFO 127.0.0.1 - - [03/May/2018:16:38:18 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  8 (io.confluent.rest-utils.requests)
[2018-05-03 16:38:18,690] INFO 127.0.0.1 - - [03/May/2018:16:38:18 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  7 (io.confluent.rest-utils.requests)
[2018-05-03 16:41:30,506] INFO 127.0.0.1 - - [03/May/2018:16:41:30 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  6 (io.confluent.rest-utils.requests)
[2018-05-03 16:41:30,621] INFO 127.0.0.1 - - [03/May/2018:16:41:30 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  16 (io.confluent.rest-utils.requests)
[2018-05-03 16:41:30,643] INFO 127.0.0.1 - - [03/May/2018:16:41:30 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  5 (io.confluent.rest-utils.requests)
[2018-05-03 16:41:31,604] INFO 127.0.0.1 - - [03/May/2018:16:41:31 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  5 (io.confluent.rest-utils.requests)
[2018-05-03 16:41:31,631] INFO 127.0.0.1 - - [03/May/2018:16:41:31 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  3 (io.confluent.rest-utils.requests)
[2018-05-04 09:19:25,283] INFO SchemaRegistryConfig values: 
	metric.reporters = []
	kafkastore.sasl.kerberos.kinit.cmd = /usr/bin/kinit
	response.mediatype.default = application/vnd.schemaregistry.v1+json
	kafkastore.ssl.trustmanager.algorithm = PKIX
	authentication.realm = 
	ssl.keystore.type = JKS
	kafkastore.topic = _schemas
	metrics.jmx.prefix = kafka.schema.registry
	kafkastore.ssl.enabled.protocols = TLSv1.2,TLSv1.1,TLSv1
	kafkastore.topic.replication.factor = 3
	ssl.truststore.password = [hidden]
	kafkastore.timeout.ms = 500
	host.name = maya
	kafkastore.bootstrap.servers = []
	schema.registry.zk.namespace = schema_registry
	kafkastore.sasl.kerberos.ticket.renew.window.factor = 0.8
	kafkastore.sasl.kerberos.service.name = 
	schema.registry.resource.extension.class = 
	ssl.endpoint.identification.algorithm = 
	compression.enable = false
	kafkastore.ssl.truststore.type = JKS
	avro.compatibility.level = backward
	kafkastore.ssl.protocol = TLS
	kafkastore.ssl.provider = 
	kafkastore.ssl.truststore.location = 
	response.mediatype.preferred = [application/vnd.schemaregistry.v1+json, application/vnd.schemaregistry+json, application/json]
	kafkastore.ssl.keystore.type = JKS
	ssl.truststore.type = JKS
	kafkastore.ssl.truststore.password = [hidden]
	access.control.allow.origin = 
	ssl.truststore.location = 
	ssl.keystore.password = [hidden]
	port = 8081
	kafkastore.ssl.keystore.location = 
	master.eligibility = true
	ssl.client.auth = false
	kafkastore.ssl.keystore.password = [hidden]
	kafkastore.security.protocol = PLAINTEXT
	ssl.trustmanager.algorithm = 
	authentication.method = NONE
	request.logger.name = io.confluent.rest-utils.requests
	ssl.key.password = [hidden]
	kafkastore.zk.session.timeout.ms = 30000
	kafkastore.sasl.mechanism = GSSAPI
	kafkastore.sasl.kerberos.ticket.renew.jitter = 0.05
	kafkastore.ssl.key.password = [hidden]
	zookeeper.set.acl = false
	schema.registry.inter.instance.protocol = http
	authentication.roles = [*]
	metrics.num.samples = 2
	ssl.protocol = TLS
	schema.registry.group.id = schema-registry
	kafkastore.ssl.keymanager.algorithm = SunX509
	kafkastore.connection.url = localhost:2181
	debug = false
	listeners = [http://0.0.0.0:8081]
	kafkastore.group.id = 
	ssl.provider = 
	ssl.enabled.protocols = []
	shutdown.graceful.ms = 1000
	ssl.keystore.location = 
	ssl.cipher.suites = []
	kafkastore.ssl.endpoint.identification.algorithm = 
	kafkastore.ssl.cipher.suites = 
	access.control.allow.methods = 
	kafkastore.sasl.kerberos.min.time.before.relogin = 60000
	ssl.keymanager.algorithm = 
	metrics.sample.window.ms = 30000
	kafkastore.init.timeout.ms = 60000
 (io.confluent.kafka.schemaregistry.rest.SchemaRegistryConfig)
[2018-05-04 09:19:28,022] INFO Logging initialized @9905ms (org.eclipse.jetty.util.log)
[2018-05-04 09:19:37,449] INFO Initializing KafkaStore with broker endpoints: PLAINTEXT://maya:9092 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-04 09:19:39,460] INFO Creating schemas topic _schemas (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-04 09:19:39,474] WARN Creating the schema topic _schemas using a replication factor of 1, which is less than the desired one of 3. If this is a production environment, it's crucial to add more brokers and increase the replication factor of the topic. (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-04 09:19:43,487] INFO Initialized last consumed offset to -1 (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-05-04 09:19:43,492] INFO [kafka-store-reader-thread-_schemas]: Starting (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-05-04 09:19:45,307] INFO Wait to catch up until the offset of the last message at 0 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-04 09:19:45,308] INFO Joining schema registry with Zookeeper-based coordination (io.confluent.kafka.schemaregistry.storage.KafkaSchemaRegistry)
[2018-05-04 09:19:45,491] INFO Created schema registry namespace localhost:2181/schema_registry (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-04 09:19:45,655] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-04 09:19:45,723] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-04 09:19:45,735] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-04 09:19:46,459] INFO Adding listener: http://0.0.0.0:8081 (io.confluent.rest.Application)
[2018-05-04 09:19:46,756] INFO jetty-9.2.22.v20170606 (org.eclipse.jetty.server.Server)
[2018-05-04 09:19:52,130] INFO HV000001: Hibernate Validator 5.1.3.Final (org.hibernate.validator.internal.util.Version)
[2018-05-04 09:19:53,454] INFO Started o.e.j.s.ServletContextHandler@5ef6ae06{/,null,AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler)
[2018-05-04 09:19:53,514] INFO Started NetworkTrafficServerConnector@3568f9d2{HTTP/1.1}{0.0.0.0:8081} (org.eclipse.jetty.server.NetworkTrafficServerConnector)
[2018-05-04 09:19:53,515] INFO Started @35407ms (org.eclipse.jetty.server.Server)
[2018-05-04 09:19:53,516] INFO Server started, listening for requests... (io.confluent.kafka.schemaregistry.rest.SchemaRegistryMain)
[2018-05-04 10:19:27,030] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-04 10:19:27,438] INFO 127.0.0.1 - - [04/May/2018:10:19:25 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  2368 (io.confluent.rest-utils.requests)
[2018-05-04 10:19:28,699] INFO Wait to catch up until the offset of the last message at 2 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-04 10:19:28,727] INFO 127.0.0.1 - - [04/May/2018:10:19:28 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  66 (io.confluent.rest-utils.requests)
[2018-05-04 10:19:29,234] INFO Wait to catch up until the offset of the last message at 3 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-04 10:19:29,259] INFO 127.0.0.1 - - [04/May/2018:10:19:29 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  37 (io.confluent.rest-utils.requests)
[2018-05-04 10:20:42,850] INFO 127.0.0.1 - - [04/May/2018:10:20:42 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  14 (io.confluent.rest-utils.requests)
[2018-05-04 10:20:42,964] INFO 127.0.0.1 - - [04/May/2018:10:20:42 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  17 (io.confluent.rest-utils.requests)
[2018-05-04 10:20:43,029] INFO 127.0.0.1 - - [04/May/2018:10:20:42 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  36 (io.confluent.rest-utils.requests)
[2018-05-04 10:22:01,007] INFO 127.0.0.1 - - [04/May/2018:10:22:01 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  5 (io.confluent.rest-utils.requests)
[2018-05-04 10:22:01,115] INFO 127.0.0.1 - - [04/May/2018:10:22:01 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  18 (io.confluent.rest-utils.requests)
[2018-05-04 10:22:01,201] INFO 127.0.0.1 - - [04/May/2018:10:22:01 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  5 (io.confluent.rest-utils.requests)
[2018-05-04 10:22:10,356] INFO 127.0.0.1 - - [04/May/2018:10:22:10 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  12 (io.confluent.rest-utils.requests)
[2018-05-04 10:22:10,422] INFO Wait to catch up until the offset of the last message at 4 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-04 10:22:10,438] INFO 127.0.0.1 - - [04/May/2018:10:22:10 +0530] "POST /subjects/booking-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-value/versions HTTP/1.1" 200 8  19 (io.confluent.rest-utils.requests)
[2018-05-04 10:27:12,612] INFO 127.0.0.1 - - [04/May/2018:10:27:12 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  8 (io.confluent.rest-utils.requests)
[2018-05-04 10:27:12,726] INFO 127.0.0.1 - - [04/May/2018:10:27:12 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  12 (io.confluent.rest-utils.requests)
[2018-05-04 10:27:12,745] INFO 127.0.0.1 - - [04/May/2018:10:27:12 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  6 (io.confluent.rest-utils.requests)
[2018-05-04 10:32:13,604] INFO 127.0.0.1 - - [04/May/2018:10:32:13 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  6 (io.confluent.rest-utils.requests)
[2018-05-04 10:32:13,741] INFO 127.0.0.1 - - [04/May/2018:10:32:13 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  53 (io.confluent.rest-utils.requests)
[2018-05-04 10:32:13,764] INFO 127.0.0.1 - - [04/May/2018:10:32:13 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  7 (io.confluent.rest-utils.requests)
[2018-05-04 10:33:00,545] INFO 127.0.0.1 - - [04/May/2018:10:33:00 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  5 (io.confluent.rest-utils.requests)
[2018-05-04 10:33:00,649] INFO 127.0.0.1 - - [04/May/2018:10:33:00 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  7 (io.confluent.rest-utils.requests)
[2018-05-04 10:33:00,686] INFO 127.0.0.1 - - [04/May/2018:10:33:00 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  24 (io.confluent.rest-utils.requests)
[2018-05-04 10:33:02,135] INFO 127.0.0.1 - - [04/May/2018:10:33:02 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  7 (io.confluent.rest-utils.requests)
[2018-05-04 10:33:02,205] INFO 127.0.0.1 - - [04/May/2018:10:33:02 +0530] "POST /subjects/booking-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-value/versions HTTP/1.1" 200 8  5 (io.confluent.rest-utils.requests)
[2018-05-04 10:40:15,349] INFO 127.0.0.1 - - [04/May/2018:10:40:15 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  4 (io.confluent.rest-utils.requests)
[2018-05-04 10:40:15,485] INFO 127.0.0.1 - - [04/May/2018:10:40:15 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  56 (io.confluent.rest-utils.requests)
[2018-05-04 10:40:15,498] INFO 127.0.0.1 - - [04/May/2018:10:40:15 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  4 (io.confluent.rest-utils.requests)
[2018-05-04 10:40:16,812] INFO 127.0.0.1 - - [04/May/2018:10:40:16 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  4 (io.confluent.rest-utils.requests)
[2018-05-04 10:40:16,856] INFO 127.0.0.1 - - [04/May/2018:10:40:16 +0530] "POST /subjects/booking-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-value/versions HTTP/1.1" 200 8  13 (io.confluent.rest-utils.requests)
[2018-05-04 10:40:16,978] INFO Wait to catch up until the offset of the last message at 5 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-04 10:40:16,992] INFO 127.0.0.1 - - [04/May/2018:10:40:16 +0530] "POST /subjects/booking-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog-value/versions HTTP/1.1" 200 8  17 (io.confluent.rest-utils.requests)
[2018-05-04 10:43:28,763] INFO 127.0.0.1 - - [04/May/2018:10:43:28 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  5 (io.confluent.rest-utils.requests)
[2018-05-04 10:43:28,887] INFO 127.0.0.1 - - [04/May/2018:10:43:28 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  17 (io.confluent.rest-utils.requests)
[2018-05-04 10:43:28,908] INFO 127.0.0.1 - - [04/May/2018:10:43:28 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  4 (io.confluent.rest-utils.requests)
[2018-05-04 10:43:30,829] INFO 127.0.0.1 - - [04/May/2018:10:43:30 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  9 (io.confluent.rest-utils.requests)
[2018-05-04 10:43:30,880] INFO Wait to catch up until the offset of the last message at 6 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-04 10:43:30,897] INFO 127.0.0.1 - - [04/May/2018:10:43:30 +0530] "POST /subjects/booking-KSTREAM-AGGREGATE-STATE-STORE-0000000002-repartition-value/versions HTTP/1.1" 200 8  22 (io.confluent.rest-utils.requests)
[2018-05-04 10:43:30,908] INFO Wait to catch up until the offset of the last message at 7 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-04 10:43:30,925] INFO 127.0.0.1 - - [04/May/2018:10:43:30 +0530] "POST /subjects/booking-KSTREAM-AGGREGATE-STATE-STORE-0000000009-repartition-value/versions HTTP/1.1" 200 8  19 (io.confluent.rest-utils.requests)
[2018-05-04 10:43:31,117] INFO Wait to catch up until the offset of the last message at 8 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-04 10:43:31,130] INFO 127.0.0.1 - - [04/May/2018:10:43:31 +0530] "POST /subjects/booking-KSTREAM-AGGREGATE-STATE-STORE-0000000002-changelog-value/versions HTTP/1.1" 200 8  17 (io.confluent.rest-utils.requests)
[2018-05-04 10:44:37,412] INFO 127.0.0.1 - - [04/May/2018:10:44:37 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  6 (io.confluent.rest-utils.requests)
[2018-05-04 10:44:37,522] INFO 127.0.0.1 - - [04/May/2018:10:44:37 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  4 (io.confluent.rest-utils.requests)
[2018-05-04 10:44:37,574] INFO 127.0.0.1 - - [04/May/2018:10:44:37 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  34 (io.confluent.rest-utils.requests)
[2018-05-04 10:44:38,990] INFO 127.0.0.1 - - [04/May/2018:10:44:38 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  3 (io.confluent.rest-utils.requests)
[2018-05-04 10:44:39,017] INFO 127.0.0.1 - - [04/May/2018:10:44:39 +0530] "POST /subjects/booking-KSTREAM-AGGREGATE-STATE-STORE-0000000002-repartition-value/versions HTTP/1.1" 200 8  4 (io.confluent.rest-utils.requests)
[2018-05-04 10:44:39,028] INFO 127.0.0.1 - - [04/May/2018:10:44:39 +0530] "POST /subjects/booking-KSTREAM-AGGREGATE-STATE-STORE-0000000009-repartition-value/versions HTTP/1.1" 200 8  3 (io.confluent.rest-utils.requests)
[2018-05-04 10:44:39,149] INFO 127.0.0.1 - - [04/May/2018:10:44:39 +0530] "POST /subjects/booking-KSTREAM-AGGREGATE-STATE-STORE-0000000002-changelog-value/versions HTTP/1.1" 200 8  4 (io.confluent.rest-utils.requests)
[2018-05-04 11:28:56,896] INFO 127.0.0.1 - - [04/May/2018:11:28:56 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  13 (io.confluent.rest-utils.requests)
[2018-05-04 11:28:57,057] INFO 127.0.0.1 - - [04/May/2018:11:28:57 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  10 (io.confluent.rest-utils.requests)
[2018-05-04 11:28:57,151] INFO 127.0.0.1 - - [04/May/2018:11:28:57 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  44 (io.confluent.rest-utils.requests)
[2018-05-04 11:28:57,790] INFO 127.0.0.1 - - [04/May/2018:11:28:57 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  6 (io.confluent.rest-utils.requests)
[2018-05-04 13:21:52,201] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-04 13:21:52,798] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-04 14:03:06,019] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-04 14:03:06,169] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-05 09:17:30,554] INFO SchemaRegistryConfig values: 
	metric.reporters = []
	kafkastore.sasl.kerberos.kinit.cmd = /usr/bin/kinit
	response.mediatype.default = application/vnd.schemaregistry.v1+json
	kafkastore.ssl.trustmanager.algorithm = PKIX
	authentication.realm = 
	ssl.keystore.type = JKS
	kafkastore.topic = _schemas
	metrics.jmx.prefix = kafka.schema.registry
	kafkastore.ssl.enabled.protocols = TLSv1.2,TLSv1.1,TLSv1
	kafkastore.topic.replication.factor = 3
	ssl.truststore.password = [hidden]
	kafkastore.timeout.ms = 500
	host.name = maya
	kafkastore.bootstrap.servers = []
	schema.registry.zk.namespace = schema_registry
	kafkastore.sasl.kerberos.ticket.renew.window.factor = 0.8
	kafkastore.sasl.kerberos.service.name = 
	schema.registry.resource.extension.class = 
	ssl.endpoint.identification.algorithm = 
	compression.enable = false
	kafkastore.ssl.truststore.type = JKS
	avro.compatibility.level = backward
	kafkastore.ssl.protocol = TLS
	kafkastore.ssl.provider = 
	kafkastore.ssl.truststore.location = 
	response.mediatype.preferred = [application/vnd.schemaregistry.v1+json, application/vnd.schemaregistry+json, application/json]
	kafkastore.ssl.keystore.type = JKS
	ssl.truststore.type = JKS
	kafkastore.ssl.truststore.password = [hidden]
	access.control.allow.origin = 
	ssl.truststore.location = 
	ssl.keystore.password = [hidden]
	port = 8081
	kafkastore.ssl.keystore.location = 
	master.eligibility = true
	ssl.client.auth = false
	kafkastore.ssl.keystore.password = [hidden]
	kafkastore.security.protocol = PLAINTEXT
	ssl.trustmanager.algorithm = 
	authentication.method = NONE
	request.logger.name = io.confluent.rest-utils.requests
	ssl.key.password = [hidden]
	kafkastore.zk.session.timeout.ms = 30000
	kafkastore.sasl.mechanism = GSSAPI
	kafkastore.sasl.kerberos.ticket.renew.jitter = 0.05
	kafkastore.ssl.key.password = [hidden]
	zookeeper.set.acl = false
	schema.registry.inter.instance.protocol = http
	authentication.roles = [*]
	metrics.num.samples = 2
	ssl.protocol = TLS
	schema.registry.group.id = schema-registry
	kafkastore.ssl.keymanager.algorithm = SunX509
	kafkastore.connection.url = localhost:2181
	debug = false
	listeners = [http://0.0.0.0:8081]
	kafkastore.group.id = 
	ssl.provider = 
	ssl.enabled.protocols = []
	shutdown.graceful.ms = 1000
	ssl.keystore.location = 
	ssl.cipher.suites = []
	kafkastore.ssl.endpoint.identification.algorithm = 
	kafkastore.ssl.cipher.suites = 
	access.control.allow.methods = 
	kafkastore.sasl.kerberos.min.time.before.relogin = 60000
	ssl.keymanager.algorithm = 
	metrics.sample.window.ms = 30000
	kafkastore.init.timeout.ms = 60000
 (io.confluent.kafka.schemaregistry.rest.SchemaRegistryConfig)
[2018-05-05 09:17:30,960] INFO Logging initialized @926ms (org.eclipse.jetty.util.log)
[2018-05-05 09:17:32,851] INFO Initializing KafkaStore with broker endpoints: PLAINTEXT://maya:9092 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-05 09:17:33,351] INFO Creating schemas topic _schemas (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-05 09:17:33,351] WARN Creating the schema topic _schemas using a replication factor of 1, which is less than the desired one of 3. If this is a production environment, it's crucial to add more brokers and increase the replication factor of the topic. (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-05 09:17:34,601] INFO Initialized last consumed offset to -1 (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-05-05 09:17:34,601] INFO [kafka-store-reader-thread-_schemas]: Starting (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-05-05 09:17:35,273] INFO Wait to catch up until the offset of the last message at 0 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-05 09:17:35,414] INFO Joining schema registry with Zookeeper-based coordination (io.confluent.kafka.schemaregistry.storage.KafkaSchemaRegistry)
[2018-05-05 09:17:35,523] INFO Created schema registry namespace localhost:2181/schema_registry (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-05 09:17:35,679] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-05 09:17:35,742] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-05 09:17:35,789] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-05 09:17:36,148] INFO Adding listener: http://0.0.0.0:8081 (io.confluent.rest.Application)
[2018-05-05 09:17:36,273] INFO jetty-9.2.22.v20170606 (org.eclipse.jetty.server.Server)
[2018-05-05 09:17:37,992] INFO HV000001: Hibernate Validator 5.1.3.Final (org.hibernate.validator.internal.util.Version)
[2018-05-05 09:17:38,476] INFO Started o.e.j.s.ServletContextHandler@5ef6ae06{/,null,AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler)
[2018-05-05 09:17:38,523] INFO Started NetworkTrafficServerConnector@3568f9d2{HTTP/1.1}{0.0.0.0:8081} (org.eclipse.jetty.server.NetworkTrafficServerConnector)
[2018-05-05 09:17:38,523] INFO Started @8486ms (org.eclipse.jetty.server.Server)
[2018-05-05 09:17:38,523] INFO Server started, listening for requests... (io.confluent.kafka.schemaregistry.rest.SchemaRegistryMain)
[2018-05-05 10:23:13,169] INFO SchemaRegistryConfig values: 
	metric.reporters = []
	kafkastore.sasl.kerberos.kinit.cmd = /usr/bin/kinit
	response.mediatype.default = application/vnd.schemaregistry.v1+json
	kafkastore.ssl.trustmanager.algorithm = PKIX
	authentication.realm = 
	ssl.keystore.type = JKS
	kafkastore.topic = _schemas
	metrics.jmx.prefix = kafka.schema.registry
	kafkastore.ssl.enabled.protocols = TLSv1.2,TLSv1.1,TLSv1
	kafkastore.topic.replication.factor = 3
	ssl.truststore.password = [hidden]
	kafkastore.timeout.ms = 500
	host.name = maya
	kafkastore.bootstrap.servers = []
	schema.registry.zk.namespace = schema_registry
	kafkastore.sasl.kerberos.ticket.renew.window.factor = 0.8
	kafkastore.sasl.kerberos.service.name = 
	schema.registry.resource.extension.class = 
	ssl.endpoint.identification.algorithm = 
	compression.enable = false
	kafkastore.ssl.truststore.type = JKS
	avro.compatibility.level = backward
	kafkastore.ssl.protocol = TLS
	kafkastore.ssl.provider = 
	kafkastore.ssl.truststore.location = 
	response.mediatype.preferred = [application/vnd.schemaregistry.v1+json, application/vnd.schemaregistry+json, application/json]
	kafkastore.ssl.keystore.type = JKS
	ssl.truststore.type = JKS
	kafkastore.ssl.truststore.password = [hidden]
	access.control.allow.origin = 
	ssl.truststore.location = 
	ssl.keystore.password = [hidden]
	port = 8081
	kafkastore.ssl.keystore.location = 
	master.eligibility = true
	ssl.client.auth = false
	kafkastore.ssl.keystore.password = [hidden]
	kafkastore.security.protocol = PLAINTEXT
	ssl.trustmanager.algorithm = 
	authentication.method = NONE
	request.logger.name = io.confluent.rest-utils.requests
	ssl.key.password = [hidden]
	kafkastore.zk.session.timeout.ms = 30000
	kafkastore.sasl.mechanism = GSSAPI
	kafkastore.sasl.kerberos.ticket.renew.jitter = 0.05
	kafkastore.ssl.key.password = [hidden]
	zookeeper.set.acl = false
	schema.registry.inter.instance.protocol = http
	authentication.roles = [*]
	metrics.num.samples = 2
	ssl.protocol = TLS
	schema.registry.group.id = schema-registry
	kafkastore.ssl.keymanager.algorithm = SunX509
	kafkastore.connection.url = localhost:2181
	debug = false
	listeners = [http://0.0.0.0:8081]
	kafkastore.group.id = 
	ssl.provider = 
	ssl.enabled.protocols = []
	shutdown.graceful.ms = 1000
	ssl.keystore.location = 
	ssl.cipher.suites = []
	kafkastore.ssl.endpoint.identification.algorithm = 
	kafkastore.ssl.cipher.suites = 
	access.control.allow.methods = 
	kafkastore.sasl.kerberos.min.time.before.relogin = 60000
	ssl.keymanager.algorithm = 
	metrics.sample.window.ms = 30000
	kafkastore.init.timeout.ms = 60000
 (io.confluent.kafka.schemaregistry.rest.SchemaRegistryConfig)
[2018-05-05 10:23:13,472] INFO Logging initialized @826ms (org.eclipse.jetty.util.log)
[2018-05-05 10:23:14,077] INFO Initializing KafkaStore with broker endpoints: PLAINTEXT://maya:9092 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-05 10:23:14,348] INFO Creating schemas topic _schemas (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-05 10:23:14,351] WARN Creating the schema topic _schemas using a replication factor of 1, which is less than the desired one of 3. If this is a production environment, it's crucial to add more brokers and increase the replication factor of the topic. (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-05 10:23:15,064] INFO Initialized last consumed offset to -1 (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-05-05 10:23:15,065] INFO [kafka-store-reader-thread-_schemas]: Starting (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-05-05 10:23:15,365] INFO Wait to catch up until the offset of the last message at 0 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-05 10:23:15,410] INFO Joining schema registry with Zookeeper-based coordination (io.confluent.kafka.schemaregistry.storage.KafkaSchemaRegistry)
[2018-05-05 10:23:15,472] INFO Created schema registry namespace localhost:2181/schema_registry (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-05 10:23:15,567] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-05 10:23:15,584] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-05 10:23:15,622] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-05 10:23:15,677] INFO Adding listener: http://0.0.0.0:8081 (io.confluent.rest.Application)
[2018-05-05 10:23:15,787] INFO jetty-9.2.22.v20170606 (org.eclipse.jetty.server.Server)
[2018-05-05 10:23:16,667] INFO HV000001: Hibernate Validator 5.1.3.Final (org.hibernate.validator.internal.util.Version)
[2018-05-05 10:23:16,912] INFO Started o.e.j.s.ServletContextHandler@5ef6ae06{/,null,AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler)
[2018-05-05 10:23:16,933] INFO Started NetworkTrafficServerConnector@3568f9d2{HTTP/1.1}{0.0.0.0:8081} (org.eclipse.jetty.server.NetworkTrafficServerConnector)
[2018-05-05 10:23:16,935] INFO Started @4292ms (org.eclipse.jetty.server.Server)
[2018-05-05 10:23:16,936] INFO Server started, listening for requests... (io.confluent.kafka.schemaregistry.rest.SchemaRegistryMain)
[2018-05-05 10:23:49,773] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-05 10:23:49,848] INFO 127.0.0.1 - - [05/May/2018:10:23:49 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  590 (io.confluent.rest-utils.requests)
[2018-05-05 10:23:50,568] INFO Wait to catch up until the offset of the last message at 2 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-05 10:23:50,605] INFO 127.0.0.1 - - [05/May/2018:10:23:50 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  52 (io.confluent.rest-utils.requests)
[2018-05-05 10:23:51,063] INFO Wait to catch up until the offset of the last message at 3 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-05 10:23:51,090] INFO 127.0.0.1 - - [05/May/2018:10:23:51 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  35 (io.confluent.rest-utils.requests)
[2018-05-05 10:24:00,280] INFO 127.0.0.1 - - [05/May/2018:10:24:00 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  17 (io.confluent.rest-utils.requests)
[2018-05-05 10:24:00,340] INFO 127.0.0.1 - - [05/May/2018:10:24:00 +0530] "GET /schemas/ids/3 HTTP/1.1" 200 310  10 (io.confluent.rest-utils.requests)
[2018-05-05 10:24:00,355] INFO Wait to catch up until the offset of the last message at 4 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-05 10:24:00,380] INFO 127.0.0.1 - - [05/May/2018:10:24:00 +0530] "POST /subjects/booking-KSTREAM-REDUCE-STATE-STORE-0000000003-repartition-value/versions HTTP/1.1" 200 8  33 (io.confluent.rest-utils.requests)
[2018-05-05 10:24:00,553] INFO Wait to catch up until the offset of the last message at 5 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-05 10:24:00,573] INFO 127.0.0.1 - - [05/May/2018:10:24:00 +0530] "POST /subjects/booking-KSTREAM-REDUCE-STATE-STORE-0000000003-changelog-value/versions HTTP/1.1" 200 8  25 (io.confluent.rest-utils.requests)
[2018-05-05 10:25:30,213] INFO 127.0.0.1 - - [05/May/2018:10:25:30 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  14 (io.confluent.rest-utils.requests)
[2018-05-05 10:25:30,363] INFO 127.0.0.1 - - [05/May/2018:10:25:30 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  37 (io.confluent.rest-utils.requests)
[2018-05-05 10:25:30,382] INFO 127.0.0.1 - - [05/May/2018:10:25:30 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  6 (io.confluent.rest-utils.requests)
[2018-05-05 10:25:32,374] INFO 127.0.0.1 - - [05/May/2018:10:25:32 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  9 (io.confluent.rest-utils.requests)
[2018-05-05 10:25:32,432] INFO 127.0.0.1 - - [05/May/2018:10:25:32 +0530] "GET /schemas/ids/3 HTTP/1.1" 200 310  6 (io.confluent.rest-utils.requests)
[2018-05-05 10:25:32,446] INFO 127.0.0.1 - - [05/May/2018:10:25:32 +0530] "POST /subjects/booking-KSTREAM-REDUCE-STATE-STORE-0000000003-repartition-value/versions HTTP/1.1" 200 8  6 (io.confluent.rest-utils.requests)
[2018-05-05 10:25:32,571] INFO 127.0.0.1 - - [05/May/2018:10:25:32 +0530] "POST /subjects/booking-KSTREAM-REDUCE-STATE-STORE-0000000003-changelog-value/versions HTTP/1.1" 200 8  5 (io.confluent.rest-utils.requests)
[2018-05-05 10:29:16,203] INFO 127.0.0.1 - - [05/May/2018:10:29:16 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  9 (io.confluent.rest-utils.requests)
[2018-05-05 10:29:16,319] INFO 127.0.0.1 - - [05/May/2018:10:29:16 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  21 (io.confluent.rest-utils.requests)
[2018-05-05 10:29:16,334] INFO 127.0.0.1 - - [05/May/2018:10:29:16 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  5 (io.confluent.rest-utils.requests)
[2018-05-05 10:29:17,979] INFO 127.0.0.1 - - [05/May/2018:10:29:17 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  3 (io.confluent.rest-utils.requests)
[2018-05-05 10:29:18,009] INFO 127.0.0.1 - - [05/May/2018:10:29:18 +0530] "GET /schemas/ids/3 HTTP/1.1" 200 310  4 (io.confluent.rest-utils.requests)
[2018-05-05 10:29:18,021] INFO 127.0.0.1 - - [05/May/2018:10:29:18 +0530] "POST /subjects/booking-KSTREAM-REDUCE-STATE-STORE-0000000003-repartition-value/versions HTTP/1.1" 200 8  6 (io.confluent.rest-utils.requests)
[2018-05-05 10:29:18,166] INFO 127.0.0.1 - - [05/May/2018:10:29:18 +0530] "POST /subjects/booking-KSTREAM-REDUCE-STATE-STORE-0000000003-changelog-value/versions HTTP/1.1" 200 8  7 (io.confluent.rest-utils.requests)
[2018-05-05 10:45:10,028] INFO 127.0.0.1 - - [05/May/2018:10:45:10 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  16 (io.confluent.rest-utils.requests)
[2018-05-05 10:45:10,145] INFO 127.0.0.1 - - [05/May/2018:10:45:10 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  20 (io.confluent.rest-utils.requests)
[2018-05-05 10:45:10,260] INFO 127.0.0.1 - - [05/May/2018:10:45:10 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  73 (io.confluent.rest-utils.requests)
[2018-05-05 10:45:11,147] INFO 127.0.0.1 - - [05/May/2018:10:45:11 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  30 (io.confluent.rest-utils.requests)
[2018-05-05 10:45:11,164] INFO 127.0.0.1 - - [05/May/2018:10:45:11 +0530] "GET /schemas/ids/3 HTTP/1.1" 200 310  7 (io.confluent.rest-utils.requests)
[2018-05-05 10:47:51,767] INFO 127.0.0.1 - - [05/May/2018:10:47:51 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  14 (io.confluent.rest-utils.requests)
[2018-05-05 10:47:51,886] INFO 127.0.0.1 - - [05/May/2018:10:47:51 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  13 (io.confluent.rest-utils.requests)
[2018-05-05 10:47:51,922] INFO 127.0.0.1 - - [05/May/2018:10:47:51 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  5 (io.confluent.rest-utils.requests)
[2018-05-05 10:47:52,525] INFO 127.0.0.1 - - [05/May/2018:10:47:52 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  6 (io.confluent.rest-utils.requests)
[2018-05-05 10:47:52,563] INFO 127.0.0.1 - - [05/May/2018:10:47:52 +0530] "GET /schemas/ids/3 HTTP/1.1" 200 310  7 (io.confluent.rest-utils.requests)
[2018-05-05 10:49:05,063] INFO 127.0.0.1 - - [05/May/2018:10:49:05 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  8 (io.confluent.rest-utils.requests)
[2018-05-05 10:49:05,209] INFO 127.0.0.1 - - [05/May/2018:10:49:05 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  17 (io.confluent.rest-utils.requests)
[2018-05-05 10:49:05,277] INFO 127.0.0.1 - - [05/May/2018:10:49:05 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  26 (io.confluent.rest-utils.requests)
[2018-05-05 10:49:05,727] INFO 127.0.0.1 - - [05/May/2018:10:49:05 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  3 (io.confluent.rest-utils.requests)
[2018-05-05 10:49:05,763] INFO 127.0.0.1 - - [05/May/2018:10:49:05 +0530] "GET /schemas/ids/3 HTTP/1.1" 200 310  4 (io.confluent.rest-utils.requests)
[2018-05-05 12:31:59,653] INFO 127.0.0.1 - - [05/May/2018:12:31:59 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  11 (io.confluent.rest-utils.requests)
[2018-05-05 12:31:59,759] INFO 127.0.0.1 - - [05/May/2018:12:31:59 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  19 (io.confluent.rest-utils.requests)
[2018-05-05 12:31:59,791] INFO 127.0.0.1 - - [05/May/2018:12:31:59 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  9 (io.confluent.rest-utils.requests)
[2018-05-05 12:32:00,145] INFO 127.0.0.1 - - [05/May/2018:12:32:00 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  5 (io.confluent.rest-utils.requests)
[2018-05-05 12:32:00,177] INFO 127.0.0.1 - - [05/May/2018:12:32:00 +0530] "GET /schemas/ids/3 HTTP/1.1" 200 310  4 (io.confluent.rest-utils.requests)
[2018-05-05 12:38:46,181] INFO 127.0.0.1 - - [05/May/2018:12:38:46 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  8 (io.confluent.rest-utils.requests)
[2018-05-05 12:38:46,309] INFO 127.0.0.1 - - [05/May/2018:12:38:46 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  18 (io.confluent.rest-utils.requests)
[2018-05-05 12:38:46,340] INFO 127.0.0.1 - - [05/May/2018:12:38:46 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  11 (io.confluent.rest-utils.requests)
[2018-05-05 12:38:46,747] INFO 127.0.0.1 - - [05/May/2018:12:38:46 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  3 (io.confluent.rest-utils.requests)
[2018-05-05 12:38:46,781] INFO 127.0.0.1 - - [05/May/2018:12:38:46 +0530] "GET /schemas/ids/3 HTTP/1.1" 200 310  9 (io.confluent.rest-utils.requests)
[2018-05-05 13:59:38,719] INFO 127.0.0.1 - - [05/May/2018:13:59:38 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  8 (io.confluent.rest-utils.requests)
[2018-05-05 13:59:38,839] INFO 127.0.0.1 - - [05/May/2018:13:59:38 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  16 (io.confluent.rest-utils.requests)
[2018-05-05 13:59:38,857] INFO 127.0.0.1 - - [05/May/2018:13:59:38 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  6 (io.confluent.rest-utils.requests)
[2018-05-05 13:59:42,958] INFO 127.0.0.1 - - [05/May/2018:13:59:42 +0530] "GET /schemas/ids/3 HTTP/1.1" 200 310  8 (io.confluent.rest-utils.requests)
[2018-05-05 13:59:43,022] INFO 127.0.0.1 - - [05/May/2018:13:59:43 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  18 (io.confluent.rest-utils.requests)
[2018-05-05 14:07:08,949] INFO 127.0.0.1 - - [05/May/2018:14:07:08 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  5 (io.confluent.rest-utils.requests)
[2018-05-05 14:07:09,020] INFO 127.0.0.1 - - [05/May/2018:14:07:09 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  6 (io.confluent.rest-utils.requests)
[2018-05-05 14:07:09,042] INFO 127.0.0.1 - - [05/May/2018:14:07:09 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  4 (io.confluent.rest-utils.requests)
[2018-05-05 14:07:10,205] INFO 127.0.0.1 - - [05/May/2018:14:07:10 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  9 (io.confluent.rest-utils.requests)
[2018-05-05 14:07:10,256] INFO 127.0.0.1 - - [05/May/2018:14:07:10 +0530] "GET /schemas/ids/3 HTTP/1.1" 200 310  3 (io.confluent.rest-utils.requests)
[2018-05-05 14:11:46,261] INFO 127.0.0.1 - - [05/May/2018:14:11:46 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  5 (io.confluent.rest-utils.requests)
[2018-05-05 14:11:46,355] INFO 127.0.0.1 - - [05/May/2018:14:11:46 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  9 (io.confluent.rest-utils.requests)
[2018-05-05 14:11:46,376] INFO 127.0.0.1 - - [05/May/2018:14:11:46 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  5 (io.confluent.rest-utils.requests)
[2018-05-05 14:11:47,830] INFO 127.0.0.1 - - [05/May/2018:14:11:47 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  6 (io.confluent.rest-utils.requests)
[2018-05-05 14:11:47,867] INFO 127.0.0.1 - - [05/May/2018:14:11:47 +0530] "GET /schemas/ids/3 HTTP/1.1" 200 310  5 (io.confluent.rest-utils.requests)
[2018-05-05 14:12:20,478] INFO 127.0.0.1 - - [05/May/2018:14:12:20 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  8 (io.confluent.rest-utils.requests)
[2018-05-05 14:12:20,562] INFO 127.0.0.1 - - [05/May/2018:14:12:20 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  10 (io.confluent.rest-utils.requests)
[2018-05-05 14:12:20,610] INFO 127.0.0.1 - - [05/May/2018:14:12:20 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  26 (io.confluent.rest-utils.requests)
[2018-05-05 14:12:22,062] INFO 127.0.0.1 - - [05/May/2018:14:12:22 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  7 (io.confluent.rest-utils.requests)
[2018-05-05 14:12:22,120] INFO 127.0.0.1 - - [05/May/2018:14:12:22 +0530] "GET /schemas/ids/3 HTTP/1.1" 200 310  3 (io.confluent.rest-utils.requests)
[2018-05-05 14:42:48,619] INFO 127.0.0.1 - - [05/May/2018:14:42:48 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  5 (io.confluent.rest-utils.requests)
[2018-05-05 14:42:48,749] INFO 127.0.0.1 - - [05/May/2018:14:42:48 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  20 (io.confluent.rest-utils.requests)
[2018-05-05 14:42:48,771] INFO 127.0.0.1 - - [05/May/2018:14:42:48 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  5 (io.confluent.rest-utils.requests)
[2018-05-05 14:42:53,538] INFO 127.0.0.1 - - [05/May/2018:14:42:53 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  5 (io.confluent.rest-utils.requests)
[2018-05-05 14:42:53,598] INFO 127.0.0.1 - - [05/May/2018:14:42:53 +0530] "GET /schemas/ids/3 HTTP/1.1" 200 310  5 (io.confluent.rest-utils.requests)
[2018-05-07 11:44:33,257] INFO SchemaRegistryConfig values: 
	metric.reporters = []
	kafkastore.sasl.kerberos.kinit.cmd = /usr/bin/kinit
	response.mediatype.default = application/vnd.schemaregistry.v1+json
	kafkastore.ssl.trustmanager.algorithm = PKIX
	authentication.realm = 
	ssl.keystore.type = JKS
	kafkastore.topic = _schemas
	metrics.jmx.prefix = kafka.schema.registry
	kafkastore.ssl.enabled.protocols = TLSv1.2,TLSv1.1,TLSv1
	kafkastore.topic.replication.factor = 3
	ssl.truststore.password = [hidden]
	kafkastore.timeout.ms = 500
	host.name = maya
	kafkastore.bootstrap.servers = []
	schema.registry.zk.namespace = schema_registry
	kafkastore.sasl.kerberos.ticket.renew.window.factor = 0.8
	kafkastore.sasl.kerberos.service.name = 
	schema.registry.resource.extension.class = 
	ssl.endpoint.identification.algorithm = 
	compression.enable = false
	kafkastore.ssl.truststore.type = JKS
	avro.compatibility.level = backward
	kafkastore.ssl.protocol = TLS
	kafkastore.ssl.provider = 
	kafkastore.ssl.truststore.location = 
	response.mediatype.preferred = [application/vnd.schemaregistry.v1+json, application/vnd.schemaregistry+json, application/json]
	kafkastore.ssl.keystore.type = JKS
	ssl.truststore.type = JKS
	kafkastore.ssl.truststore.password = [hidden]
	access.control.allow.origin = 
	ssl.truststore.location = 
	ssl.keystore.password = [hidden]
	port = 8081
	kafkastore.ssl.keystore.location = 
	master.eligibility = true
	ssl.client.auth = false
	kafkastore.ssl.keystore.password = [hidden]
	kafkastore.security.protocol = PLAINTEXT
	ssl.trustmanager.algorithm = 
	authentication.method = NONE
	request.logger.name = io.confluent.rest-utils.requests
	ssl.key.password = [hidden]
	kafkastore.zk.session.timeout.ms = 30000
	kafkastore.sasl.mechanism = GSSAPI
	kafkastore.sasl.kerberos.ticket.renew.jitter = 0.05
	kafkastore.ssl.key.password = [hidden]
	zookeeper.set.acl = false
	schema.registry.inter.instance.protocol = http
	authentication.roles = [*]
	metrics.num.samples = 2
	ssl.protocol = TLS
	schema.registry.group.id = schema-registry
	kafkastore.ssl.keymanager.algorithm = SunX509
	kafkastore.connection.url = localhost:2181
	debug = false
	listeners = [http://0.0.0.0:8081]
	kafkastore.group.id = 
	ssl.provider = 
	ssl.enabled.protocols = []
	shutdown.graceful.ms = 1000
	ssl.keystore.location = 
	ssl.cipher.suites = []
	kafkastore.ssl.endpoint.identification.algorithm = 
	kafkastore.ssl.cipher.suites = 
	access.control.allow.methods = 
	kafkastore.sasl.kerberos.min.time.before.relogin = 60000
	ssl.keymanager.algorithm = 
	metrics.sample.window.ms = 30000
	kafkastore.init.timeout.ms = 60000
 (io.confluent.kafka.schemaregistry.rest.SchemaRegistryConfig)
[2018-05-07 11:44:33,867] INFO Logging initialized @2633ms (org.eclipse.jetty.util.log)
[2018-05-07 11:44:35,506] INFO Initializing KafkaStore with broker endpoints: PLAINTEXT://maya:9092 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-07 11:44:36,079] INFO Creating schemas topic _schemas (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-07 11:44:36,084] WARN Creating the schema topic _schemas using a replication factor of 1, which is less than the desired one of 3. If this is a production environment, it's crucial to add more brokers and increase the replication factor of the topic. (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-07 11:44:37,247] INFO Initialized last consumed offset to -1 (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-05-07 11:44:37,250] INFO [kafka-store-reader-thread-_schemas]: Starting (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-05-07 11:44:37,650] INFO Wait to catch up until the offset of the last message at 0 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-07 11:44:37,729] INFO Joining schema registry with Zookeeper-based coordination (io.confluent.kafka.schemaregistry.storage.KafkaSchemaRegistry)
[2018-05-07 11:44:37,802] INFO Created schema registry namespace localhost:2181/schema_registry (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-07 11:44:37,880] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-07 11:44:37,919] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-07 11:44:37,954] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-07 11:44:38,123] INFO Adding listener: http://0.0.0.0:8081 (io.confluent.rest.Application)
[2018-05-07 11:44:38,198] INFO jetty-9.2.22.v20170606 (org.eclipse.jetty.server.Server)
[2018-05-07 11:44:39,606] INFO HV000001: Hibernate Validator 5.1.3.Final (org.hibernate.validator.internal.util.Version)
[2018-05-07 11:44:39,943] INFO Started o.e.j.s.ServletContextHandler@5ef6ae06{/,null,AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler)
[2018-05-07 11:44:39,982] INFO Started NetworkTrafficServerConnector@3568f9d2{HTTP/1.1}{0.0.0.0:8081} (org.eclipse.jetty.server.NetworkTrafficServerConnector)
[2018-05-07 11:44:39,984] INFO Started @8752ms (org.eclipse.jetty.server.Server)
[2018-05-07 11:44:39,984] INFO Server started, listening for requests... (io.confluent.kafka.schemaregistry.rest.SchemaRegistryMain)
[2018-05-07 11:45:38,009] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-07 11:45:38,099] INFO 127.0.0.1 - - [07/May/2018:11:45:37 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  582 (io.confluent.rest-utils.requests)
[2018-05-07 11:45:38,533] INFO Wait to catch up until the offset of the last message at 2 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-07 11:45:38,567] INFO 127.0.0.1 - - [07/May/2018:11:45:38 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  47 (io.confluent.rest-utils.requests)
[2018-05-07 11:45:39,003] INFO Wait to catch up until the offset of the last message at 3 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-07 11:45:39,053] INFO 127.0.0.1 - - [07/May/2018:11:45:38 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  63 (io.confluent.rest-utils.requests)
[2018-05-07 11:45:46,981] INFO 127.0.0.1 - - [07/May/2018:11:45:46 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  16 (io.confluent.rest-utils.requests)
[2018-05-07 11:45:47,106] INFO 127.0.0.1 - - [07/May/2018:11:45:47 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  6 (io.confluent.rest-utils.requests)
[2018-05-07 11:45:47,116] INFO 127.0.0.1 - - [07/May/2018:11:45:47 +0530] "GET /schemas/ids/3 HTTP/1.1" 200 310  6 (io.confluent.rest-utils.requests)
[2018-05-07 11:45:47,127] INFO Wait to catch up until the offset of the last message at 4 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-07 11:45:47,146] INFO 127.0.0.1 - - [07/May/2018:11:45:47 +0530] "POST /subjects/booking-KSTREAM-AGGREGATE-STATE-STORE-0000000004-repartition-value/versions HTTP/1.1" 200 8  23 (io.confluent.rest-utils.requests)
[2018-05-07 11:46:44,244] INFO 127.0.0.1 - - [07/May/2018:11:46:44 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  9 (io.confluent.rest-utils.requests)
[2018-05-07 11:46:44,332] INFO 127.0.0.1 - - [07/May/2018:11:46:44 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  7 (io.confluent.rest-utils.requests)
[2018-05-07 11:46:44,350] INFO 127.0.0.1 - - [07/May/2018:11:46:44 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  5 (io.confluent.rest-utils.requests)
[2018-05-07 11:46:45,946] INFO 127.0.0.1 - - [07/May/2018:11:46:45 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  7 (io.confluent.rest-utils.requests)
[2018-05-07 11:46:45,987] INFO 127.0.0.1 - - [07/May/2018:11:46:45 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  13 (io.confluent.rest-utils.requests)
[2018-05-07 11:46:46,000] INFO 127.0.0.1 - - [07/May/2018:11:46:45 +0530] "GET /schemas/ids/3 HTTP/1.1" 200 310  10 (io.confluent.rest-utils.requests)
[2018-05-07 11:46:46,011] INFO 127.0.0.1 - - [07/May/2018:11:46:46 +0530] "POST /subjects/booking-KSTREAM-AGGREGATE-STATE-STORE-0000000004-repartition-value/versions HTTP/1.1" 200 8  8 (io.confluent.rest-utils.requests)
[2018-05-07 11:52:37,687] INFO 127.0.0.1 - - [07/May/2018:11:52:37 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  5 (io.confluent.rest-utils.requests)
[2018-05-07 11:52:37,767] INFO 127.0.0.1 - - [07/May/2018:11:52:37 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  5 (io.confluent.rest-utils.requests)
[2018-05-07 11:52:37,785] INFO 127.0.0.1 - - [07/May/2018:11:52:37 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  4 (io.confluent.rest-utils.requests)
[2018-05-07 11:52:39,840] INFO 127.0.0.1 - - [07/May/2018:11:52:39 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  5 (io.confluent.rest-utils.requests)
[2018-05-07 11:52:39,880] INFO 127.0.0.1 - - [07/May/2018:11:52:39 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  4 (io.confluent.rest-utils.requests)
[2018-05-07 11:52:39,889] INFO 127.0.0.1 - - [07/May/2018:11:52:39 +0530] "GET /schemas/ids/3 HTTP/1.1" 200 310  3 (io.confluent.rest-utils.requests)
[2018-05-07 11:52:39,901] INFO Wait to catch up until the offset of the last message at 5 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-07 11:52:39,928] INFO 127.0.0.1 - - [07/May/2018:11:52:39 +0530] "POST /subjects/booking-payment-stores-repartition-value/versions HTTP/1.1" 200 8  30 (io.confluent.rest-utils.requests)
[2018-05-07 11:52:40,114] INFO Wait to catch up until the offset of the last message at 6 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-07 11:52:40,137] INFO 127.0.0.1 - - [07/May/2018:11:52:40 +0530] "POST /subjects/booking-payment-stores-changelog-value/versions HTTP/1.1" 200 8  33 (io.confluent.rest-utils.requests)
[2018-05-07 11:54:01,193] INFO 127.0.0.1 - - [07/May/2018:11:54:01 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  9 (io.confluent.rest-utils.requests)
[2018-05-07 11:54:01,292] INFO 127.0.0.1 - - [07/May/2018:11:54:01 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  17 (io.confluent.rest-utils.requests)
[2018-05-07 11:54:01,310] INFO 127.0.0.1 - - [07/May/2018:11:54:01 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  6 (io.confluent.rest-utils.requests)
[2018-05-07 11:54:03,076] INFO 127.0.0.1 - - [07/May/2018:11:54:03 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  6 (io.confluent.rest-utils.requests)
[2018-05-07 11:54:03,122] INFO 127.0.0.1 - - [07/May/2018:11:54:03 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  7 (io.confluent.rest-utils.requests)
[2018-05-07 11:54:03,132] INFO 127.0.0.1 - - [07/May/2018:11:54:03 +0530] "GET /schemas/ids/3 HTTP/1.1" 200 310  8 (io.confluent.rest-utils.requests)
[2018-05-07 11:54:03,167] INFO 127.0.0.1 - - [07/May/2018:11:54:03 +0530] "POST /subjects/booking-payment-stores-repartition-value/versions HTTP/1.1" 200 8  23 (io.confluent.rest-utils.requests)
[2018-05-07 11:54:03,198] INFO 127.0.0.1 - - [07/May/2018:11:54:03 +0530] "POST /subjects/booking-payment-stores-changelog-value/versions HTTP/1.1" 200 8  9 (io.confluent.rest-utils.requests)
[2018-05-07 19:09:31,051] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-07 19:09:32,293] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-07 21:29:40,526] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-07 21:29:41,778] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-08 09:09:29,356] INFO SchemaRegistryConfig values: 
	metric.reporters = []
	kafkastore.sasl.kerberos.kinit.cmd = /usr/bin/kinit
	response.mediatype.default = application/vnd.schemaregistry.v1+json
	kafkastore.ssl.trustmanager.algorithm = PKIX
	authentication.realm = 
	ssl.keystore.type = JKS
	kafkastore.topic = _schemas
	metrics.jmx.prefix = kafka.schema.registry
	kafkastore.ssl.enabled.protocols = TLSv1.2,TLSv1.1,TLSv1
	kafkastore.topic.replication.factor = 3
	ssl.truststore.password = [hidden]
	kafkastore.timeout.ms = 500
	host.name = maya
	kafkastore.bootstrap.servers = []
	schema.registry.zk.namespace = schema_registry
	kafkastore.sasl.kerberos.ticket.renew.window.factor = 0.8
	kafkastore.sasl.kerberos.service.name = 
	schema.registry.resource.extension.class = 
	ssl.endpoint.identification.algorithm = 
	compression.enable = false
	kafkastore.ssl.truststore.type = JKS
	avro.compatibility.level = backward
	kafkastore.ssl.protocol = TLS
	kafkastore.ssl.provider = 
	kafkastore.ssl.truststore.location = 
	response.mediatype.preferred = [application/vnd.schemaregistry.v1+json, application/vnd.schemaregistry+json, application/json]
	kafkastore.ssl.keystore.type = JKS
	ssl.truststore.type = JKS
	kafkastore.ssl.truststore.password = [hidden]
	access.control.allow.origin = 
	ssl.truststore.location = 
	ssl.keystore.password = [hidden]
	port = 8081
	kafkastore.ssl.keystore.location = 
	master.eligibility = true
	ssl.client.auth = false
	kafkastore.ssl.keystore.password = [hidden]
	kafkastore.security.protocol = PLAINTEXT
	ssl.trustmanager.algorithm = 
	authentication.method = NONE
	request.logger.name = io.confluent.rest-utils.requests
	ssl.key.password = [hidden]
	kafkastore.zk.session.timeout.ms = 30000
	kafkastore.sasl.mechanism = GSSAPI
	kafkastore.sasl.kerberos.ticket.renew.jitter = 0.05
	kafkastore.ssl.key.password = [hidden]
	zookeeper.set.acl = false
	schema.registry.inter.instance.protocol = http
	authentication.roles = [*]
	metrics.num.samples = 2
	ssl.protocol = TLS
	schema.registry.group.id = schema-registry
	kafkastore.ssl.keymanager.algorithm = SunX509
	kafkastore.connection.url = localhost:2181
	debug = false
	listeners = [http://0.0.0.0:8081]
	kafkastore.group.id = 
	ssl.provider = 
	ssl.enabled.protocols = []
	shutdown.graceful.ms = 1000
	ssl.keystore.location = 
	ssl.cipher.suites = []
	kafkastore.ssl.endpoint.identification.algorithm = 
	kafkastore.ssl.cipher.suites = 
	access.control.allow.methods = 
	kafkastore.sasl.kerberos.min.time.before.relogin = 60000
	ssl.keymanager.algorithm = 
	metrics.sample.window.ms = 30000
	kafkastore.init.timeout.ms = 60000
 (io.confluent.kafka.schemaregistry.rest.SchemaRegistryConfig)
[2018-05-08 09:09:30,071] INFO Logging initialized @3104ms (org.eclipse.jetty.util.log)
[2018-05-08 09:09:31,798] INFO Initializing KafkaStore with broker endpoints: PLAINTEXT://maya:9092 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-08 09:09:32,324] INFO Creating schemas topic _schemas (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-08 09:09:32,332] WARN Creating the schema topic _schemas using a replication factor of 1, which is less than the desired one of 3. If this is a production environment, it's crucial to add more brokers and increase the replication factor of the topic. (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-08 09:09:33,603] INFO Initialized last consumed offset to -1 (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-05-08 09:09:33,605] INFO [kafka-store-reader-thread-_schemas]: Starting (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-05-08 09:09:34,075] INFO Wait to catch up until the offset of the last message at 0 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-08 09:09:34,199] INFO Joining schema registry with Zookeeper-based coordination (io.confluent.kafka.schemaregistry.storage.KafkaSchemaRegistry)
[2018-05-08 09:09:34,312] INFO Created schema registry namespace localhost:2181/schema_registry (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-08 09:09:34,483] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-08 09:09:34,540] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-08 09:09:34,582] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-08 09:09:34,890] INFO Adding listener: http://0.0.0.0:8081 (io.confluent.rest.Application)
[2018-05-08 09:09:34,979] INFO jetty-9.2.22.v20170606 (org.eclipse.jetty.server.Server)
[2018-05-08 09:09:36,455] INFO HV000001: Hibernate Validator 5.1.3.Final (org.hibernate.validator.internal.util.Version)
[2018-05-08 09:09:36,804] INFO Started o.e.j.s.ServletContextHandler@5ef6ae06{/,null,AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler)
[2018-05-08 09:09:36,849] INFO Started NetworkTrafficServerConnector@3568f9d2{HTTP/1.1}{0.0.0.0:8081} (org.eclipse.jetty.server.NetworkTrafficServerConnector)
[2018-05-08 09:09:36,851] INFO Started @9887ms (org.eclipse.jetty.server.Server)
[2018-05-08 09:09:36,852] INFO Server started, listening for requests... (io.confluent.kafka.schemaregistry.rest.SchemaRegistryMain)
[2018-05-08 09:13:00,740] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-08 09:13:00,833] INFO 127.0.0.1 - - [08/May/2018:09:13:00 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  658 (io.confluent.rest-utils.requests)
[2018-05-08 09:13:01,383] INFO Wait to catch up until the offset of the last message at 2 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-08 09:13:01,425] INFO 127.0.0.1 - - [08/May/2018:09:13:01 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  52 (io.confluent.rest-utils.requests)
[2018-05-08 09:13:01,821] INFO Wait to catch up until the offset of the last message at 3 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-08 09:13:01,840] INFO 127.0.0.1 - - [08/May/2018:09:13:01 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  22 (io.confluent.rest-utils.requests)
[2018-05-08 09:13:10,269] INFO 127.0.0.1 - - [08/May/2018:09:13:10 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  28 (io.confluent.rest-utils.requests)
[2018-05-08 09:13:10,348] INFO 127.0.0.1 - - [08/May/2018:09:13:10 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  5 (io.confluent.rest-utils.requests)
[2018-05-08 09:13:10,354] INFO 127.0.0.1 - - [08/May/2018:09:13:10 +0530] "GET /schemas/ids/3 HTTP/1.1" 200 310  4 (io.confluent.rest-utils.requests)
[2018-05-08 09:13:10,366] INFO Wait to catch up until the offset of the last message at 4 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-08 09:13:10,386] INFO 127.0.0.1 - - [08/May/2018:09:13:10 +0530] "POST /subjects/booking-payment-stores-repartition-value/versions HTTP/1.1" 200 8  25 (io.confluent.rest-utils.requests)
[2018-05-08 09:14:38,025] INFO 127.0.0.1 - - [08/May/2018:09:14:38 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  10 (io.confluent.rest-utils.requests)
[2018-05-08 09:14:38,127] INFO 127.0.0.1 - - [08/May/2018:09:14:38 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  15 (io.confluent.rest-utils.requests)
[2018-05-08 09:14:38,150] INFO 127.0.0.1 - - [08/May/2018:09:14:38 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  8 (io.confluent.rest-utils.requests)
[2018-05-08 09:14:40,139] INFO 127.0.0.1 - - [08/May/2018:09:14:40 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  5 (io.confluent.rest-utils.requests)
[2018-05-08 09:14:40,196] INFO 127.0.0.1 - - [08/May/2018:09:14:40 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  12 (io.confluent.rest-utils.requests)
[2018-05-08 09:14:40,221] INFO 127.0.0.1 - - [08/May/2018:09:14:40 +0530] "GET /schemas/ids/3 HTTP/1.1" 200 310  23 (io.confluent.rest-utils.requests)
[2018-05-08 09:14:40,245] INFO 127.0.0.1 - - [08/May/2018:09:14:40 +0530] "POST /subjects/booking-payment-stores-repartition-value/versions HTTP/1.1" 200 8  13 (io.confluent.rest-utils.requests)
[2018-05-08 09:18:57,568] INFO 127.0.0.1 - - [08/May/2018:09:18:57 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  7 (io.confluent.rest-utils.requests)
[2018-05-08 09:18:57,674] INFO 127.0.0.1 - - [08/May/2018:09:18:57 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  9 (io.confluent.rest-utils.requests)
[2018-05-08 09:18:57,704] INFO 127.0.0.1 - - [08/May/2018:09:18:57 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  7 (io.confluent.rest-utils.requests)
[2018-05-08 09:18:59,461] INFO 127.0.0.1 - - [08/May/2018:09:18:59 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  9 (io.confluent.rest-utils.requests)
[2018-05-08 09:18:59,506] INFO 127.0.0.1 - - [08/May/2018:09:18:59 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  7 (io.confluent.rest-utils.requests)
[2018-05-08 09:18:59,511] INFO 127.0.0.1 - - [08/May/2018:09:18:59 +0530] "GET /schemas/ids/3 HTTP/1.1" 200 310  3 (io.confluent.rest-utils.requests)
[2018-05-08 09:18:59,527] INFO 127.0.0.1 - - [08/May/2018:09:18:59 +0530] "POST /subjects/booking-payment-stores-repartition-value/versions HTTP/1.1" 200 8  7 (io.confluent.rest-utils.requests)
[2018-05-08 09:30:49,302] INFO 127.0.0.1 - - [08/May/2018:09:30:49 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  6 (io.confluent.rest-utils.requests)
[2018-05-08 09:30:49,389] INFO 127.0.0.1 - - [08/May/2018:09:30:49 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  10 (io.confluent.rest-utils.requests)
[2018-05-08 09:30:49,409] INFO 127.0.0.1 - - [08/May/2018:09:30:49 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  6 (io.confluent.rest-utils.requests)
[2018-05-08 09:30:51,590] INFO 127.0.0.1 - - [08/May/2018:09:30:51 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  8 (io.confluent.rest-utils.requests)
[2018-05-08 09:30:51,642] INFO 127.0.0.1 - - [08/May/2018:09:30:51 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  3 (io.confluent.rest-utils.requests)
[2018-05-08 09:30:51,649] INFO 127.0.0.1 - - [08/May/2018:09:30:51 +0530] "GET /schemas/ids/3 HTTP/1.1" 200 310  3 (io.confluent.rest-utils.requests)
[2018-05-08 09:30:51,672] INFO Wait to catch up until the offset of the last message at 5 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-08 09:30:51,715] INFO 127.0.0.1 - - [08/May/2018:09:30:51 +0530] "POST /subjects/booking-KSTREAM-AGGREGATE-STATE-STORE-0000000004-repartition-value/versions HTTP/1.1" 200 8  53 (io.confluent.rest-utils.requests)
[2018-05-08 09:41:14,630] INFO 127.0.0.1 - - [08/May/2018:09:41:14 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  11 (io.confluent.rest-utils.requests)
[2018-05-08 09:41:14,708] INFO 127.0.0.1 - - [08/May/2018:09:41:14 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  6 (io.confluent.rest-utils.requests)
[2018-05-08 09:41:14,731] INFO 127.0.0.1 - - [08/May/2018:09:41:14 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  4 (io.confluent.rest-utils.requests)
[2018-05-08 09:41:16,154] INFO 127.0.0.1 - - [08/May/2018:09:41:16 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  14 (io.confluent.rest-utils.requests)
[2018-05-08 09:41:16,195] INFO 127.0.0.1 - - [08/May/2018:09:41:16 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  6 (io.confluent.rest-utils.requests)
[2018-05-08 09:41:16,206] INFO 127.0.0.1 - - [08/May/2018:09:41:16 +0530] "GET /schemas/ids/3 HTTP/1.1" 200 310  6 (io.confluent.rest-utils.requests)
[2018-05-08 09:41:16,220] INFO 127.0.0.1 - - [08/May/2018:09:41:16 +0530] "POST /subjects/booking-KSTREAM-AGGREGATE-STATE-STORE-0000000004-repartition-value/versions HTTP/1.1" 200 8  5 (io.confluent.rest-utils.requests)
[2018-05-08 09:45:06,243] INFO 127.0.0.1 - - [08/May/2018:09:45:06 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  6 (io.confluent.rest-utils.requests)
[2018-05-08 09:45:06,340] INFO 127.0.0.1 - - [08/May/2018:09:45:06 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  23 (io.confluent.rest-utils.requests)
[2018-05-08 09:45:06,359] INFO 127.0.0.1 - - [08/May/2018:09:45:06 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  11 (io.confluent.rest-utils.requests)
[2018-05-08 09:45:11,051] INFO 127.0.0.1 - - [08/May/2018:09:45:11 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  9 (io.confluent.rest-utils.requests)
[2018-05-08 09:45:11,099] INFO 127.0.0.1 - - [08/May/2018:09:45:11 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  6 (io.confluent.rest-utils.requests)
[2018-05-08 09:45:11,109] INFO 127.0.0.1 - - [08/May/2018:09:45:11 +0530] "GET /schemas/ids/3 HTTP/1.1" 200 310  4 (io.confluent.rest-utils.requests)
[2018-05-08 09:45:11,124] INFO 127.0.0.1 - - [08/May/2018:09:45:11 +0530] "POST /subjects/booking-KSTREAM-AGGREGATE-STATE-STORE-0000000004-repartition-value/versions HTTP/1.1" 200 8  7 (io.confluent.rest-utils.requests)
[2018-05-08 09:45:11,149] INFO Wait to catch up until the offset of the last message at 6 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-08 09:45:11,185] INFO 127.0.0.1 - - [08/May/2018:09:45:11 +0530] "POST /subjects/booking-KSTREAM-AGGREGATE-STATE-STORE-0000000004-changelog-value/versions HTTP/1.1" 200 8  39 (io.confluent.rest-utils.requests)
[2018-05-08 09:46:39,583] INFO 127.0.0.1 - - [08/May/2018:09:46:39 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  7 (io.confluent.rest-utils.requests)
[2018-05-08 09:46:39,685] INFO 127.0.0.1 - - [08/May/2018:09:46:39 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  19 (io.confluent.rest-utils.requests)
[2018-05-08 09:46:39,708] INFO 127.0.0.1 - - [08/May/2018:09:46:39 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  8 (io.confluent.rest-utils.requests)
[2018-05-08 09:46:41,524] INFO 127.0.0.1 - - [08/May/2018:09:46:41 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  4 (io.confluent.rest-utils.requests)
[2018-05-08 09:46:41,567] INFO 127.0.0.1 - - [08/May/2018:09:46:41 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  3 (io.confluent.rest-utils.requests)
[2018-05-08 09:46:41,573] INFO 127.0.0.1 - - [08/May/2018:09:46:41 +0530] "GET /schemas/ids/3 HTTP/1.1" 200 310  4 (io.confluent.rest-utils.requests)
[2018-05-08 09:46:41,588] INFO 127.0.0.1 - - [08/May/2018:09:46:41 +0530] "POST /subjects/booking-KSTREAM-AGGREGATE-STATE-STORE-0000000004-repartition-value/versions HTTP/1.1" 200 8  7 (io.confluent.rest-utils.requests)
[2018-05-08 09:46:41,711] INFO 127.0.0.1 - - [08/May/2018:09:46:41 +0530] "POST /subjects/booking-KSTREAM-AGGREGATE-STATE-STORE-0000000004-changelog-value/versions HTTP/1.1" 200 8  7 (io.confluent.rest-utils.requests)
[2018-05-15 10:05:54,858] INFO SchemaRegistryConfig values: 
	metric.reporters = []
	kafkastore.sasl.kerberos.kinit.cmd = /usr/bin/kinit
	response.mediatype.default = application/vnd.schemaregistry.v1+json
	kafkastore.ssl.trustmanager.algorithm = PKIX
	authentication.realm = 
	ssl.keystore.type = JKS
	kafkastore.topic = _schemas
	metrics.jmx.prefix = kafka.schema.registry
	kafkastore.ssl.enabled.protocols = TLSv1.2,TLSv1.1,TLSv1
	kafkastore.topic.replication.factor = 3
	ssl.truststore.password = [hidden]
	kafkastore.timeout.ms = 500
	host.name = maya
	kafkastore.bootstrap.servers = []
	schema.registry.zk.namespace = schema_registry
	kafkastore.sasl.kerberos.ticket.renew.window.factor = 0.8
	kafkastore.sasl.kerberos.service.name = 
	schema.registry.resource.extension.class = 
	ssl.endpoint.identification.algorithm = 
	compression.enable = false
	kafkastore.ssl.truststore.type = JKS
	avro.compatibility.level = backward
	kafkastore.ssl.protocol = TLS
	kafkastore.ssl.provider = 
	kafkastore.ssl.truststore.location = 
	response.mediatype.preferred = [application/vnd.schemaregistry.v1+json, application/vnd.schemaregistry+json, application/json]
	kafkastore.ssl.keystore.type = JKS
	ssl.truststore.type = JKS
	kafkastore.ssl.truststore.password = [hidden]
	access.control.allow.origin = 
	ssl.truststore.location = 
	ssl.keystore.password = [hidden]
	port = 8081
	kafkastore.ssl.keystore.location = 
	master.eligibility = true
	ssl.client.auth = false
	kafkastore.ssl.keystore.password = [hidden]
	kafkastore.security.protocol = PLAINTEXT
	ssl.trustmanager.algorithm = 
	authentication.method = NONE
	request.logger.name = io.confluent.rest-utils.requests
	ssl.key.password = [hidden]
	kafkastore.zk.session.timeout.ms = 30000
	kafkastore.sasl.mechanism = GSSAPI
	kafkastore.sasl.kerberos.ticket.renew.jitter = 0.05
	kafkastore.ssl.key.password = [hidden]
	zookeeper.set.acl = false
	schema.registry.inter.instance.protocol = http
	authentication.roles = [*]
	metrics.num.samples = 2
	ssl.protocol = TLS
	schema.registry.group.id = schema-registry
	kafkastore.ssl.keymanager.algorithm = SunX509
	kafkastore.connection.url = localhost:2181
	debug = false
	listeners = [http://0.0.0.0:8081]
	kafkastore.group.id = 
	ssl.provider = 
	ssl.enabled.protocols = []
	shutdown.graceful.ms = 1000
	ssl.keystore.location = 
	ssl.cipher.suites = []
	kafkastore.ssl.endpoint.identification.algorithm = 
	kafkastore.ssl.cipher.suites = 
	access.control.allow.methods = 
	kafkastore.sasl.kerberos.min.time.before.relogin = 60000
	ssl.keymanager.algorithm = 
	metrics.sample.window.ms = 30000
	kafkastore.init.timeout.ms = 60000
 (io.confluent.kafka.schemaregistry.rest.SchemaRegistryConfig)
[2018-05-15 10:05:55,201] INFO Logging initialized @912ms (org.eclipse.jetty.util.log)
[2018-05-15 10:05:56,680] INFO Initializing KafkaStore with broker endpoints: PLAINTEXT://maya:9092 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-15 10:05:57,141] INFO Creating schemas topic _schemas (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-15 10:05:57,146] WARN Creating the schema topic _schemas using a replication factor of 1, which is less than the desired one of 3. If this is a production environment, it's crucial to add more brokers and increase the replication factor of the topic. (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-15 10:05:58,154] INFO Initialized last consumed offset to -1 (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-05-15 10:05:58,160] INFO [kafka-store-reader-thread-_schemas]: Starting (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-05-15 10:05:58,773] INFO Wait to catch up until the offset of the last message at 0 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-15 10:05:58,958] INFO Joining schema registry with Zookeeper-based coordination (io.confluent.kafka.schemaregistry.storage.KafkaSchemaRegistry)
[2018-05-15 10:05:59,086] INFO Created schema registry namespace localhost:2181/schema_registry (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-15 10:05:59,276] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-15 10:05:59,334] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-15 10:05:59,367] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-15 10:05:59,758] INFO Adding listener: http://0.0.0.0:8081 (io.confluent.rest.Application)
[2018-05-15 10:05:59,883] INFO jetty-9.2.22.v20170606 (org.eclipse.jetty.server.Server)
[2018-05-15 10:06:01,649] INFO HV000001: Hibernate Validator 5.1.3.Final (org.hibernate.validator.internal.util.Version)
[2018-05-15 10:06:01,992] INFO Started o.e.j.s.ServletContextHandler@5ef6ae06{/,null,AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler)
[2018-05-15 10:06:02,030] INFO Started NetworkTrafficServerConnector@3568f9d2{HTTP/1.1}{0.0.0.0:8081} (org.eclipse.jetty.server.NetworkTrafficServerConnector)
[2018-05-15 10:06:02,032] INFO Started @7745ms (org.eclipse.jetty.server.Server)
[2018-05-15 10:06:02,032] INFO Server started, listening for requests... (io.confluent.kafka.schemaregistry.rest.SchemaRegistryMain)
[2018-05-15 10:08:08,636] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-15 10:08:08,726] INFO 127.0.0.1 - - [15/May/2018:10:08:07 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  885 (io.confluent.rest-utils.requests)
[2018-05-15 10:08:09,353] INFO Wait to catch up until the offset of the last message at 2 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-15 10:08:09,378] INFO 127.0.0.1 - - [15/May/2018:10:08:09 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  32 (io.confluent.rest-utils.requests)
[2018-05-15 10:08:09,805] INFO Wait to catch up until the offset of the last message at 3 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-15 10:08:09,839] INFO 127.0.0.1 - - [15/May/2018:10:08:09 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  41 (io.confluent.rest-utils.requests)
[2018-05-15 10:08:18,153] INFO 127.0.0.1 - - [15/May/2018:10:08:18 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  23 (io.confluent.rest-utils.requests)
[2018-05-15 10:08:18,213] INFO 127.0.0.1 - - [15/May/2018:10:08:18 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  12 (io.confluent.rest-utils.requests)
[2018-05-15 10:08:18,219] INFO 127.0.0.1 - - [15/May/2018:10:08:18 +0530] "GET /schemas/ids/3 HTTP/1.1" 200 310  4 (io.confluent.rest-utils.requests)
[2018-05-15 10:08:18,226] INFO Wait to catch up until the offset of the last message at 4 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-15 10:08:18,239] INFO 127.0.0.1 - - [15/May/2018:10:08:18 +0530] "POST /subjects/booking-KSTREAM-AGGREGATE-STATE-STORE-0000000005-repartition-value/versions HTTP/1.1" 200 8  16 (io.confluent.rest-utils.requests)
[2018-05-15 10:23:33,731] INFO 127.0.0.1 - - [15/May/2018:10:23:33 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  13 (io.confluent.rest-utils.requests)
[2018-05-15 10:23:33,848] INFO 127.0.0.1 - - [15/May/2018:10:23:33 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  9 (io.confluent.rest-utils.requests)
[2018-05-15 10:23:33,903] INFO 127.0.0.1 - - [15/May/2018:10:23:33 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  36 (io.confluent.rest-utils.requests)
[2018-05-15 10:23:35,240] INFO 127.0.0.1 - - [15/May/2018:10:23:35 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  4 (io.confluent.rest-utils.requests)
[2018-05-15 10:23:35,261] INFO 127.0.0.1 - - [15/May/2018:10:23:35 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  2 (io.confluent.rest-utils.requests)
[2018-05-15 10:23:35,266] INFO 127.0.0.1 - - [15/May/2018:10:23:35 +0530] "GET /schemas/ids/3 HTTP/1.1" 200 310  3 (io.confluent.rest-utils.requests)
[2018-05-15 10:24:29,380] INFO 127.0.0.1 - - [15/May/2018:10:24:29 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  7 (io.confluent.rest-utils.requests)
[2018-05-15 10:24:29,479] INFO 127.0.0.1 - - [15/May/2018:10:24:29 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  8 (io.confluent.rest-utils.requests)
[2018-05-15 10:24:29,500] INFO 127.0.0.1 - - [15/May/2018:10:24:29 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  5 (io.confluent.rest-utils.requests)
[2018-05-15 10:24:31,155] INFO 127.0.0.1 - - [15/May/2018:10:24:31 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  13 (io.confluent.rest-utils.requests)
[2018-05-15 10:24:31,195] INFO 127.0.0.1 - - [15/May/2018:10:24:31 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  4 (io.confluent.rest-utils.requests)
[2018-05-15 10:24:31,201] INFO 127.0.0.1 - - [15/May/2018:10:24:31 +0530] "GET /schemas/ids/3 HTTP/1.1" 200 310  4 (io.confluent.rest-utils.requests)
[2018-05-15 10:24:31,208] INFO 127.0.0.1 - - [15/May/2018:10:24:31 +0530] "POST /subjects/booking-KSTREAM-AGGREGATE-STATE-STORE-0000000005-repartition-value/versions HTTP/1.1" 200 8  4 (io.confluent.rest-utils.requests)
[2018-05-15 10:28:49,793] INFO 127.0.0.1 - - [15/May/2018:10:28:49 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  9 (io.confluent.rest-utils.requests)
[2018-05-15 10:28:49,906] INFO 127.0.0.1 - - [15/May/2018:10:28:49 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  11 (io.confluent.rest-utils.requests)
[2018-05-15 10:28:49,931] INFO 127.0.0.1 - - [15/May/2018:10:28:49 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  8 (io.confluent.rest-utils.requests)
[2018-05-15 10:28:51,517] INFO 127.0.0.1 - - [15/May/2018:10:28:51 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  7 (io.confluent.rest-utils.requests)
[2018-05-15 10:28:51,561] INFO 127.0.0.1 - - [15/May/2018:10:28:51 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  6 (io.confluent.rest-utils.requests)
[2018-05-15 10:28:51,565] INFO 127.0.0.1 - - [15/May/2018:10:28:51 +0530] "GET /schemas/ids/3 HTTP/1.1" 200 310  4 (io.confluent.rest-utils.requests)
[2018-05-15 10:28:51,576] INFO 127.0.0.1 - - [15/May/2018:10:28:51 +0530] "POST /subjects/booking-KSTREAM-AGGREGATE-STATE-STORE-0000000005-repartition-value/versions HTTP/1.1" 200 8  5 (io.confluent.rest-utils.requests)
[2018-05-15 10:28:51,606] INFO Wait to catch up until the offset of the last message at 5 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-15 10:28:51,629] INFO 127.0.0.1 - - [15/May/2018:10:28:51 +0530] "POST /subjects/booking-KSTREAM-AGGREGATE-STATE-STORE-0000000005-changelog-value/versions HTTP/1.1" 200 8  32 (io.confluent.rest-utils.requests)
[2018-05-15 10:57:07,259] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-15 10:57:07,632] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-15 12:18:56,956] INFO Wait to catch up until the offset of the last message at 6 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-15 12:18:58,581] INFO 127.0.0.1 - - [15/May/2018:12:18:54 +0530] "POST /subjects/PARAMED-value/versions HTTP/1.1" 200 8  3919 (io.confluent.rest-utils.requests)
[2018-05-15 12:19:18,889] INFO 127.0.0.1 - - [15/May/2018:12:19:18 +0530] "POST /subjects/PARAMED-value/versions HTTP/1.1" 200 8  35 (io.confluent.rest-utils.requests)
[2018-05-15 12:30:17,680] INFO 127.0.0.1 - - [15/May/2018:12:30:17 +0530] "POST /subjects/PARAMED-value/versions HTTP/1.1" 200 8  640 (io.confluent.rest-utils.requests)
[2018-05-15 12:30:43,801] INFO 127.0.0.1 - - [15/May/2018:12:30:43 +0530] "POST /subjects/PARAMED-value/versions HTTP/1.1" 200 8  39 (io.confluent.rest-utils.requests)
[2018-05-15 12:32:07,680] INFO 127.0.0.1 - - [15/May/2018:12:32:07 +0530] "POST /subjects/PARAMED-value/versions HTTP/1.1" 200 8  71 (io.confluent.rest-utils.requests)
[2018-05-15 12:35:29,585] INFO SchemaRegistryConfig values: 
	metric.reporters = []
	kafkastore.sasl.kerberos.kinit.cmd = /usr/bin/kinit
	response.mediatype.default = application/vnd.schemaregistry.v1+json
	kafkastore.ssl.trustmanager.algorithm = PKIX
	authentication.realm = 
	ssl.keystore.type = JKS
	kafkastore.topic = _schemas
	metrics.jmx.prefix = kafka.schema.registry
	kafkastore.ssl.enabled.protocols = TLSv1.2,TLSv1.1,TLSv1
	kafkastore.topic.replication.factor = 3
	ssl.truststore.password = [hidden]
	kafkastore.timeout.ms = 500
	host.name = maya
	kafkastore.bootstrap.servers = []
	schema.registry.zk.namespace = schema_registry
	kafkastore.sasl.kerberos.ticket.renew.window.factor = 0.8
	kafkastore.sasl.kerberos.service.name = 
	schema.registry.resource.extension.class = 
	ssl.endpoint.identification.algorithm = 
	compression.enable = false
	kafkastore.ssl.truststore.type = JKS
	avro.compatibility.level = backward
	kafkastore.ssl.protocol = TLS
	kafkastore.ssl.provider = 
	kafkastore.ssl.truststore.location = 
	response.mediatype.preferred = [application/vnd.schemaregistry.v1+json, application/vnd.schemaregistry+json, application/json]
	kafkastore.ssl.keystore.type = JKS
	ssl.truststore.type = JKS
	kafkastore.ssl.truststore.password = [hidden]
	access.control.allow.origin = 
	ssl.truststore.location = 
	ssl.keystore.password = [hidden]
	port = 8081
	kafkastore.ssl.keystore.location = 
	master.eligibility = true
	ssl.client.auth = false
	kafkastore.ssl.keystore.password = [hidden]
	kafkastore.security.protocol = PLAINTEXT
	ssl.trustmanager.algorithm = 
	authentication.method = NONE
	request.logger.name = io.confluent.rest-utils.requests
	ssl.key.password = [hidden]
	kafkastore.zk.session.timeout.ms = 30000
	kafkastore.sasl.mechanism = GSSAPI
	kafkastore.sasl.kerberos.ticket.renew.jitter = 0.05
	kafkastore.ssl.key.password = [hidden]
	zookeeper.set.acl = false
	schema.registry.inter.instance.protocol = http
	authentication.roles = [*]
	metrics.num.samples = 2
	ssl.protocol = TLS
	schema.registry.group.id = schema-registry
	kafkastore.ssl.keymanager.algorithm = SunX509
	kafkastore.connection.url = localhost:2181
	debug = false
	listeners = [http://0.0.0.0:8081]
	kafkastore.group.id = 
	ssl.provider = 
	ssl.enabled.protocols = []
	shutdown.graceful.ms = 1000
	ssl.keystore.location = 
	ssl.cipher.suites = []
	kafkastore.ssl.endpoint.identification.algorithm = 
	kafkastore.ssl.cipher.suites = 
	access.control.allow.methods = 
	kafkastore.sasl.kerberos.min.time.before.relogin = 60000
	ssl.keymanager.algorithm = 
	metrics.sample.window.ms = 30000
	kafkastore.init.timeout.ms = 60000
 (io.confluent.kafka.schemaregistry.rest.SchemaRegistryConfig)
[2018-05-15 12:35:30,214] INFO Logging initialized @2960ms (org.eclipse.jetty.util.log)
[2018-05-15 12:35:31,768] INFO Initializing KafkaStore with broker endpoints: PLAINTEXT://maya:9092 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-15 12:35:32,209] INFO Creating schemas topic _schemas (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-15 12:35:32,212] WARN Creating the schema topic _schemas using a replication factor of 1, which is less than the desired one of 3. If this is a production environment, it's crucial to add more brokers and increase the replication factor of the topic. (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-15 12:35:33,216] INFO Initialized last consumed offset to -1 (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-05-15 12:35:33,219] INFO [kafka-store-reader-thread-_schemas]: Starting (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-05-15 12:35:33,688] INFO Wait to catch up until the offset of the last message at 0 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-15 12:35:33,772] INFO Joining schema registry with Zookeeper-based coordination (io.confluent.kafka.schemaregistry.storage.KafkaSchemaRegistry)
[2018-05-15 12:35:33,859] INFO Created schema registry namespace localhost:2181/schema_registry (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-15 12:35:34,007] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-15 12:35:34,056] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-15 12:35:34,080] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-15 12:35:34,288] INFO Adding listener: http://0.0.0.0:8081 (io.confluent.rest.Application)
[2018-05-15 12:35:34,364] INFO jetty-9.2.22.v20170606 (org.eclipse.jetty.server.Server)
[2018-05-15 12:35:35,514] INFO HV000001: Hibernate Validator 5.1.3.Final (org.hibernate.validator.internal.util.Version)
[2018-05-15 12:35:35,819] INFO Started o.e.j.s.ServletContextHandler@5ef6ae06{/,null,AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler)
[2018-05-15 12:35:35,839] INFO Started NetworkTrafficServerConnector@3568f9d2{HTTP/1.1}{0.0.0.0:8081} (org.eclipse.jetty.server.NetworkTrafficServerConnector)
[2018-05-15 12:35:35,841] INFO Started @8589ms (org.eclipse.jetty.server.Server)
[2018-05-15 12:35:35,841] INFO Server started, listening for requests... (io.confluent.kafka.schemaregistry.rest.SchemaRegistryMain)
[2018-05-15 12:36:41,268] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-15 12:36:41,368] INFO 127.0.0.1 - - [15/May/2018:12:36:40 +0530] "POST /subjects/PARAMED-value/versions HTTP/1.1" 200 8  542 (io.confluent.rest-utils.requests)
[2018-05-15 12:42:35,105] INFO Wait to catch up until the offset of the last message at 2 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-15 12:42:35,214] INFO 127.0.0.1 - - [15/May/2018:12:42:35 +0530] "POST /subjects/PARAMED-value/versions HTTP/1.1" 409 93  115 (io.confluent.rest-utils.requests)
[2018-05-15 12:43:58,721] INFO SchemaRegistryConfig values: 
	metric.reporters = []
	kafkastore.sasl.kerberos.kinit.cmd = /usr/bin/kinit
	response.mediatype.default = application/vnd.schemaregistry.v1+json
	kafkastore.ssl.trustmanager.algorithm = PKIX
	authentication.realm = 
	ssl.keystore.type = JKS
	kafkastore.topic = _schemas
	metrics.jmx.prefix = kafka.schema.registry
	kafkastore.ssl.enabled.protocols = TLSv1.2,TLSv1.1,TLSv1
	kafkastore.topic.replication.factor = 3
	ssl.truststore.password = [hidden]
	kafkastore.timeout.ms = 500
	host.name = maya
	kafkastore.bootstrap.servers = []
	schema.registry.zk.namespace = schema_registry
	kafkastore.sasl.kerberos.ticket.renew.window.factor = 0.8
	kafkastore.sasl.kerberos.service.name = 
	schema.registry.resource.extension.class = 
	ssl.endpoint.identification.algorithm = 
	compression.enable = false
	kafkastore.ssl.truststore.type = JKS
	avro.compatibility.level = backward
	kafkastore.ssl.protocol = TLS
	kafkastore.ssl.provider = 
	kafkastore.ssl.truststore.location = 
	response.mediatype.preferred = [application/vnd.schemaregistry.v1+json, application/vnd.schemaregistry+json, application/json]
	kafkastore.ssl.keystore.type = JKS
	ssl.truststore.type = JKS
	kafkastore.ssl.truststore.password = [hidden]
	access.control.allow.origin = 
	ssl.truststore.location = 
	ssl.keystore.password = [hidden]
	port = 8081
	kafkastore.ssl.keystore.location = 
	master.eligibility = true
	ssl.client.auth = false
	kafkastore.ssl.keystore.password = [hidden]
	kafkastore.security.protocol = PLAINTEXT
	ssl.trustmanager.algorithm = 
	authentication.method = NONE
	request.logger.name = io.confluent.rest-utils.requests
	ssl.key.password = [hidden]
	kafkastore.zk.session.timeout.ms = 30000
	kafkastore.sasl.mechanism = GSSAPI
	kafkastore.sasl.kerberos.ticket.renew.jitter = 0.05
	kafkastore.ssl.key.password = [hidden]
	zookeeper.set.acl = false
	schema.registry.inter.instance.protocol = http
	authentication.roles = [*]
	metrics.num.samples = 2
	ssl.protocol = TLS
	schema.registry.group.id = schema-registry
	kafkastore.ssl.keymanager.algorithm = SunX509
	kafkastore.connection.url = localhost:2181
	debug = false
	listeners = [http://0.0.0.0:8081]
	kafkastore.group.id = 
	ssl.provider = 
	ssl.enabled.protocols = []
	shutdown.graceful.ms = 1000
	ssl.keystore.location = 
	ssl.cipher.suites = []
	kafkastore.ssl.endpoint.identification.algorithm = 
	kafkastore.ssl.cipher.suites = 
	access.control.allow.methods = 
	kafkastore.sasl.kerberos.min.time.before.relogin = 60000
	ssl.keymanager.algorithm = 
	metrics.sample.window.ms = 30000
	kafkastore.init.timeout.ms = 60000
 (io.confluent.kafka.schemaregistry.rest.SchemaRegistryConfig)
[2018-05-15 12:43:59,019] INFO Logging initialized @1036ms (org.eclipse.jetty.util.log)
[2018-05-15 12:44:00,172] INFO Initializing KafkaStore with broker endpoints: PLAINTEXT://maya:9092 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-15 12:44:00,516] INFO Creating schemas topic _schemas (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-15 12:44:00,519] WARN Creating the schema topic _schemas using a replication factor of 1, which is less than the desired one of 3. If this is a production environment, it's crucial to add more brokers and increase the replication factor of the topic. (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-15 12:44:01,352] INFO Initialized last consumed offset to -1 (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-05-15 12:44:01,354] INFO [kafka-store-reader-thread-_schemas]: Starting (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-05-15 12:44:01,776] INFO Wait to catch up until the offset of the last message at 0 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-15 12:44:01,838] INFO Joining schema registry with Zookeeper-based coordination (io.confluent.kafka.schemaregistry.storage.KafkaSchemaRegistry)
[2018-05-15 12:44:01,911] INFO Created schema registry namespace localhost:2181/schema_registry (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-15 12:44:02,006] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-15 12:44:02,050] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-15 12:44:02,055] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-15 12:44:02,143] INFO Adding listener: http://0.0.0.0:8081 (io.confluent.rest.Application)
[2018-05-15 12:44:02,228] INFO jetty-9.2.22.v20170606 (org.eclipse.jetty.server.Server)
[2018-05-15 12:44:03,134] INFO HV000001: Hibernate Validator 5.1.3.Final (org.hibernate.validator.internal.util.Version)
[2018-05-15 12:44:03,309] INFO Started o.e.j.s.ServletContextHandler@5ef6ae06{/,null,AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler)
[2018-05-15 12:44:03,325] INFO Started NetworkTrafficServerConnector@3568f9d2{HTTP/1.1}{0.0.0.0:8081} (org.eclipse.jetty.server.NetworkTrafficServerConnector)
[2018-05-15 12:44:03,326] INFO Started @5345ms (org.eclipse.jetty.server.Server)
[2018-05-15 12:44:03,326] INFO Server started, listening for requests... (io.confluent.kafka.schemaregistry.rest.SchemaRegistryMain)
[2018-05-15 12:44:38,489] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-15 12:44:38,535] INFO 127.0.0.1 - - [15/May/2018:12:44:38 +0530] "POST /subjects/PARAMED-value/versions HTTP/1.1" 200 8  334 (io.confluent.rest-utils.requests)
[2018-05-15 12:48:57,446] INFO 127.0.0.1 - - [15/May/2018:12:48:57 +0530] "POST /subjects/PARAMED-value/versions HTTP/1.1" 200 8  10 (io.confluent.rest-utils.requests)
[2018-05-15 12:49:10,749] INFO 127.0.0.1 - - [15/May/2018:12:49:10 +0530] "POST /subjects/PARAMED-value/versions HTTP/1.1" 200 8  7 (io.confluent.rest-utils.requests)
[2018-05-15 12:49:13,819] INFO 127.0.0.1 - - [15/May/2018:12:49:13 +0530] "POST /subjects/PARAMED-value/versions HTTP/1.1" 200 8  9 (io.confluent.rest-utils.requests)
[2018-05-15 12:49:15,413] INFO 127.0.0.1 - - [15/May/2018:12:49:15 +0530] "POST /subjects/PARAMED-value/versions HTTP/1.1" 200 8  10 (io.confluent.rest-utils.requests)
[2018-05-15 12:49:16,473] INFO 127.0.0.1 - - [15/May/2018:12:49:16 +0530] "POST /subjects/PARAMED-value/versions HTTP/1.1" 200 8  9 (io.confluent.rest-utils.requests)
[2018-05-15 12:49:56,249] INFO 127.0.0.1 - - [15/May/2018:12:49:56 +0530] "POST /subjects/PARAMED-value/versions HTTP/1.1" 200 8  9 (io.confluent.rest-utils.requests)
[2018-05-15 12:53:24,577] INFO 127.0.0.1 - - [15/May/2018:12:53:24 +0530] "POST /subjects/PARAMED-value/versions HTTP/1.1" 200 8  15 (io.confluent.rest-utils.requests)
[2018-05-15 12:55:24,307] INFO 127.0.0.1 - - [15/May/2018:12:55:24 +0530] "POST /subjects/PARAMED-value/versions HTTP/1.1" 200 8  9 (io.confluent.rest-utils.requests)
[2018-05-15 13:54:38,791] INFO 127.0.0.1 - - [15/May/2018:13:54:38 +0530] "POST /subjects/PARAMED-value/versions HTTP/1.1" 200 8  16 (io.confluent.rest-utils.requests)
[2018-05-15 13:57:28,697] INFO 127.0.0.1 - - [15/May/2018:13:57:28 +0530] "POST /subjects/PARAMED-value/versions HTTP/1.1" 200 8  9 (io.confluent.rest-utils.requests)
[2018-05-15 13:58:12,713] INFO 127.0.0.1 - - [15/May/2018:13:58:12 +0530] "POST /subjects/PARAMED-value/versions HTTP/1.1" 200 8  13 (io.confluent.rest-utils.requests)
[2018-05-15 14:12:35,996] INFO 127.0.0.1 - - [15/May/2018:14:12:35 +0530] "POST /subjects/PARAMED-value/versions HTTP/1.1" 200 8  11 (io.confluent.rest-utils.requests)
[2018-05-15 14:14:59,613] INFO 127.0.0.1 - - [15/May/2018:14:14:59 +0530] "POST /subjects/PARAMED-value/versions HTTP/1.1" 200 8  10 (io.confluent.rest-utils.requests)
[2018-05-15 14:16:14,794] INFO 127.0.0.1 - - [15/May/2018:14:16:14 +0530] "POST /subjects/PARAMED-value/versions HTTP/1.1" 200 8  12 (io.confluent.rest-utils.requests)
[2018-05-15 14:17:58,297] INFO 127.0.0.1 - - [15/May/2018:14:17:58 +0530] "POST /subjects/PARAMED-value/versions HTTP/1.1" 200 8  36 (io.confluent.rest-utils.requests)
[2018-05-15 14:21:13,162] INFO SchemaRegistryConfig values: 
	metric.reporters = []
	kafkastore.sasl.kerberos.kinit.cmd = /usr/bin/kinit
	response.mediatype.default = application/vnd.schemaregistry.v1+json
	kafkastore.ssl.trustmanager.algorithm = PKIX
	authentication.realm = 
	ssl.keystore.type = JKS
	kafkastore.topic = _schemas
	metrics.jmx.prefix = kafka.schema.registry
	kafkastore.ssl.enabled.protocols = TLSv1.2,TLSv1.1,TLSv1
	kafkastore.topic.replication.factor = 3
	ssl.truststore.password = [hidden]
	kafkastore.timeout.ms = 500
	host.name = maya
	kafkastore.bootstrap.servers = []
	schema.registry.zk.namespace = schema_registry
	kafkastore.sasl.kerberos.ticket.renew.window.factor = 0.8
	kafkastore.sasl.kerberos.service.name = 
	schema.registry.resource.extension.class = 
	ssl.endpoint.identification.algorithm = 
	compression.enable = false
	kafkastore.ssl.truststore.type = JKS
	avro.compatibility.level = backward
	kafkastore.ssl.protocol = TLS
	kafkastore.ssl.provider = 
	kafkastore.ssl.truststore.location = 
	response.mediatype.preferred = [application/vnd.schemaregistry.v1+json, application/vnd.schemaregistry+json, application/json]
	kafkastore.ssl.keystore.type = JKS
	ssl.truststore.type = JKS
	kafkastore.ssl.truststore.password = [hidden]
	access.control.allow.origin = 
	ssl.truststore.location = 
	ssl.keystore.password = [hidden]
	port = 8081
	kafkastore.ssl.keystore.location = 
	master.eligibility = true
	ssl.client.auth = false
	kafkastore.ssl.keystore.password = [hidden]
	kafkastore.security.protocol = PLAINTEXT
	ssl.trustmanager.algorithm = 
	authentication.method = NONE
	request.logger.name = io.confluent.rest-utils.requests
	ssl.key.password = [hidden]
	kafkastore.zk.session.timeout.ms = 30000
	kafkastore.sasl.mechanism = GSSAPI
	kafkastore.sasl.kerberos.ticket.renew.jitter = 0.05
	kafkastore.ssl.key.password = [hidden]
	zookeeper.set.acl = false
	schema.registry.inter.instance.protocol = http
	authentication.roles = [*]
	metrics.num.samples = 2
	ssl.protocol = TLS
	schema.registry.group.id = schema-registry
	kafkastore.ssl.keymanager.algorithm = SunX509
	kafkastore.connection.url = localhost:2181
	debug = false
	listeners = [http://0.0.0.0:8081]
	kafkastore.group.id = 
	ssl.provider = 
	ssl.enabled.protocols = []
	shutdown.graceful.ms = 1000
	ssl.keystore.location = 
	ssl.cipher.suites = []
	kafkastore.ssl.endpoint.identification.algorithm = 
	kafkastore.ssl.cipher.suites = 
	access.control.allow.methods = 
	kafkastore.sasl.kerberos.min.time.before.relogin = 60000
	ssl.keymanager.algorithm = 
	metrics.sample.window.ms = 30000
	kafkastore.init.timeout.ms = 60000
 (io.confluent.kafka.schemaregistry.rest.SchemaRegistryConfig)
[2018-05-15 14:21:13,483] INFO Logging initialized @861ms (org.eclipse.jetty.util.log)
[2018-05-15 14:21:14,052] INFO Initializing KafkaStore with broker endpoints: PLAINTEXT://maya:9092 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-15 14:21:14,350] INFO Creating schemas topic _schemas (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-15 14:21:14,353] WARN Creating the schema topic _schemas using a replication factor of 1, which is less than the desired one of 3. If this is a production environment, it's crucial to add more brokers and increase the replication factor of the topic. (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-15 14:21:14,953] INFO Initialized last consumed offset to -1 (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-05-15 14:21:14,954] INFO [kafka-store-reader-thread-_schemas]: Starting (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-05-15 14:21:15,305] INFO Wait to catch up until the offset of the last message at 0 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-15 14:21:15,350] INFO Joining schema registry with Zookeeper-based coordination (io.confluent.kafka.schemaregistry.storage.KafkaSchemaRegistry)
[2018-05-15 14:21:15,413] INFO Created schema registry namespace localhost:2181/schema_registry (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-15 14:21:15,502] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-15 14:21:15,515] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-15 14:21:15,547] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-15 14:21:15,604] INFO Adding listener: http://0.0.0.0:8081 (io.confluent.rest.Application)
[2018-05-15 14:21:15,682] INFO jetty-9.2.22.v20170606 (org.eclipse.jetty.server.Server)
[2018-05-15 14:21:16,627] INFO HV000001: Hibernate Validator 5.1.3.Final (org.hibernate.validator.internal.util.Version)
[2018-05-15 14:21:16,800] INFO Started o.e.j.s.ServletContextHandler@5ef6ae06{/,null,AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler)
[2018-05-15 14:21:16,820] INFO Started NetworkTrafficServerConnector@3568f9d2{HTTP/1.1}{0.0.0.0:8081} (org.eclipse.jetty.server.NetworkTrafficServerConnector)
[2018-05-15 14:21:16,822] INFO Started @4202ms (org.eclipse.jetty.server.Server)
[2018-05-15 14:21:16,822] INFO Server started, listening for requests... (io.confluent.kafka.schemaregistry.rest.SchemaRegistryMain)
[2018-05-15 14:22:07,978] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-15 14:22:08,053] INFO 127.0.0.1 - - [15/May/2018:14:22:07 +0530] "POST /subjects/PARAMED-value/versions HTTP/1.1" 200 8  693 (io.confluent.rest-utils.requests)
[2018-05-15 14:44:38,738] INFO SchemaRegistryConfig values: 
	metric.reporters = []
	kafkastore.sasl.kerberos.kinit.cmd = /usr/bin/kinit
	response.mediatype.default = application/vnd.schemaregistry.v1+json
	kafkastore.ssl.trustmanager.algorithm = PKIX
	authentication.realm = 
	ssl.keystore.type = JKS
	kafkastore.topic = _schemas
	metrics.jmx.prefix = kafka.schema.registry
	kafkastore.ssl.enabled.protocols = TLSv1.2,TLSv1.1,TLSv1
	kafkastore.topic.replication.factor = 3
	ssl.truststore.password = [hidden]
	kafkastore.timeout.ms = 500
	host.name = maya
	kafkastore.bootstrap.servers = []
	schema.registry.zk.namespace = schema_registry
	kafkastore.sasl.kerberos.ticket.renew.window.factor = 0.8
	kafkastore.sasl.kerberos.service.name = 
	schema.registry.resource.extension.class = 
	ssl.endpoint.identification.algorithm = 
	compression.enable = false
	kafkastore.ssl.truststore.type = JKS
	avro.compatibility.level = backward
	kafkastore.ssl.protocol = TLS
	kafkastore.ssl.provider = 
	kafkastore.ssl.truststore.location = 
	response.mediatype.preferred = [application/vnd.schemaregistry.v1+json, application/vnd.schemaregistry+json, application/json]
	kafkastore.ssl.keystore.type = JKS
	ssl.truststore.type = JKS
	kafkastore.ssl.truststore.password = [hidden]
	access.control.allow.origin = 
	ssl.truststore.location = 
	ssl.keystore.password = [hidden]
	port = 8081
	kafkastore.ssl.keystore.location = 
	master.eligibility = true
	ssl.client.auth = false
	kafkastore.ssl.keystore.password = [hidden]
	kafkastore.security.protocol = PLAINTEXT
	ssl.trustmanager.algorithm = 
	authentication.method = NONE
	request.logger.name = io.confluent.rest-utils.requests
	ssl.key.password = [hidden]
	kafkastore.zk.session.timeout.ms = 30000
	kafkastore.sasl.mechanism = GSSAPI
	kafkastore.sasl.kerberos.ticket.renew.jitter = 0.05
	kafkastore.ssl.key.password = [hidden]
	zookeeper.set.acl = false
	schema.registry.inter.instance.protocol = http
	authentication.roles = [*]
	metrics.num.samples = 2
	ssl.protocol = TLS
	schema.registry.group.id = schema-registry
	kafkastore.ssl.keymanager.algorithm = SunX509
	kafkastore.connection.url = localhost:2181
	debug = false
	listeners = [http://0.0.0.0:8081]
	kafkastore.group.id = 
	ssl.provider = 
	ssl.enabled.protocols = []
	shutdown.graceful.ms = 1000
	ssl.keystore.location = 
	ssl.cipher.suites = []
	kafkastore.ssl.endpoint.identification.algorithm = 
	kafkastore.ssl.cipher.suites = 
	access.control.allow.methods = 
	kafkastore.sasl.kerberos.min.time.before.relogin = 60000
	ssl.keymanager.algorithm = 
	metrics.sample.window.ms = 30000
	kafkastore.init.timeout.ms = 60000
 (io.confluent.kafka.schemaregistry.rest.SchemaRegistryConfig)
[2018-05-15 14:44:39,064] INFO Logging initialized @816ms (org.eclipse.jetty.util.log)
[2018-05-15 14:44:39,619] INFO Initializing KafkaStore with broker endpoints: PLAINTEXT://maya:9092 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-15 14:44:39,912] INFO Creating schemas topic _schemas (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-15 14:44:39,915] WARN Creating the schema topic _schemas using a replication factor of 1, which is less than the desired one of 3. If this is a production environment, it's crucial to add more brokers and increase the replication factor of the topic. (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-15 14:44:40,514] INFO Initialized last consumed offset to -1 (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-05-15 14:44:40,516] INFO [kafka-store-reader-thread-_schemas]: Starting (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-05-15 14:44:40,780] INFO Wait to catch up until the offset of the last message at 0 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-15 14:44:40,826] INFO Joining schema registry with Zookeeper-based coordination (io.confluent.kafka.schemaregistry.storage.KafkaSchemaRegistry)
[2018-05-15 14:44:40,892] INFO Created schema registry namespace localhost:2181/schema_registry (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-15 14:44:40,982] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-15 14:44:41,003] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-15 14:44:41,039] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-15 14:44:41,114] INFO Adding listener: http://0.0.0.0:8081 (io.confluent.rest.Application)
[2018-05-15 14:44:41,205] INFO jetty-9.2.22.v20170606 (org.eclipse.jetty.server.Server)
[2018-05-15 14:44:42,032] INFO HV000001: Hibernate Validator 5.1.3.Final (org.hibernate.validator.internal.util.Version)
[2018-05-15 14:44:42,293] INFO Started o.e.j.s.ServletContextHandler@5ef6ae06{/,null,AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler)
[2018-05-15 14:44:42,311] INFO Started NetworkTrafficServerConnector@3568f9d2{HTTP/1.1}{0.0.0.0:8081} (org.eclipse.jetty.server.NetworkTrafficServerConnector)
[2018-05-15 14:44:42,313] INFO Started @4068ms (org.eclipse.jetty.server.Server)
[2018-05-15 14:44:42,314] INFO Server started, listening for requests... (io.confluent.kafka.schemaregistry.rest.SchemaRegistryMain)
[2018-05-15 14:45:14,095] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-15 14:45:14,150] INFO 127.0.0.1 - - [15/May/2018:14:45:13 +0530] "POST /subjects/paramed-value/versions HTTP/1.1" 200 8  435 (io.confluent.rest-utils.requests)
[2018-05-15 14:48:29,582] INFO Wait to catch up until the offset of the last message at 2 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-15 14:48:29,606] INFO 127.0.0.1 - - [15/May/2018:14:48:29 +0530] "POST /subjects/paramed1-value/versions HTTP/1.1" 200 8  30 (io.confluent.rest-utils.requests)
[2018-05-15 14:51:28,016] INFO 127.0.0.1 - - [15/May/2018:14:51:28 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 380  8 (io.confluent.rest-utils.requests)
[2018-05-15 14:52:34,271] INFO 127.0.0.1 - - [15/May/2018:14:52:34 +0530] "POST /subjects/paramed1-value/versions HTTP/1.1" 200 8  16 (io.confluent.rest-utils.requests)
[2018-05-15 14:52:34,374] INFO 127.0.0.1 - - [15/May/2018:14:52:34 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 380  30 (io.confluent.rest-utils.requests)
[2018-05-16 09:30:08,241] INFO SchemaRegistryConfig values: 
	metric.reporters = []
	kafkastore.sasl.kerberos.kinit.cmd = /usr/bin/kinit
	response.mediatype.default = application/vnd.schemaregistry.v1+json
	kafkastore.ssl.trustmanager.algorithm = PKIX
	authentication.realm = 
	ssl.keystore.type = JKS
	kafkastore.topic = _schemas
	metrics.jmx.prefix = kafka.schema.registry
	kafkastore.ssl.enabled.protocols = TLSv1.2,TLSv1.1,TLSv1
	kafkastore.topic.replication.factor = 3
	ssl.truststore.password = [hidden]
	kafkastore.timeout.ms = 500
	host.name = maya
	kafkastore.bootstrap.servers = []
	schema.registry.zk.namespace = schema_registry
	kafkastore.sasl.kerberos.ticket.renew.window.factor = 0.8
	kafkastore.sasl.kerberos.service.name = 
	schema.registry.resource.extension.class = 
	ssl.endpoint.identification.algorithm = 
	compression.enable = false
	kafkastore.ssl.truststore.type = JKS
	avro.compatibility.level = backward
	kafkastore.ssl.protocol = TLS
	kafkastore.ssl.provider = 
	kafkastore.ssl.truststore.location = 
	response.mediatype.preferred = [application/vnd.schemaregistry.v1+json, application/vnd.schemaregistry+json, application/json]
	kafkastore.ssl.keystore.type = JKS
	ssl.truststore.type = JKS
	kafkastore.ssl.truststore.password = [hidden]
	access.control.allow.origin = 
	ssl.truststore.location = 
	ssl.keystore.password = [hidden]
	port = 8081
	kafkastore.ssl.keystore.location = 
	master.eligibility = true
	ssl.client.auth = false
	kafkastore.ssl.keystore.password = [hidden]
	kafkastore.security.protocol = PLAINTEXT
	ssl.trustmanager.algorithm = 
	authentication.method = NONE
	request.logger.name = io.confluent.rest-utils.requests
	ssl.key.password = [hidden]
	kafkastore.zk.session.timeout.ms = 30000
	kafkastore.sasl.mechanism = GSSAPI
	kafkastore.sasl.kerberos.ticket.renew.jitter = 0.05
	kafkastore.ssl.key.password = [hidden]
	zookeeper.set.acl = false
	schema.registry.inter.instance.protocol = http
	authentication.roles = [*]
	metrics.num.samples = 2
	ssl.protocol = TLS
	schema.registry.group.id = schema-registry
	kafkastore.ssl.keymanager.algorithm = SunX509
	kafkastore.connection.url = localhost:2181
	debug = false
	listeners = [http://0.0.0.0:8081]
	kafkastore.group.id = 
	ssl.provider = 
	ssl.enabled.protocols = []
	shutdown.graceful.ms = 1000
	ssl.keystore.location = 
	ssl.cipher.suites = []
	kafkastore.ssl.endpoint.identification.algorithm = 
	kafkastore.ssl.cipher.suites = 
	access.control.allow.methods = 
	kafkastore.sasl.kerberos.min.time.before.relogin = 60000
	ssl.keymanager.algorithm = 
	metrics.sample.window.ms = 30000
	kafkastore.init.timeout.ms = 60000
 (io.confluent.kafka.schemaregistry.rest.SchemaRegistryConfig)
[2018-05-16 09:30:08,701] INFO Logging initialized @992ms (org.eclipse.jetty.util.log)
[2018-05-16 09:30:19,575] INFO Initializing KafkaStore with broker endpoints: PLAINTEXT://maya:9092 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-16 09:30:21,634] INFO Creating schemas topic _schemas (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-16 09:30:21,639] WARN Creating the schema topic _schemas using a replication factor of 1, which is less than the desired one of 3. If this is a production environment, it's crucial to add more brokers and increase the replication factor of the topic. (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-16 09:30:24,476] INFO Initialized last consumed offset to -1 (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-05-16 09:30:24,479] INFO [kafka-store-reader-thread-_schemas]: Starting (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-05-16 09:30:26,005] INFO Wait to catch up until the offset of the last message at 0 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-16 09:30:26,560] INFO Joining schema registry with Zookeeper-based coordination (io.confluent.kafka.schemaregistry.storage.KafkaSchemaRegistry)
[2018-05-16 09:30:26,856] INFO Created schema registry namespace localhost:2181/schema_registry (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-16 09:30:27,071] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-16 09:30:27,168] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-16 09:30:27,202] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-16 09:30:28,512] INFO Adding listener: http://0.0.0.0:8081 (io.confluent.rest.Application)
[2018-05-16 09:30:29,518] INFO jetty-9.2.22.v20170606 (org.eclipse.jetty.server.Server)
[2018-05-16 09:30:38,234] INFO HV000001: Hibernate Validator 5.1.3.Final (org.hibernate.validator.internal.util.Version)
[2018-05-16 09:30:40,743] INFO Started o.e.j.s.ServletContextHandler@5ef6ae06{/,null,AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler)
[2018-05-16 09:30:40,829] INFO Started NetworkTrafficServerConnector@3568f9d2{HTTP/1.1}{0.0.0.0:8081} (org.eclipse.jetty.server.NetworkTrafficServerConnector)
[2018-05-16 09:30:40,833] INFO Started @33125ms (org.eclipse.jetty.server.Server)
[2018-05-16 09:30:40,834] INFO Server started, listening for requests... (io.confluent.kafka.schemaregistry.rest.SchemaRegistryMain)
[2018-05-16 12:17:45,824] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-16 12:17:46,035] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-18 12:12:59,932] INFO SchemaRegistryConfig values: 
	metric.reporters = []
	kafkastore.sasl.kerberos.kinit.cmd = /usr/bin/kinit
	response.mediatype.default = application/vnd.schemaregistry.v1+json
	kafkastore.ssl.trustmanager.algorithm = PKIX
	authentication.realm = 
	ssl.keystore.type = JKS
	kafkastore.topic = _schemas
	metrics.jmx.prefix = kafka.schema.registry
	kafkastore.ssl.enabled.protocols = TLSv1.2,TLSv1.1,TLSv1
	kafkastore.topic.replication.factor = 3
	ssl.truststore.password = [hidden]
	kafkastore.timeout.ms = 500
	host.name = maya
	kafkastore.bootstrap.servers = []
	schema.registry.zk.namespace = schema_registry
	kafkastore.sasl.kerberos.ticket.renew.window.factor = 0.8
	kafkastore.sasl.kerberos.service.name = 
	schema.registry.resource.extension.class = 
	ssl.endpoint.identification.algorithm = 
	compression.enable = false
	kafkastore.ssl.truststore.type = JKS
	avro.compatibility.level = backward
	kafkastore.ssl.protocol = TLS
	kafkastore.ssl.provider = 
	kafkastore.ssl.truststore.location = 
	response.mediatype.preferred = [application/vnd.schemaregistry.v1+json, application/vnd.schemaregistry+json, application/json]
	kafkastore.ssl.keystore.type = JKS
	ssl.truststore.type = JKS
	kafkastore.ssl.truststore.password = [hidden]
	access.control.allow.origin = 
	ssl.truststore.location = 
	ssl.keystore.password = [hidden]
	port = 8081
	kafkastore.ssl.keystore.location = 
	master.eligibility = true
	ssl.client.auth = false
	kafkastore.ssl.keystore.password = [hidden]
	kafkastore.security.protocol = PLAINTEXT
	ssl.trustmanager.algorithm = 
	authentication.method = NONE
	request.logger.name = io.confluent.rest-utils.requests
	ssl.key.password = [hidden]
	kafkastore.zk.session.timeout.ms = 30000
	kafkastore.sasl.mechanism = GSSAPI
	kafkastore.sasl.kerberos.ticket.renew.jitter = 0.05
	kafkastore.ssl.key.password = [hidden]
	zookeeper.set.acl = false
	schema.registry.inter.instance.protocol = http
	authentication.roles = [*]
	metrics.num.samples = 2
	ssl.protocol = TLS
	schema.registry.group.id = schema-registry
	kafkastore.ssl.keymanager.algorithm = SunX509
	kafkastore.connection.url = localhost:2181
	debug = false
	listeners = [http://0.0.0.0:8081]
	kafkastore.group.id = 
	ssl.provider = 
	ssl.enabled.protocols = []
	shutdown.graceful.ms = 1000
	ssl.keystore.location = 
	ssl.cipher.suites = []
	kafkastore.ssl.endpoint.identification.algorithm = 
	kafkastore.ssl.cipher.suites = 
	access.control.allow.methods = 
	kafkastore.sasl.kerberos.min.time.before.relogin = 60000
	ssl.keymanager.algorithm = 
	metrics.sample.window.ms = 30000
	kafkastore.init.timeout.ms = 60000
 (io.confluent.kafka.schemaregistry.rest.SchemaRegistryConfig)
[2018-05-18 12:13:00,639] INFO Logging initialized @2891ms (org.eclipse.jetty.util.log)
[2018-05-18 12:13:02,225] INFO Initializing KafkaStore with broker endpoints: PLAINTEXT://maya:9092 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-18 12:13:02,708] INFO Creating schemas topic _schemas (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-18 12:13:02,713] WARN Creating the schema topic _schemas using a replication factor of 1, which is less than the desired one of 3. If this is a production environment, it's crucial to add more brokers and increase the replication factor of the topic. (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-18 12:13:06,980] INFO Initialized last consumed offset to -1 (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-05-18 12:13:06,982] INFO [kafka-store-reader-thread-_schemas]: Starting (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-05-18 12:13:12,562] INFO Wait to catch up until the offset of the last message at 0 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-18 12:13:13,795] INFO Joining schema registry with Zookeeper-based coordination (io.confluent.kafka.schemaregistry.storage.KafkaSchemaRegistry)
[2018-05-18 12:13:14,424] INFO Created schema registry namespace localhost:2181/schema_registry (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-18 12:13:15,160] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-18 12:13:15,677] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-05-18 12:13:15,676] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-18 12:13:19,008] INFO Adding listener: http://0.0.0.0:8081 (io.confluent.rest.Application)
[2018-05-18 12:13:20,510] INFO jetty-9.2.22.v20170606 (org.eclipse.jetty.server.Server)
[2018-05-18 12:13:34,744] INFO HV000001: Hibernate Validator 5.1.3.Final (org.hibernate.validator.internal.util.Version)
[2018-05-18 12:13:35,057] INFO Started o.e.j.s.ServletContextHandler@5ef6ae06{/,null,AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler)
[2018-05-18 12:13:35,118] INFO Started NetworkTrafficServerConnector@3568f9d2{HTTP/1.1}{0.0.0.0:8081} (org.eclipse.jetty.server.NetworkTrafficServerConnector)
[2018-05-18 12:13:35,120] INFO Started @37374ms (org.eclipse.jetty.server.Server)
[2018-05-18 12:13:35,121] INFO Server started, listening for requests... (io.confluent.kafka.schemaregistry.rest.SchemaRegistryMain)
[2018-05-18 13:24:22,692] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-05-18 13:24:23,082] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-07-07 11:35:29,504] INFO SchemaRegistryConfig values: 
	metric.reporters = []
	kafkastore.sasl.kerberos.kinit.cmd = /usr/bin/kinit
	response.mediatype.default = application/vnd.schemaregistry.v1+json
	kafkastore.ssl.trustmanager.algorithm = PKIX
	authentication.realm = 
	ssl.keystore.type = JKS
	kafkastore.topic = _schemas
	metrics.jmx.prefix = kafka.schema.registry
	kafkastore.ssl.enabled.protocols = TLSv1.2,TLSv1.1,TLSv1
	kafkastore.topic.replication.factor = 3
	ssl.truststore.password = [hidden]
	kafkastore.timeout.ms = 500
	host.name = maya
	kafkastore.bootstrap.servers = []
	schema.registry.zk.namespace = schema_registry
	kafkastore.sasl.kerberos.ticket.renew.window.factor = 0.8
	kafkastore.sasl.kerberos.service.name = 
	schema.registry.resource.extension.class = 
	ssl.endpoint.identification.algorithm = 
	compression.enable = false
	kafkastore.ssl.truststore.type = JKS
	avro.compatibility.level = backward
	kafkastore.ssl.protocol = TLS
	kafkastore.ssl.provider = 
	kafkastore.ssl.truststore.location = 
	response.mediatype.preferred = [application/vnd.schemaregistry.v1+json, application/vnd.schemaregistry+json, application/json]
	kafkastore.ssl.keystore.type = JKS
	ssl.truststore.type = JKS
	kafkastore.ssl.truststore.password = [hidden]
	access.control.allow.origin = 
	ssl.truststore.location = 
	ssl.keystore.password = [hidden]
	port = 8081
	kafkastore.ssl.keystore.location = 
	master.eligibility = true
	ssl.client.auth = false
	kafkastore.ssl.keystore.password = [hidden]
	kafkastore.security.protocol = PLAINTEXT
	ssl.trustmanager.algorithm = 
	authentication.method = NONE
	request.logger.name = io.confluent.rest-utils.requests
	ssl.key.password = [hidden]
	kafkastore.zk.session.timeout.ms = 30000
	kafkastore.sasl.mechanism = GSSAPI
	kafkastore.sasl.kerberos.ticket.renew.jitter = 0.05
	kafkastore.ssl.key.password = [hidden]
	zookeeper.set.acl = false
	schema.registry.inter.instance.protocol = http
	authentication.roles = [*]
	metrics.num.samples = 2
	ssl.protocol = TLS
	schema.registry.group.id = schema-registry
	kafkastore.ssl.keymanager.algorithm = SunX509
	kafkastore.connection.url = localhost:2181
	debug = false
	listeners = [http://0.0.0.0:8081]
	kafkastore.group.id = 
	ssl.provider = 
	ssl.enabled.protocols = []
	shutdown.graceful.ms = 1000
	ssl.keystore.location = 
	ssl.cipher.suites = []
	kafkastore.ssl.endpoint.identification.algorithm = 
	kafkastore.ssl.cipher.suites = 
	access.control.allow.methods = 
	kafkastore.sasl.kerberos.min.time.before.relogin = 60000
	ssl.keymanager.algorithm = 
	metrics.sample.window.ms = 30000
	kafkastore.init.timeout.ms = 60000
 (io.confluent.kafka.schemaregistry.rest.SchemaRegistryConfig)
[2018-07-07 11:35:30,129] INFO Logging initialized @2758ms (org.eclipse.jetty.util.log)
[2018-07-07 11:35:31,699] INFO Initializing KafkaStore with broker endpoints: PLAINTEXT://maya:9092 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-07-07 11:35:32,142] INFO Creating schemas topic _schemas (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-07-07 11:35:32,144] WARN Creating the schema topic _schemas using a replication factor of 1, which is less than the desired one of 3. If this is a production environment, it's crucial to add more brokers and increase the replication factor of the topic. (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-07-07 11:35:33,029] INFO Initialized last consumed offset to -1 (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-07-07 11:35:33,030] INFO [kafka-store-reader-thread-_schemas]: Starting (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-07-07 11:35:33,478] INFO Wait to catch up until the offset of the last message at 0 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-07-07 11:35:33,550] INFO Joining schema registry with Zookeeper-based coordination (io.confluent.kafka.schemaregistry.storage.KafkaSchemaRegistry)
[2018-07-07 11:35:33,625] INFO Created schema registry namespace localhost:2181/schema_registry (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-07-07 11:35:33,712] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-07-07 11:35:33,754] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-07-07 11:35:33,794] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-07-07 11:35:34,058] INFO Adding listener: http://0.0.0.0:8081 (io.confluent.rest.Application)
[2018-07-07 11:35:34,132] INFO jetty-9.2.22.v20170606 (org.eclipse.jetty.server.Server)
[2018-07-07 11:35:35,343] INFO HV000001: Hibernate Validator 5.1.3.Final (org.hibernate.validator.internal.util.Version)
[2018-07-07 11:35:35,619] INFO Started o.e.j.s.ServletContextHandler@5ef6ae06{/,null,AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler)
[2018-07-07 11:35:35,684] INFO Started NetworkTrafficServerConnector@3568f9d2{HTTP/1.1}{0.0.0.0:8081} (org.eclipse.jetty.server.NetworkTrafficServerConnector)
[2018-07-07 11:35:35,686] INFO Started @8317ms (org.eclipse.jetty.server.Server)
[2018-07-07 11:35:35,686] INFO Server started, listening for requests... (io.confluent.kafka.schemaregistry.rest.SchemaRegistryMain)
[2018-07-07 11:37:49,989] INFO SchemaRegistryConfig values: 
	metric.reporters = []
	kafkastore.sasl.kerberos.kinit.cmd = /usr/bin/kinit
	response.mediatype.default = application/vnd.schemaregistry.v1+json
	kafkastore.ssl.trustmanager.algorithm = PKIX
	authentication.realm = 
	ssl.keystore.type = JKS
	kafkastore.topic = _schemas
	metrics.jmx.prefix = kafka.schema.registry
	kafkastore.ssl.enabled.protocols = TLSv1.2,TLSv1.1,TLSv1
	kafkastore.topic.replication.factor = 3
	ssl.truststore.password = [hidden]
	kafkastore.timeout.ms = 500
	host.name = maya
	kafkastore.bootstrap.servers = []
	schema.registry.zk.namespace = schema_registry
	kafkastore.sasl.kerberos.ticket.renew.window.factor = 0.8
	kafkastore.sasl.kerberos.service.name = 
	schema.registry.resource.extension.class = 
	ssl.endpoint.identification.algorithm = 
	compression.enable = false
	kafkastore.ssl.truststore.type = JKS
	avro.compatibility.level = backward
	kafkastore.ssl.protocol = TLS
	kafkastore.ssl.provider = 
	kafkastore.ssl.truststore.location = 
	response.mediatype.preferred = [application/vnd.schemaregistry.v1+json, application/vnd.schemaregistry+json, application/json]
	kafkastore.ssl.keystore.type = JKS
	ssl.truststore.type = JKS
	kafkastore.ssl.truststore.password = [hidden]
	access.control.allow.origin = 
	ssl.truststore.location = 
	ssl.keystore.password = [hidden]
	port = 8081
	kafkastore.ssl.keystore.location = 
	master.eligibility = true
	ssl.client.auth = false
	kafkastore.ssl.keystore.password = [hidden]
	kafkastore.security.protocol = PLAINTEXT
	ssl.trustmanager.algorithm = 
	authentication.method = NONE
	request.logger.name = io.confluent.rest-utils.requests
	ssl.key.password = [hidden]
	kafkastore.zk.session.timeout.ms = 30000
	kafkastore.sasl.mechanism = GSSAPI
	kafkastore.sasl.kerberos.ticket.renew.jitter = 0.05
	kafkastore.ssl.key.password = [hidden]
	zookeeper.set.acl = false
	schema.registry.inter.instance.protocol = http
	authentication.roles = [*]
	metrics.num.samples = 2
	ssl.protocol = TLS
	schema.registry.group.id = schema-registry
	kafkastore.ssl.keymanager.algorithm = SunX509
	kafkastore.connection.url = localhost:2181
	debug = false
	listeners = [http://0.0.0.0:8081]
	kafkastore.group.id = 
	ssl.provider = 
	ssl.enabled.protocols = []
	shutdown.graceful.ms = 1000
	ssl.keystore.location = 
	ssl.cipher.suites = []
	kafkastore.ssl.endpoint.identification.algorithm = 
	kafkastore.ssl.cipher.suites = 
	access.control.allow.methods = 
	kafkastore.sasl.kerberos.min.time.before.relogin = 60000
	ssl.keymanager.algorithm = 
	metrics.sample.window.ms = 30000
	kafkastore.init.timeout.ms = 60000
 (io.confluent.kafka.schemaregistry.rest.SchemaRegistryConfig)
[2018-07-07 11:37:50,269] INFO Logging initialized @827ms (org.eclipse.jetty.util.log)
[2018-07-07 11:37:50,814] INFO Initializing KafkaStore with broker endpoints: PLAINTEXT://maya:9092 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-07-07 11:37:51,145] INFO Creating schemas topic _schemas (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-07-07 11:37:51,148] WARN Creating the schema topic _schemas using a replication factor of 1, which is less than the desired one of 3. If this is a production environment, it's crucial to add more brokers and increase the replication factor of the topic. (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-07-07 11:37:51,816] INFO Initialized last consumed offset to -1 (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-07-07 11:37:51,818] INFO [kafka-store-reader-thread-_schemas]: Starting (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-07-07 11:37:52,277] INFO Wait to catch up until the offset of the last message at 0 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-07-07 11:37:52,309] INFO Joining schema registry with Zookeeper-based coordination (io.confluent.kafka.schemaregistry.storage.KafkaSchemaRegistry)
[2018-07-07 11:37:52,376] INFO Created schema registry namespace localhost:2181/schema_registry (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-07-07 11:37:52,458] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-07-07 11:37:52,472] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-07-07 11:37:52,520] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-07-07 11:37:52,577] INFO Adding listener: http://0.0.0.0:8081 (io.confluent.rest.Application)
[2018-07-07 11:37:52,652] INFO jetty-9.2.22.v20170606 (org.eclipse.jetty.server.Server)
[2018-07-07 11:37:53,500] INFO HV000001: Hibernate Validator 5.1.3.Final (org.hibernate.validator.internal.util.Version)
[2018-07-07 11:37:53,691] INFO Started o.e.j.s.ServletContextHandler@5ef6ae06{/,null,AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler)
[2018-07-07 11:37:53,707] INFO Started NetworkTrafficServerConnector@3568f9d2{HTTP/1.1}{0.0.0.0:8081} (org.eclipse.jetty.server.NetworkTrafficServerConnector)
[2018-07-07 11:37:53,708] INFO Started @4269ms (org.eclipse.jetty.server.Server)
[2018-07-07 11:37:53,709] INFO Server started, listening for requests... (io.confluent.kafka.schemaregistry.rest.SchemaRegistryMain)
[2018-07-07 12:15:36,605] INFO SchemaRegistryConfig values: 
	metric.reporters = []
	kafkastore.sasl.kerberos.kinit.cmd = /usr/bin/kinit
	response.mediatype.default = application/vnd.schemaregistry.v1+json
	kafkastore.ssl.trustmanager.algorithm = PKIX
	authentication.realm = 
	ssl.keystore.type = JKS
	kafkastore.topic = _schemas
	metrics.jmx.prefix = kafka.schema.registry
	kafkastore.ssl.enabled.protocols = TLSv1.2,TLSv1.1,TLSv1
	kafkastore.topic.replication.factor = 3
	ssl.truststore.password = [hidden]
	kafkastore.timeout.ms = 500
	host.name = maya
	kafkastore.bootstrap.servers = []
	schema.registry.zk.namespace = schema_registry
	kafkastore.sasl.kerberos.ticket.renew.window.factor = 0.8
	kafkastore.sasl.kerberos.service.name = 
	schema.registry.resource.extension.class = 
	ssl.endpoint.identification.algorithm = 
	compression.enable = false
	kafkastore.ssl.truststore.type = JKS
	avro.compatibility.level = backward
	kafkastore.ssl.protocol = TLS
	kafkastore.ssl.provider = 
	kafkastore.ssl.truststore.location = 
	response.mediatype.preferred = [application/vnd.schemaregistry.v1+json, application/vnd.schemaregistry+json, application/json]
	kafkastore.ssl.keystore.type = JKS
	ssl.truststore.type = JKS
	kafkastore.ssl.truststore.password = [hidden]
	access.control.allow.origin = 
	ssl.truststore.location = 
	ssl.keystore.password = [hidden]
	port = 8081
	kafkastore.ssl.keystore.location = 
	master.eligibility = true
	ssl.client.auth = false
	kafkastore.ssl.keystore.password = [hidden]
	kafkastore.security.protocol = PLAINTEXT
	ssl.trustmanager.algorithm = 
	authentication.method = NONE
	request.logger.name = io.confluent.rest-utils.requests
	ssl.key.password = [hidden]
	kafkastore.zk.session.timeout.ms = 30000
	kafkastore.sasl.mechanism = GSSAPI
	kafkastore.sasl.kerberos.ticket.renew.jitter = 0.05
	kafkastore.ssl.key.password = [hidden]
	zookeeper.set.acl = false
	schema.registry.inter.instance.protocol = http
	authentication.roles = [*]
	metrics.num.samples = 2
	ssl.protocol = TLS
	schema.registry.group.id = schema-registry
	kafkastore.ssl.keymanager.algorithm = SunX509
	kafkastore.connection.url = localhost:2181
	debug = false
	listeners = [http://0.0.0.0:8081]
	kafkastore.group.id = 
	ssl.provider = 
	ssl.enabled.protocols = []
	shutdown.graceful.ms = 1000
	ssl.keystore.location = 
	ssl.cipher.suites = []
	kafkastore.ssl.endpoint.identification.algorithm = 
	kafkastore.ssl.cipher.suites = 
	access.control.allow.methods = 
	kafkastore.sasl.kerberos.min.time.before.relogin = 60000
	ssl.keymanager.algorithm = 
	metrics.sample.window.ms = 30000
	kafkastore.init.timeout.ms = 60000
 (io.confluent.kafka.schemaregistry.rest.SchemaRegistryConfig)
[2018-07-07 12:15:36,906] INFO Logging initialized @857ms (org.eclipse.jetty.util.log)
[2018-07-07 12:15:37,505] INFO Initializing KafkaStore with broker endpoints: PLAINTEXT://maya:9092 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-07-07 12:15:37,782] INFO Creating schemas topic _schemas (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-07-07 12:15:37,785] WARN Creating the schema topic _schemas using a replication factor of 1, which is less than the desired one of 3. If this is a production environment, it's crucial to add more brokers and increase the replication factor of the topic. (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-07-07 12:15:38,454] INFO Initialized last consumed offset to -1 (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-07-07 12:15:38,470] INFO [kafka-store-reader-thread-_schemas]: Starting (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-07-07 12:15:38,863] INFO Wait to catch up until the offset of the last message at 0 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-07-07 12:15:38,901] INFO Joining schema registry with Zookeeper-based coordination (io.confluent.kafka.schemaregistry.storage.KafkaSchemaRegistry)
[2018-07-07 12:15:38,983] INFO Created schema registry namespace localhost:2181/schema_registry (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-07-07 12:15:39,088] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-07-07 12:15:39,104] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-07-07 12:15:39,144] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-07-07 12:15:39,211] INFO Adding listener: http://0.0.0.0:8081 (io.confluent.rest.Application)
[2018-07-07 12:15:39,279] INFO jetty-9.2.22.v20170606 (org.eclipse.jetty.server.Server)
[2018-07-07 12:15:40,149] INFO HV000001: Hibernate Validator 5.1.3.Final (org.hibernate.validator.internal.util.Version)
[2018-07-07 12:15:40,366] INFO Started o.e.j.s.ServletContextHandler@5ef6ae06{/,null,AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler)
[2018-07-07 12:15:40,379] INFO Started NetworkTrafficServerConnector@3568f9d2{HTTP/1.1}{0.0.0.0:8081} (org.eclipse.jetty.server.NetworkTrafficServerConnector)
[2018-07-07 12:15:40,381] INFO Started @4334ms (org.eclipse.jetty.server.Server)
[2018-07-07 12:15:40,381] INFO Server started, listening for requests... (io.confluent.kafka.schemaregistry.rest.SchemaRegistryMain)
[2018-08-02 12:14:01,838] INFO SchemaRegistryConfig values: 
	metric.reporters = []
	kafkastore.sasl.kerberos.kinit.cmd = /usr/bin/kinit
	response.mediatype.default = application/vnd.schemaregistry.v1+json
	kafkastore.ssl.trustmanager.algorithm = PKIX
	authentication.realm = 
	ssl.keystore.type = JKS
	kafkastore.topic = _schemas
	metrics.jmx.prefix = kafka.schema.registry
	kafkastore.ssl.enabled.protocols = TLSv1.2,TLSv1.1,TLSv1
	kafkastore.topic.replication.factor = 3
	ssl.truststore.password = [hidden]
	kafkastore.timeout.ms = 500
	host.name = maya
	kafkastore.bootstrap.servers = []
	schema.registry.zk.namespace = schema_registry
	kafkastore.sasl.kerberos.ticket.renew.window.factor = 0.8
	kafkastore.sasl.kerberos.service.name = 
	schema.registry.resource.extension.class = 
	ssl.endpoint.identification.algorithm = 
	compression.enable = false
	kafkastore.ssl.truststore.type = JKS
	avro.compatibility.level = backward
	kafkastore.ssl.protocol = TLS
	kafkastore.ssl.provider = 
	kafkastore.ssl.truststore.location = 
	response.mediatype.preferred = [application/vnd.schemaregistry.v1+json, application/vnd.schemaregistry+json, application/json]
	kafkastore.ssl.keystore.type = JKS
	ssl.truststore.type = JKS
	kafkastore.ssl.truststore.password = [hidden]
	access.control.allow.origin = 
	ssl.truststore.location = 
	ssl.keystore.password = [hidden]
	port = 8081
	kafkastore.ssl.keystore.location = 
	master.eligibility = true
	ssl.client.auth = false
	kafkastore.ssl.keystore.password = [hidden]
	kafkastore.security.protocol = PLAINTEXT
	ssl.trustmanager.algorithm = 
	authentication.method = NONE
	request.logger.name = io.confluent.rest-utils.requests
	ssl.key.password = [hidden]
	kafkastore.zk.session.timeout.ms = 30000
	kafkastore.sasl.mechanism = GSSAPI
	kafkastore.sasl.kerberos.ticket.renew.jitter = 0.05
	kafkastore.ssl.key.password = [hidden]
	zookeeper.set.acl = false
	schema.registry.inter.instance.protocol = http
	authentication.roles = [*]
	metrics.num.samples = 2
	ssl.protocol = TLS
	schema.registry.group.id = schema-registry
	kafkastore.ssl.keymanager.algorithm = SunX509
	kafkastore.connection.url = localhost:2181
	debug = false
	listeners = [http://0.0.0.0:8081]
	kafkastore.group.id = 
	ssl.provider = 
	ssl.enabled.protocols = []
	shutdown.graceful.ms = 1000
	ssl.keystore.location = 
	ssl.cipher.suites = []
	kafkastore.ssl.endpoint.identification.algorithm = 
	kafkastore.ssl.cipher.suites = 
	access.control.allow.methods = 
	kafkastore.sasl.kerberos.min.time.before.relogin = 60000
	ssl.keymanager.algorithm = 
	metrics.sample.window.ms = 30000
	kafkastore.init.timeout.ms = 60000
 (io.confluent.kafka.schemaregistry.rest.SchemaRegistryConfig)
[2018-08-02 12:14:02,340] INFO Logging initialized @2495ms (org.eclipse.jetty.util.log)
[2018-08-02 12:14:03,480] INFO Initializing KafkaStore with broker endpoints: PLAINTEXT://maya:9092 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-08-02 12:14:03,923] INFO Creating schemas topic _schemas (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-08-02 12:14:03,927] WARN Creating the schema topic _schemas using a replication factor of 1, which is less than the desired one of 3. If this is a production environment, it's crucial to add more brokers and increase the replication factor of the topic. (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-08-02 12:14:04,778] INFO Initialized last consumed offset to -1 (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-08-02 12:14:04,780] INFO [kafka-store-reader-thread-_schemas]: Starting (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-08-02 12:14:05,103] INFO Wait to catch up until the offset of the last message at 0 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-08-02 12:14:05,160] INFO Joining schema registry with Zookeeper-based coordination (io.confluent.kafka.schemaregistry.storage.KafkaSchemaRegistry)
[2018-08-02 12:14:05,250] INFO Created schema registry namespace localhost:2181/schema_registry (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-08-02 12:14:05,428] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-08-02 12:14:05,478] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-08-02 12:14:05,484] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-08-02 12:14:05,668] INFO Adding listener: http://0.0.0.0:8081 (io.confluent.rest.Application)
[2018-08-02 12:14:05,744] INFO jetty-9.2.22.v20170606 (org.eclipse.jetty.server.Server)
[2018-08-02 12:14:06,878] INFO HV000001: Hibernate Validator 5.1.3.Final (org.hibernate.validator.internal.util.Version)
[2018-08-02 12:14:07,137] INFO Started o.e.j.s.ServletContextHandler@5ef6ae06{/,null,AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler)
[2018-08-02 12:14:07,156] INFO Started NetworkTrafficServerConnector@3568f9d2{HTTP/1.1}{0.0.0.0:8081} (org.eclipse.jetty.server.NetworkTrafficServerConnector)
[2018-08-02 12:14:07,158] INFO Started @7316ms (org.eclipse.jetty.server.Server)
[2018-08-02 12:14:07,159] INFO Server started, listening for requests... (io.confluent.kafka.schemaregistry.rest.SchemaRegistryMain)
[2018-08-02 16:05:03,969] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-08-02 16:05:04,257] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-08-13 14:14:09,012] INFO SchemaRegistryConfig values: 
	metric.reporters = []
	kafkastore.sasl.kerberos.kinit.cmd = /usr/bin/kinit
	response.mediatype.default = application/vnd.schemaregistry.v1+json
	kafkastore.ssl.trustmanager.algorithm = PKIX
	authentication.realm = 
	ssl.keystore.type = JKS
	kafkastore.topic = _schemas
	metrics.jmx.prefix = kafka.schema.registry
	kafkastore.ssl.enabled.protocols = TLSv1.2,TLSv1.1,TLSv1
	kafkastore.topic.replication.factor = 3
	ssl.truststore.password = [hidden]
	kafkastore.timeout.ms = 500
	host.name = maya
	kafkastore.bootstrap.servers = []
	schema.registry.zk.namespace = schema_registry
	kafkastore.sasl.kerberos.ticket.renew.window.factor = 0.8
	kafkastore.sasl.kerberos.service.name = 
	schema.registry.resource.extension.class = 
	ssl.endpoint.identification.algorithm = 
	compression.enable = false
	kafkastore.ssl.truststore.type = JKS
	avro.compatibility.level = backward
	kafkastore.ssl.protocol = TLS
	kafkastore.ssl.provider = 
	kafkastore.ssl.truststore.location = 
	response.mediatype.preferred = [application/vnd.schemaregistry.v1+json, application/vnd.schemaregistry+json, application/json]
	kafkastore.ssl.keystore.type = JKS
	ssl.truststore.type = JKS
	kafkastore.ssl.truststore.password = [hidden]
	access.control.allow.origin = 
	ssl.truststore.location = 
	ssl.keystore.password = [hidden]
	port = 8081
	kafkastore.ssl.keystore.location = 
	master.eligibility = true
	ssl.client.auth = false
	kafkastore.ssl.keystore.password = [hidden]
	kafkastore.security.protocol = PLAINTEXT
	ssl.trustmanager.algorithm = 
	authentication.method = NONE
	request.logger.name = io.confluent.rest-utils.requests
	ssl.key.password = [hidden]
	kafkastore.zk.session.timeout.ms = 30000
	kafkastore.sasl.mechanism = GSSAPI
	kafkastore.sasl.kerberos.ticket.renew.jitter = 0.05
	kafkastore.ssl.key.password = [hidden]
	zookeeper.set.acl = false
	schema.registry.inter.instance.protocol = http
	authentication.roles = [*]
	metrics.num.samples = 2
	ssl.protocol = TLS
	schema.registry.group.id = schema-registry
	kafkastore.ssl.keymanager.algorithm = SunX509
	kafkastore.connection.url = localhost:2181
	debug = false
	listeners = [http://0.0.0.0:8081]
	kafkastore.group.id = 
	ssl.provider = 
	ssl.enabled.protocols = []
	shutdown.graceful.ms = 1000
	ssl.keystore.location = 
	ssl.cipher.suites = []
	kafkastore.ssl.endpoint.identification.algorithm = 
	kafkastore.ssl.cipher.suites = 
	access.control.allow.methods = 
	kafkastore.sasl.kerberos.min.time.before.relogin = 60000
	ssl.keymanager.algorithm = 
	metrics.sample.window.ms = 30000
	kafkastore.init.timeout.ms = 60000
 (io.confluent.kafka.schemaregistry.rest.SchemaRegistryConfig)
[2018-08-13 14:14:09,772] INFO Logging initialized @3101ms (org.eclipse.jetty.util.log)
[2018-08-13 14:14:10,904] INFO Initializing KafkaStore with broker endpoints: PLAINTEXT://maya:9092 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-08-13 14:14:11,474] INFO Creating schemas topic _schemas (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-08-13 14:14:11,479] WARN Creating the schema topic _schemas using a replication factor of 1, which is less than the desired one of 3. If this is a production environment, it's crucial to add more brokers and increase the replication factor of the topic. (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-08-13 14:14:12,421] INFO Initialized last consumed offset to -1 (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-08-13 14:14:12,458] INFO [kafka-store-reader-thread-_schemas]: Starting (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-08-13 14:14:13,024] INFO Wait to catch up until the offset of the last message at 0 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-08-13 14:14:13,141] INFO Joining schema registry with Zookeeper-based coordination (io.confluent.kafka.schemaregistry.storage.KafkaSchemaRegistry)
[2018-08-13 14:14:13,207] INFO Created schema registry namespace localhost:2181/schema_registry (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-08-13 14:14:13,319] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-08-13 14:14:13,347] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-08-13 14:14:13,385] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-08-13 14:14:13,601] INFO Adding listener: http://0.0.0.0:8081 (io.confluent.rest.Application)
[2018-08-13 14:14:13,772] INFO jetty-9.2.22.v20170606 (org.eclipse.jetty.server.Server)
[2018-08-13 14:14:15,648] INFO HV000001: Hibernate Validator 5.1.3.Final (org.hibernate.validator.internal.util.Version)
[2018-08-13 14:14:16,199] INFO Started o.e.j.s.ServletContextHandler@5ef6ae06{/,null,AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler)
[2018-08-13 14:14:16,220] INFO Started NetworkTrafficServerConnector@3568f9d2{HTTP/1.1}{0.0.0.0:8081} (org.eclipse.jetty.server.NetworkTrafficServerConnector)
[2018-08-13 14:14:16,223] INFO Started @9557ms (org.eclipse.jetty.server.Server)
[2018-08-13 14:14:16,224] INFO Server started, listening for requests... (io.confluent.kafka.schemaregistry.rest.SchemaRegistryMain)
[2018-08-13 14:28:14,535] INFO SchemaRegistryConfig values: 
	metric.reporters = []
	kafkastore.sasl.kerberos.kinit.cmd = /usr/bin/kinit
	response.mediatype.default = application/vnd.schemaregistry.v1+json
	kafkastore.ssl.trustmanager.algorithm = PKIX
	authentication.realm = 
	ssl.keystore.type = JKS
	kafkastore.topic = _schemas
	metrics.jmx.prefix = kafka.schema.registry
	kafkastore.ssl.enabled.protocols = TLSv1.2,TLSv1.1,TLSv1
	kafkastore.topic.replication.factor = 3
	ssl.truststore.password = [hidden]
	kafkastore.timeout.ms = 500
	host.name = maya
	kafkastore.bootstrap.servers = []
	schema.registry.zk.namespace = schema_registry
	kafkastore.sasl.kerberos.ticket.renew.window.factor = 0.8
	kafkastore.sasl.kerberos.service.name = 
	schema.registry.resource.extension.class = 
	ssl.endpoint.identification.algorithm = 
	compression.enable = false
	kafkastore.ssl.truststore.type = JKS
	avro.compatibility.level = backward
	kafkastore.ssl.protocol = TLS
	kafkastore.ssl.provider = 
	kafkastore.ssl.truststore.location = 
	response.mediatype.preferred = [application/vnd.schemaregistry.v1+json, application/vnd.schemaregistry+json, application/json]
	kafkastore.ssl.keystore.type = JKS
	ssl.truststore.type = JKS
	kafkastore.ssl.truststore.password = [hidden]
	access.control.allow.origin = 
	ssl.truststore.location = 
	ssl.keystore.password = [hidden]
	port = 8081
	kafkastore.ssl.keystore.location = 
	master.eligibility = true
	ssl.client.auth = false
	kafkastore.ssl.keystore.password = [hidden]
	kafkastore.security.protocol = PLAINTEXT
	ssl.trustmanager.algorithm = 
	authentication.method = NONE
	request.logger.name = io.confluent.rest-utils.requests
	ssl.key.password = [hidden]
	kafkastore.zk.session.timeout.ms = 30000
	kafkastore.sasl.mechanism = GSSAPI
	kafkastore.sasl.kerberos.ticket.renew.jitter = 0.05
	kafkastore.ssl.key.password = [hidden]
	zookeeper.set.acl = false
	schema.registry.inter.instance.protocol = http
	authentication.roles = [*]
	metrics.num.samples = 2
	ssl.protocol = TLS
	schema.registry.group.id = schema-registry
	kafkastore.ssl.keymanager.algorithm = SunX509
	kafkastore.connection.url = localhost:2181
	debug = false
	listeners = [http://0.0.0.0:8081]
	kafkastore.group.id = 
	ssl.provider = 
	ssl.enabled.protocols = []
	shutdown.graceful.ms = 1000
	ssl.keystore.location = 
	ssl.cipher.suites = []
	kafkastore.ssl.endpoint.identification.algorithm = 
	kafkastore.ssl.cipher.suites = 
	access.control.allow.methods = 
	kafkastore.sasl.kerberos.min.time.before.relogin = 60000
	ssl.keymanager.algorithm = 
	metrics.sample.window.ms = 30000
	kafkastore.init.timeout.ms = 60000
 (io.confluent.kafka.schemaregistry.rest.SchemaRegistryConfig)
[2018-08-13 14:28:14,815] INFO Logging initialized @905ms (org.eclipse.jetty.util.log)
[2018-08-13 14:28:16,356] INFO Initializing KafkaStore with broker endpoints: PLAINTEXT://maya:9092 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-08-13 14:28:16,687] INFO Creating schemas topic _schemas (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-08-13 14:28:16,690] WARN Creating the schema topic _schemas using a replication factor of 1, which is less than the desired one of 3. If this is a production environment, it's crucial to add more brokers and increase the replication factor of the topic. (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-08-13 14:28:17,509] INFO Initialized last consumed offset to -1 (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-08-13 14:28:17,511] INFO [kafka-store-reader-thread-_schemas]: Starting (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-08-13 14:28:17,790] INFO Wait to catch up until the offset of the last message at 0 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-08-13 14:28:17,850] INFO Joining schema registry with Zookeeper-based coordination (io.confluent.kafka.schemaregistry.storage.KafkaSchemaRegistry)
[2018-08-13 14:28:17,924] INFO Created schema registry namespace localhost:2181/schema_registry (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-08-13 14:28:18,029] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-08-13 14:28:18,042] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-08-13 14:28:18,091] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-08-13 14:28:18,149] INFO Adding listener: http://0.0.0.0:8081 (io.confluent.rest.Application)
[2018-08-13 14:28:18,219] INFO jetty-9.2.22.v20170606 (org.eclipse.jetty.server.Server)
[2018-08-13 14:28:19,138] INFO HV000001: Hibernate Validator 5.1.3.Final (org.hibernate.validator.internal.util.Version)
[2018-08-13 14:28:19,394] INFO Started o.e.j.s.ServletContextHandler@5ef6ae06{/,null,AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler)
[2018-08-13 14:28:19,413] INFO Started NetworkTrafficServerConnector@3568f9d2{HTTP/1.1}{0.0.0.0:8081} (org.eclipse.jetty.server.NetworkTrafficServerConnector)
[2018-08-13 14:28:19,420] INFO Started @5513ms (org.eclipse.jetty.server.Server)
[2018-08-13 14:28:19,420] INFO Server started, listening for requests... (io.confluent.kafka.schemaregistry.rest.SchemaRegistryMain)
[2018-08-13 14:37:23,222] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-08-13 14:37:23,328] INFO 127.0.0.1 - - [13/Aug/2018:14:37:22 +0530] "POST /subjects/registering-value/versions HTTP/1.1" 200 8  614 (io.confluent.rest-utils.requests)
[2018-08-13 14:37:23,896] INFO Wait to catch up until the offset of the last message at 2 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-08-13 14:37:23,921] INFO 127.0.0.1 - - [13/Aug/2018:14:37:23 +0530] "POST /subjects/booking-value/versions HTTP/1.1" 200 8  30 (io.confluent.rest-utils.requests)
[2018-08-13 14:37:24,377] INFO Wait to catch up until the offset of the last message at 3 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-08-13 14:37:24,407] INFO 127.0.0.1 - - [13/Aug/2018:14:37:24 +0530] "POST /subjects/payment-value/versions HTTP/1.1" 200 8  38 (io.confluent.rest-utils.requests)
[2018-08-13 14:37:27,704] INFO 127.0.0.1 - - [13/Aug/2018:14:37:27 +0530] "GET /schemas/ids/2 HTTP/1.1" 200 380  29 (io.confluent.rest-utils.requests)
[2018-08-13 14:37:27,771] INFO 127.0.0.1 - - [13/Aug/2018:14:37:27 +0530] "GET /schemas/ids/1 HTTP/1.1" 200 253  5 (io.confluent.rest-utils.requests)
[2018-08-13 14:37:27,783] INFO 127.0.0.1 - - [13/Aug/2018:14:37:27 +0530] "GET /schemas/ids/3 HTTP/1.1" 200 310  8 (io.confluent.rest-utils.requests)
[2018-08-13 14:37:27,792] INFO Wait to catch up until the offset of the last message at 4 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-08-13 14:37:27,812] INFO 127.0.0.1 - - [13/Aug/2018:14:37:27 +0530] "POST /subjects/booking-KSTREAM-AGGREGATE-STATE-STORE-0000000005-repartition-value/versions HTTP/1.1" 200 8  26 (io.confluent.rest-utils.requests)
[2018-08-13 14:37:27,963] INFO Wait to catch up until the offset of the last message at 5 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-08-13 14:37:27,980] INFO 127.0.0.1 - - [13/Aug/2018:14:37:27 +0530] "POST /subjects/booking-KSTREAM-AGGREGATE-STATE-STORE-0000000005-changelog-value/versions HTTP/1.1" 200 8  21 (io.confluent.rest-utils.requests)
[2018-08-13 14:45:55,010] INFO SchemaRegistryConfig values: 
	metric.reporters = []
	kafkastore.sasl.kerberos.kinit.cmd = /usr/bin/kinit
	response.mediatype.default = application/vnd.schemaregistry.v1+json
	kafkastore.ssl.trustmanager.algorithm = PKIX
	authentication.realm = 
	ssl.keystore.type = JKS
	kafkastore.topic = _schemas
	metrics.jmx.prefix = kafka.schema.registry
	kafkastore.ssl.enabled.protocols = TLSv1.2,TLSv1.1,TLSv1
	kafkastore.topic.replication.factor = 3
	ssl.truststore.password = [hidden]
	kafkastore.timeout.ms = 500
	host.name = maya
	kafkastore.bootstrap.servers = []
	schema.registry.zk.namespace = schema_registry
	kafkastore.sasl.kerberos.ticket.renew.window.factor = 0.8
	kafkastore.sasl.kerberos.service.name = 
	schema.registry.resource.extension.class = 
	ssl.endpoint.identification.algorithm = 
	compression.enable = false
	kafkastore.ssl.truststore.type = JKS
	avro.compatibility.level = backward
	kafkastore.ssl.protocol = TLS
	kafkastore.ssl.provider = 
	kafkastore.ssl.truststore.location = 
	response.mediatype.preferred = [application/vnd.schemaregistry.v1+json, application/vnd.schemaregistry+json, application/json]
	kafkastore.ssl.keystore.type = JKS
	ssl.truststore.type = JKS
	kafkastore.ssl.truststore.password = [hidden]
	access.control.allow.origin = 
	ssl.truststore.location = 
	ssl.keystore.password = [hidden]
	port = 8081
	kafkastore.ssl.keystore.location = 
	master.eligibility = true
	ssl.client.auth = false
	kafkastore.ssl.keystore.password = [hidden]
	kafkastore.security.protocol = PLAINTEXT
	ssl.trustmanager.algorithm = 
	authentication.method = NONE
	request.logger.name = io.confluent.rest-utils.requests
	ssl.key.password = [hidden]
	kafkastore.zk.session.timeout.ms = 30000
	kafkastore.sasl.mechanism = GSSAPI
	kafkastore.sasl.kerberos.ticket.renew.jitter = 0.05
	kafkastore.ssl.key.password = [hidden]
	zookeeper.set.acl = false
	schema.registry.inter.instance.protocol = http
	authentication.roles = [*]
	metrics.num.samples = 2
	ssl.protocol = TLS
	schema.registry.group.id = schema-registry
	kafkastore.ssl.keymanager.algorithm = SunX509
	kafkastore.connection.url = localhost:2181
	debug = false
	listeners = [http://0.0.0.0:8081]
	kafkastore.group.id = 
	ssl.provider = 
	ssl.enabled.protocols = []
	shutdown.graceful.ms = 1000
	ssl.keystore.location = 
	ssl.cipher.suites = []
	kafkastore.ssl.endpoint.identification.algorithm = 
	kafkastore.ssl.cipher.suites = 
	access.control.allow.methods = 
	kafkastore.sasl.kerberos.min.time.before.relogin = 60000
	ssl.keymanager.algorithm = 
	metrics.sample.window.ms = 30000
	kafkastore.init.timeout.ms = 60000
 (io.confluent.kafka.schemaregistry.rest.SchemaRegistryConfig)
[2018-08-13 14:45:55,525] INFO Logging initialized @2281ms (org.eclipse.jetty.util.log)
[2018-08-13 14:45:56,779] INFO Initializing KafkaStore with broker endpoints: PLAINTEXT://maya:9092 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-08-13 14:45:57,383] INFO Creating schemas topic _schemas (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-08-13 14:45:57,386] WARN Creating the schema topic _schemas using a replication factor of 1, which is less than the desired one of 3. If this is a production environment, it's crucial to add more brokers and increase the replication factor of the topic. (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-08-13 14:45:58,272] INFO Initialized last consumed offset to -1 (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-08-13 14:45:58,273] INFO [kafka-store-reader-thread-_schemas]: Starting (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-08-13 14:45:58,621] INFO Wait to catch up until the offset of the last message at 0 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-08-13 14:45:58,681] INFO Joining schema registry with Zookeeper-based coordination (io.confluent.kafka.schemaregistry.storage.KafkaSchemaRegistry)
[2018-08-13 14:45:58,799] INFO Created schema registry namespace localhost:2181/schema_registry (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-08-13 14:45:58,925] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-08-13 14:45:58,940] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-08-13 14:45:58,989] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-08-13 14:45:59,111] INFO Adding listener: http://0.0.0.0:8081 (io.confluent.rest.Application)
[2018-08-13 14:45:59,200] INFO jetty-9.2.22.v20170606 (org.eclipse.jetty.server.Server)
[2018-08-13 14:46:00,441] INFO HV000001: Hibernate Validator 5.1.3.Final (org.hibernate.validator.internal.util.Version)
[2018-08-13 14:46:00,772] INFO Started o.e.j.s.ServletContextHandler@5ef6ae06{/,null,AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler)
[2018-08-13 14:46:00,806] INFO Started NetworkTrafficServerConnector@3568f9d2{HTTP/1.1}{0.0.0.0:8081} (org.eclipse.jetty.server.NetworkTrafficServerConnector)
[2018-08-13 14:46:00,808] INFO Started @7567ms (org.eclipse.jetty.server.Server)
[2018-08-13 14:46:00,808] INFO Server started, listening for requests... (io.confluent.kafka.schemaregistry.rest.SchemaRegistryMain)
[2018-08-30 16:54:03,051] INFO SchemaRegistryConfig values: 
	metric.reporters = []
	kafkastore.sasl.kerberos.kinit.cmd = /usr/bin/kinit
	response.mediatype.default = application/vnd.schemaregistry.v1+json
	kafkastore.ssl.trustmanager.algorithm = PKIX
	authentication.realm = 
	ssl.keystore.type = JKS
	kafkastore.topic = _schemas
	metrics.jmx.prefix = kafka.schema.registry
	kafkastore.ssl.enabled.protocols = TLSv1.2,TLSv1.1,TLSv1
	kafkastore.topic.replication.factor = 3
	ssl.truststore.password = [hidden]
	kafkastore.timeout.ms = 500
	host.name = maya
	kafkastore.bootstrap.servers = []
	schema.registry.zk.namespace = schema_registry
	kafkastore.sasl.kerberos.ticket.renew.window.factor = 0.8
	kafkastore.sasl.kerberos.service.name = 
	schema.registry.resource.extension.class = 
	ssl.endpoint.identification.algorithm = 
	compression.enable = false
	kafkastore.ssl.truststore.type = JKS
	avro.compatibility.level = backward
	kafkastore.ssl.protocol = TLS
	kafkastore.ssl.provider = 
	kafkastore.ssl.truststore.location = 
	response.mediatype.preferred = [application/vnd.schemaregistry.v1+json, application/vnd.schemaregistry+json, application/json]
	kafkastore.ssl.keystore.type = JKS
	ssl.truststore.type = JKS
	kafkastore.ssl.truststore.password = [hidden]
	access.control.allow.origin = 
	ssl.truststore.location = 
	ssl.keystore.password = [hidden]
	port = 8081
	kafkastore.ssl.keystore.location = 
	master.eligibility = true
	ssl.client.auth = false
	kafkastore.ssl.keystore.password = [hidden]
	kafkastore.security.protocol = PLAINTEXT
	ssl.trustmanager.algorithm = 
	authentication.method = NONE
	request.logger.name = io.confluent.rest-utils.requests
	ssl.key.password = [hidden]
	kafkastore.zk.session.timeout.ms = 30000
	kafkastore.sasl.mechanism = GSSAPI
	kafkastore.sasl.kerberos.ticket.renew.jitter = 0.05
	kafkastore.ssl.key.password = [hidden]
	zookeeper.set.acl = false
	schema.registry.inter.instance.protocol = http
	authentication.roles = [*]
	metrics.num.samples = 2
	ssl.protocol = TLS
	schema.registry.group.id = schema-registry
	kafkastore.ssl.keymanager.algorithm = SunX509
	kafkastore.connection.url = localhost:2181
	debug = false
	listeners = [http://0.0.0.0:8081]
	kafkastore.group.id = 
	ssl.provider = 
	ssl.enabled.protocols = []
	shutdown.graceful.ms = 1000
	ssl.keystore.location = 
	ssl.cipher.suites = []
	kafkastore.ssl.endpoint.identification.algorithm = 
	kafkastore.ssl.cipher.suites = 
	access.control.allow.methods = 
	kafkastore.sasl.kerberos.min.time.before.relogin = 60000
	ssl.keymanager.algorithm = 
	metrics.sample.window.ms = 30000
	kafkastore.init.timeout.ms = 60000
 (io.confluent.kafka.schemaregistry.rest.SchemaRegistryConfig)
[2018-08-30 16:54:04,479] INFO Logging initialized @5085ms (org.eclipse.jetty.util.log)
[2018-08-30 16:54:06,807] INFO Initializing KafkaStore with broker endpoints: PLAINTEXT://maya:9092 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-08-30 16:54:07,758] INFO Creating schemas topic _schemas (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-08-30 16:54:07,766] WARN Creating the schema topic _schemas using a replication factor of 1, which is less than the desired one of 3. If this is a production environment, it's crucial to add more brokers and increase the replication factor of the topic. (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-08-30 16:54:09,123] INFO Initialized last consumed offset to -1 (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-08-30 16:54:09,127] INFO [kafka-store-reader-thread-_schemas]: Starting (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2018-08-30 16:54:09,829] INFO Wait to catch up until the offset of the last message at 0 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-08-30 16:54:09,952] INFO Joining schema registry with Zookeeper-based coordination (io.confluent.kafka.schemaregistry.storage.KafkaSchemaRegistry)
[2018-08-30 16:54:10,049] INFO Created schema registry namespace localhost:2181/schema_registry (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-08-30 16:54:10,173] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-08-30 16:54:10,209] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2018-08-30 16:54:10,328] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-08-30 16:54:10,727] INFO Adding listener: http://0.0.0.0:8081 (io.confluent.rest.Application)
[2018-08-30 16:54:11,046] INFO jetty-9.2.22.v20170606 (org.eclipse.jetty.server.Server)
[2018-08-30 16:54:13,634] INFO HV000001: Hibernate Validator 5.1.3.Final (org.hibernate.validator.internal.util.Version)
[2018-08-30 16:54:14,080] INFO Started o.e.j.s.ServletContextHandler@5ef6ae06{/,null,AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler)
[2018-08-30 16:54:14,107] INFO Started NetworkTrafficServerConnector@3568f9d2{HTTP/1.1}{0.0.0.0:8081} (org.eclipse.jetty.server.NetworkTrafficServerConnector)
[2018-08-30 16:54:14,109] INFO Started @14727ms (org.eclipse.jetty.server.Server)
[2018-08-30 16:54:14,110] INFO Server started, listening for requests... (io.confluent.kafka.schemaregistry.rest.SchemaRegistryMain)
[2018-08-30 22:01:27,737] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2018-08-30 22:01:33,714] INFO Successfully elected the new master: {"host":"maya","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
